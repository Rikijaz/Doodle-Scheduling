{"version":3,"sources":["components/logo.png","components/Snackbar.js","components/DoodleCalendar.js","components/AddSecondPage.js","components/firebase.js","components/InviteContacts.js","components/AddThirdPage.js","components/AddEvent.js","components/Form.js","components/Invite.js","components/Cards.js","components/Modal/Modal.js","components/EventCalendar/EventCalendar.js","components/EventHome.js","components/AddContact.js","components/ViewContacts.js","components/header.js","components/Join.js","components/EventManager.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","props","classes","className","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","close","onClick","DoodleCalendar","handleEventRemove","event","selectedIntervals","state","index","findIndex","interval","uid","splice","setState","handleEventUpdate","handleSelect","newIntervals","lastUid","intervals","map","concat","length","parentMethod","dayFormat","startTime","moment","h","m","endTime","scaleUnit","cellHeight","scaleFormat","numberOfDays","this","onIntervalSelect","onIntervalUpdate","onIntervalRemove","useModal","eventSpacing","React","Component","AddSecondPage","changeCalendar","calendar","onEventSubmitted","eventData","console","log","start","format","eventStartDate","eventEndDate","end","startDate","endDate","localStorage","setItem","JSON","stringify","renderCalendar","e","children","renderButtons","Button","type","size","goToFirstPage","goToThirdPage","endIcon","cancelEvent","parse","getItem","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","InviteContacts","useState","personEmail","setPersonEmail","emails","setEmails","useEffect","collection","doc","get","then","exists","temp","data","contacts","c","email","setSharedEvent","FormControl","InputLabel","Select","labelId","multiple","value","onChange","target","input","Input","renderValue","selected","join","name","MenuItem","Checkbox","checked","indexOf","ListItemText","AddThirdPage","handleCheckbox","renderOptions","FormGroup","row","FormControlLabel","control","label","renderContactDropdown","l","list","invite_list","goToSecondPage","submitEvent","categories","Object","freeze","None","Hobbies","Social","Errands","Projects","Miscellaneous","AddEvent","handleErrorClose","reason","errorMessageOpen","handleSuccessClose","successMessageOpen","handleTitle","t","title","handleDescription","des","description","onSubmitFirstPage","preventDefault","category","firstPage","secondPage","thirdPage","handleCategoryMenuClick","selectedCategory","handleClose","anchorEl","openMenu","handleClick","currentTarget","invitees","code","makeCode","idOfEditEvent","editingEvent","uuid","v4","update","set","owners","accepted_invitees","declined_invitees","setHomePage","result","characters","charactersLength","i","charAt","Math","floor","random","viewForm","Container","maxWidth","onSubmit","TextField","placeholder","fullWidth","margin","aria-controls","aria-haspopup","Menu","open","style","textAlign","shared","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Form","contentList","emailList","handleChange","bind","handleSubmit","events","required","feedback","width","height","sendFeedback","message_html","from_name","reply_to","handleDisplay","templateId","variables","window","emailjs","send","res","catch","err","Transition","forwardRef","ref","Slide","direction","Invite","setOpen","currentUser","fix","setFix","Dialog","TransitionComponent","keepMounted","aria-labelledby","DialogTitle","DialogContent","n","includes","filter","DialogActions","Cards","handleShareEvent","startShare","expanded","isShared","hasAccepted","shareStatus","invitePeople","editButton","editEvent","deleteButton","deleteEvent","acceptIcon","acceptInvite","declineInvite","Card","CardContent","Typography","gutterBottom","component","CardActions","aria-expanded","Collapse","in","timeout","unmountOnExit","radius","marginBottom","marginTop","Modal","show","calendarEventDayData","date","split","EventCalendar","showModal","onDateClick","day","selectedDate","nextMonth","currentMonth","dateFns","prevMonth","Date","a","b","valueOf","days","push","areThereEvents","undefined","areThereSharedEvents","sharedEvents","duplicate","eventDate","calendarEventData","calendarData","isEvent","calendarEventDay","calendarEventMonth","multipleEventsTitle","monthStart","monthEnd","rows","formattedDate","calendarEvents","j","sort","compareEventStartDates","replace","toString","renderHeader","renderDays","renderCells","EventHome","sendEmail","showForm","switchEventView","showShared","setEventOrder","order","handleClose3","eventSortOrder","showEvents","showSharedEvents","showAcceptedEvents","showCalendar","displayedEvents","isSearching","filteredEvents","compareEventStartDatesAscending","compareEventStartDatesDescending","compareEventCategory","areThereNoEvents","areThereNoSharedEvents","acceptedEvents","areNoAcceptedEvents","handleSearch","text","search","filterEvents","filteredSharedEvents","filteredAcceptedEvents","eventsToFilter","searchLowerCase","toLowerCase","getMainStyle","padding","background","getBtnStyle","handleAddEventMenu","beginAddEvent","handleClick2","anchorEl2","openMenu2","handleClick3","anchorEl3","openMenu3","handleClose2","handleJoinEventMenu","beginJoinEvent","delete","document","FieldValue","arrayRemove","arrayUnion","handleMenuClick","tempObject","unsubscribe1","where","onSnapshot","forEach","unsubscribe2","unsubscribe3","AddContact","userInput","setUserInput","errorOpen","setErrorOpen","successOpen","setSuccessOpen","setMessage","DialogContentText","autoFocus","docSnapshot","displayName","ViewContacts","setListofContacts","listOfContacts","contact","headerStyle","headButtonStyle","Header","user","addContactsPrompt","src","logo","alt","Link","to","Join","querySnapshot","empty","EventManager","removeItem","setAdd","joinEvent","viewShared","homePage","joinDialog","logInStyle","top","position","uiConfig","signInFlow","signInOptions","provider","auth","GoogleAuthProvider","PROVIDER_ID","authMethod","clientId","EmailAuthProvider","requireDisplayName","callbacks","signInSuccessWithAuthResult","Login","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","handleUploadSuccess","filename","profilePic","child","getDownloadURL","url","picURL","componentDidMount","onAuthStateChanged","isSignedIn","docReference","documentSnapshot","polls","pictureURL","photoURL","bio","nameDisplay","userName","current_user_email","bioDisplay","userBio","signOut","clear","updateDb","vertical-align","border-radius","borderRadius","cursor","hidden","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","cols","uiCallback","ui","disableAutoSignIn","firebaseAuth","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52e6c471.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.88ca5a89.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MySnackbarContent);","import React from 'react';\r\nimport moment from 'moment';\r\nimport WeekCalendar from 'react-week-calendar';\r\n\r\n// garbage text for testing pull requests to dev\r\n\r\nexport default class DoodleCalendar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastUid: 1,\r\n      selectedIntervals: [\r\n        // {\r\n        //   uid: 1,\r\n        //   start: moment({h: 6, m: 30}),\r\n        //   end: moment({h: 7, m: 59}),\r\n        //   value: \"CS150 exam\"\r\n        // },\r\n      ]\r\n    }\r\n  }\r\n\r\n  handleEventRemove = (event) => {\r\n    const {selectedIntervals} = this.state;\r\n    //console.log('Removing event');\r\n\r\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\r\n    if (index > -1) {\r\n      selectedIntervals.splice(index, 1);\r\n      this.setState({selectedIntervals});\r\n    }\r\n\r\n  }\r\n\r\n  handleEventUpdate = (event) => {\r\n    const {selectedIntervals} = this.state;\r\n    //console.log('Updating event');\r\n\r\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\r\n    if (index > -1) {\r\n      selectedIntervals[index] = event;\r\n      this.setState({selectedIntervals});\r\n    }\r\n  }\r\n\r\n  handleSelect = (newIntervals) => {\r\n    const {lastUid, selectedIntervals} = this.state;\r\n    const intervals = newIntervals.map( (interval, index) => {\r\n\r\n      return {\r\n        ...interval,\r\n        uid: lastUid + index\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      selectedIntervals: selectedIntervals.concat(intervals),\r\n      lastUid: lastUid + newIntervals.length\r\n    })\r\n\r\n    this.props.parentMethod(intervals);\r\n  }\r\n\r\n  render() {\r\n    return <WeekCalendar\r\n      dayFormat = {'dd, MM.DD'}\r\n      startTime = {moment({h: 5, m: 0})}\r\n      endTime = {moment({h: 23, m: 0})}\r\n      scaleUnit = {15}\r\n      cellHeight = {20}\r\n      scaleFormat = {'hh:mm a'}\r\n      numberOfDays= {7}\r\n      selectedIntervals = {this.state.selectedIntervals}\r\n      onIntervalSelect = {this.handleSelect}\r\n      onIntervalUpdate = {this.handleEventUpdate}\r\n      onIntervalRemove = {this.handleEventRemove}\r\n      useModal = {true}\r\n      eventSpacing = {0}\r\n      />\r\n  }\r\n}","import React, { Component } from \"react\";\r\n//import { TextField } from '@material-ui/core';\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DoodleCalendar from \"./DoodleCalendar\";\r\nimport \"react-week-calendar/dist/style.css\";\r\nimport moment from \"moment\";\r\n\r\nexport class AddSecondPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // time: JSON.parse(localStorage.getItem(\"saved_time\")),\r\n            // date: JSON.parse(localStorage.getItem(\"saved_date\")),\r\n            startDate: JSON.parse(localStorage.getItem(\"saved_start_date\")),\r\n            endDate: JSON.parse(localStorage.getItem(\"saved_end_date\")),\r\n            calendar: \"default\"\r\n        };\r\n    }\r\n\r\n    // eric's stuff //\r\n    changeCalendar = calendar => {\r\n        this.setState({ calendar });\r\n    };\r\n\r\n    onEventSubmitted = eventData => {\r\n        console.log(eventData[0].start.format());\r\n        console.log(moment(eventData[0].start.format()).format(\"LLLL\"));\r\n\r\n        // //right now it should only take in one date & one range of time\r\n        // let x = new Date(eventData[0].start.format(\"LLLL\"));\r\n        // let y = new Date(eventData[0].end.format(\"LLLL\"));\r\n        // let start = x.getHours().toString() + \":\" + x.getMinutes().toString();\r\n        // let end = y.getHours().toString() + \":\" + y.getMinutes().toString();\r\n        // let together = start + \"-\" + end;\r\n        // let date = (x.getMonth() + 1).toString() + \"/\" + x.getDate().toString();\r\n        // localStorage.setItem(\"saved_date\", JSON.stringify(date));\r\n        // localStorage.setItem(\"saved_time\", JSON.stringify(together));\r\n\r\n        var eventStartDate = eventData[0].start.format();\r\n        var eventEndDate = eventData[0].end.format();\r\n\r\n        this.setState({ startDate: eventStartDate, endDate: eventEndDate });\r\n\r\n        localStorage.setItem(\"saved_start_date\", JSON.stringify(eventStartDate));\r\n        localStorage.setItem(\"saved_end_date\", JSON.stringify(eventEndDate));\r\n        // https://momentjs.com/docs/#/parsing/string-format/ if you are looking for a different time format\r\n    };\r\n\r\n    // eric's stuff //\r\n\r\n    render() {\r\n        //eric's shit\r\n\r\n        //eslint-disable-next-line\r\n        const calendar = this.state.calendar;\r\n        //let renderCalendar = null;\r\n\r\n        return (\r\n            <div>\r\n                {this.renderCalendar()}\r\n                {this.renderButtons()}\r\n            </div>\r\n        );\r\n    }\r\n    renderCalendar = () => {\r\n        return (\r\n            <div>\r\n                <h3>Choose your time!</h3>\r\n                <DoodleCalendar parentMethod={e => this.onEventSubmitted(e)}>\r\n                    {this.props.children}\r\n                </DoodleCalendar>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderButtons = () => {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={this.props.goToFirstPage}\r\n                >\r\n                    Back\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={e =>\r\n                        this.props.goToThirdPage(\r\n                            this.state.startDate,\r\n                            this.state.endDate,\r\n                            e\r\n                        )\r\n                    }\r\n                >\r\n                    Next\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"userCancelButton\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    endIcon={<CancelIcon />}\r\n                    onClick={this.props.cancelEvent}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AddSecondPage;\r\n/*  \r\n    Eric's Stuff that was added in:\r\n        renderCalendar\r\n        calendar\r\n        DoodleCalendar\r\n        onEventSubmitted\r\n        changeCalendar\r\n        calendar in state\r\n        DoodleCalendar.js\r\n\r\n\r\n\r\n*/\r\n","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAmcdm-nCXD4ahr4EwKddfHQ_vpqkMEPWA\",\r\n    authDomain: \"cs180-schedulingapp.firebaseapp.com\",\r\n    databaseURL: \"https://cs180-schedulingapp.firebaseio.com\",\r\n    projectId: \"cs180-schedulingapp\",\r\n    storageBucket: \"cs180-schedulingapp.appspot.com\",\r\n    messagingSenderId: \"350264880268\",\r\n    appId: \"1:350264880268:web:4fb4718431afc39b6e9fa9\",\r\n    measurementId: \"G-DBB71H8E8J\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nexport {firebase, db};\r\nexport const storage = firebase.storage();","/* eslint-disable no-unused-expressions */\r\nimport React, { useEffect } from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { db } from \"./firebase\";\r\n\r\nexport default function InviteContacts(props) {\r\n    const [personEmail, setPersonEmail] = React.useState([]);\r\n\r\n    const handleChange = event => {\r\n        setPersonEmail(event.target.value);\r\n        console.log(event.target.value);\r\n    };\r\n\r\n    const [emails, setEmails] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"1\")\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    let temp = doc.data().contacts.map(c => {\r\n                        return c.email;\r\n                    });\r\n                    setEmails(temp);\r\n                }\r\n            });\r\n\r\n    },[]);\r\n\r\n     //if add props to dependencies, infinite useEffect, dont do it\r\n    useEffect(() => {\r\n        console.log(\"2\")\r\n        props.setSharedEvent(personEmail);\r\n        // eslint-disable-next-line\r\n    },[personEmail]);\r\n\r\n    return (\r\n        <div>\r\n            <FormControl>\r\n                <InputLabel id=\"demo-mutiple-checkbox-label\">Select Contacts to Invite</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-checkbox-label\"\r\n                    id=\"demo-mutiple-checkbox\"\r\n                    multiple\r\n                    value={personEmail}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => selected.join(\", \")}\r\n                >\r\n                    {emails.map(name => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox\r\n                                checked={personEmail.indexOf(name) > -1}\r\n                            />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InviteContacts from \"./InviteContacts\";\r\n\r\nexport class AddThirdPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n            invite_list: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderOptions()}\r\n                <br />\r\n                {this.renderButtons()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //functions\r\n\r\n    /**\r\n     * toggles check of checkbox\r\n     */\r\n    handleCheckbox = () => {\r\n        this.setState({ checked: !this.state.checked });\r\n    };\r\n\r\n    /**\r\n     * Rendering invite options\r\n     */\r\n    renderOptions = () => {\r\n        return (\r\n            <div>\r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={this.state.checked}\r\n                                value={this.state.checked}\r\n                                onChange={() => this.handleCheckbox()}\r\n                            />\r\n                        }\r\n                        label=\"Make this event shareable\"\r\n                    />\r\n                </FormGroup>\r\n                {this.renderContactDropdown()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderContactDropdown = () => {\r\n        if (this.state.checked) {\r\n            return (\r\n                <InviteContacts setSharedEvent={l => this.setSharedEvent(l)} />\r\n            );\r\n        }\r\n    };\r\n\r\n    setSharedEvent = list => {\r\n        this.setState({ invite_list: list });\r\n    };\r\n\r\n    //We are rendering buttons separately from options\r\n    /**\r\n     * Rendering buttons\r\n     */\r\n    renderButtons = () => {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={this.props.goToSecondPage}\r\n                >\r\n                    Back\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={e =>\r\n                        this.props.submitEvent(e, this.state.invite_list)\r\n                    }\r\n                >\r\n                    Submit Event\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"userCancelButton\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    endIcon={<CancelIcon />}\r\n                    onClick={this.props.cancelEvent}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AddThirdPage;\r\n","import React, { Component } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\nimport AddSecondPage from \"./AddSecondPage\";\r\nimport AddThirdPage from \"./AddThirdPage\";\r\nimport { db } from \"./firebase\";\r\nimport uuid from \"uuid\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport const categories = Object.freeze({\r\n    None: \"None\",\r\n    Hobbies: \"Hobbies\",\r\n    Social: \"Social\",\r\n    Errands: \"Errands\",\r\n    Projects: \"Projects\",\r\n    Miscellaneous: \"Miscellaneous\",\r\n});\r\n\r\nexport class AddEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //event variables\r\n            title: JSON.parse(localStorage.getItem(\"saved_title\")) || \"\",\r\n            description:\r\n                JSON.parse(localStorage.getItem(\"saved_description\")) || \"\",\r\n            startDate: JSON.parse(localStorage.getItem(\"saved_start_date\")) || \"\",\r\n            endDate: JSON.parse(localStorage.getItem(\"saved_end_date\")) || \"\",\r\n            category: JSON.parse(localStorage.getItem(\"saved_category\")) || categories.None,\r\n            calendar: \"default\",\r\n\r\n            //variables to keep track of pages & state\r\n            firstPage: true,\r\n            secondPage: false,\r\n            thirdPage: false,\r\n\r\n            //for social aspect\r\n            //invitees and owners will be emails\r\n            owners: [JSON.parse(localStorage.getItem(\"currentUser\"))], //every time event created, user will be owner\r\n            shared: false, //if this is being shared\r\n            invitees: [], //this only if being shared\r\n\r\n            //snackbar errors\r\n            errorMessageOpen: false,\r\n            message: \"\",\r\n            successMessageOpen: false,\r\n\r\n            // Category\r\n            anchorEl: null,\r\n            openMenu: false,\r\n        };\r\n    }\r\n\r\n    //----- snackbar functions -----\r\n    handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ errorMessageOpen: false });\r\n    };\r\n    handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ successMessageOpen: false });\r\n    };\r\n\r\n    //----- end of snackbar functions -----\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.viewForm()}\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.errorMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleErrorClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleErrorClose}\r\n                        variant=\"error\"\r\n                        message={this.state.message}\r\n                    />\r\n                </Snackbar>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.successMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSuccessClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleSuccessClose}\r\n                        variant=\"success\"\r\n                        message={\"New event has been created\"}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //----- first page functions -----\r\n    /**\r\n     * @param {*} t takes user input and sets it equal to title\r\n     */\r\n    handleTitle = t => {\r\n        this.setState({ title: t.target.value });\r\n    };\r\n\r\n    /**\r\n     * @param {*} des takes user input and sets it equal to description\r\n     */\r\n    handleDescription = des => {\r\n        this.setState({ description: des.target.value });\r\n    };\r\n\r\n    /**\r\n     * Submits user input of title and description\r\n     * @param {*} e Takes in event of pressing button\r\n     * @return sets state to go to second page and saves title\r\n     * and description to local storage\r\n     */\r\n    onSubmitFirstPage = e => {\r\n        e.preventDefault();\r\n        //when they go back from second page, the data still there\r\n        if (this.state.title !== \"\" && this.state.title !== null) {\r\n            localStorage.setItem(\r\n                \"saved_title\",\r\n                JSON.stringify(this.state.title)\r\n            );\r\n            localStorage.setItem(\r\n                \"saved_description\",\r\n                JSON.stringify(this.state.description)\r\n            );\r\n            localStorage.setItem(\r\n                \"saved_category\",\r\n                JSON.stringify(this.state.category)\r\n            );\r\n            //going to second page & unrendering first page\r\n            this.setState({ firstPage: false, secondPage: true });\r\n        } else {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Please input a title!\"\r\n            });\r\n        }\r\n    };\r\n    //----- end of first page functions -----\r\n\r\n    //----- second page functions -----\r\n    /**\r\n     * If you hit back on the second page, it goes back to first page\r\n     */\r\n    goToFirstPage = () => {\r\n        this.setState({ firstPage: true, secondPage: false });\r\n    };\r\n    //redo error messages later when implementing another date and time picker\r\n\r\n    /**\r\n     * @param {string=} startDate Takes in start date from eric's calendar\r\n     * @param {string=} endDate Takes in end date from eric's calendar\r\n     * @param {*} e Takes in event of hitting button to go to next page\r\n     * @return Sets date and time in state\r\n     * @return error message if date & time are null\r\n     */\r\n    goToThirdPage = (startDate, endDate, e) => {\r\n        e.preventDefault();\r\n        if (startDate !== null && startDate !== \"\" && endDate !== null && endDate !== \"\") {\r\n            this.setState({\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                firstPage: false,\r\n                secondPage: false,\r\n                thirdPage: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Please input a date and time!\"\r\n            });\r\n        }\r\n    };\r\n    //----- end of second page functions -----\r\n\r\n    //----- third page functions -----\r\n    /**\r\n     * Goes back to second page when hitting back on third page\r\n     */\r\n    goToSecondPage = () => {\r\n        this.setState({ firstPage: false, secondPage: true, thirdPage: false });\r\n    };\r\n\r\n    handleCategoryMenuClick = selectedCategory => {\r\n        this.handleClose();\r\n        this.setState({ category: selectedCategory });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, openMenu: !this.state.openMenu });\r\n    };\r\n\r\n    \r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n\r\n    /**\r\n     * When creating/editing event, it adds/edits it to the database./\r\n     * If the event is going to be shared, it will add it to the\r\n     * shared event collection\r\n     * @param {*} e takes in event of hitting submit event\r\n     * @return saves to firestore database and goes back to home page\r\n     * @todo fix edit event\r\n     */\r\n    submitEvent = (e, invitees) => {\r\n        e.preventDefault();\r\n        let code = this.makeCode(5);\r\n        const { idOfEditEvent, editingEvent } = this.props;\r\n        const id = uuid.v4();\r\n        \r\n        if (!editingEvent) {\r\n            //add new event\r\n            db.collection(\"events\")\r\n                .doc(id)\r\n                .set({\r\n                    id: id,\r\n                    code: code,\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    category: this.state.category,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate,\r\n                    owners: this.state.owners,\r\n                    accepted_invitees: [],\r\n                    declined_invitees: [],\r\n                    invitees: invitees\r\n                });\r\n        } else {\r\n            //editing event\r\n            db.collection(\"events\")\r\n                .doc(idOfEditEvent)\r\n                .update({\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    category: this.state.category,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate,\r\n                    invitees: invitees\r\n                });\r\n        }\r\n        this.props.setHomePage();\r\n    };\r\n\r\n    makeCode = length => {\r\n        var result = \"\";\r\n        var characters =\r\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(\r\n                Math.floor(Math.random() * charactersLength)\r\n            );\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} check if checkbox is clicked to make event shareable\r\n     * @param {Array} list populatex invitees with contacts' emails\r\n     * @todo this list will be populated with people outside the contact list\r\n     */\r\n\r\n    //----- end of third page functions -----\r\n\r\n    /**\r\n     * Decides what to display when adding event by\r\n     * conditionally renders new pages\r\n     */\r\n    viewForm = () => {\r\n        const btnStyle = {\r\n            textAlign: \"right\"\r\n        };\r\n\r\n        //this will be the same as AddFirstPage\r\n        //just grabbing title and description\r\n        if (this.state.firstPage) {\r\n            return (\r\n                <div>\r\n                    <Container maxWidth=\"sm\">\r\n                        <form onSubmit={e => this.onSubmitFirstPage(e)}>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Event Name\"\r\n                                fullWidth\r\n                                value={this.state.title}\r\n                                margin=\"normal\"\r\n                                onChange={title => this.handleTitle(title)}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Event Description ... Optional\"\r\n                                fullWidth\r\n                                value={this.state.description}\r\n                                margin=\"normal\"\r\n                                onChange={des => this.handleDescription(des)}\r\n                            />\r\n                            {/* <div style={this.getBtnStyle()}> */}\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                aria-controls=\"simple-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={e => this.handleClick(e)}\r\n                            >\r\n                                {this.state.category}\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"simple-menu\"\r\n                                anchorEl={this.state.anchorEl}\r\n                                open={this.state.openMenu}\r\n                                onClose={this.handleClose}\r\n                            >\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Hobbies)}>\r\n                                {categories.Hobbies}\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Social)}>\r\n                                {categories.Social}\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Errands)}>\r\n                                {categories.Errands}\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Projects)}>\r\n                                {categories.Projects}\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Miscellaneous)}>\r\n                                {categories.Miscellaneous}\r\n                                </MenuItem>\r\n                            </Menu>\r\n                            {/* </div> */}\r\n                            <br />\r\n                            <div style={btnStyle}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"userContinueButton\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    endIcon={<ArrowForwardIcon />}\r\n                                    onClick={e => this.onSubmitFirstPage(e)}\r\n                                >\r\n                                    Continue\r\n                                </Button>\r\n                            </div>\r\n                            <Button\r\n                                type=\"button\"\r\n                                className=\"userCancelButton\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                endIcon={<CancelIcon />}\r\n                                onClick={this.props.cancelEvent}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </form>\r\n                    </Container>\r\n                </div>\r\n            );\r\n        } else if (this.state.secondPage) {\r\n            return (\r\n                <div>\r\n                    <AddSecondPage\r\n                        cancelEvent={this.props.cancelEvent}\r\n                        goToFirstPage={() => this.goToFirstPage()}\r\n                        goToThirdPage={(startDate, endDate, e) =>\r\n                            this.goToThirdPage(startDate, endDate, e)\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (this.state.thirdPage) {\r\n            return (\r\n                <div>\r\n                    <AddThirdPage\r\n                        goToSecondPage={() => this.goToSecondPage()}\r\n                        cancelEvent={this.props.cancelEvent}\r\n                        submitEvent={(e, invitees) =>\r\n                            this.submitEvent(e, invitees)\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default AddEvent;\r\n","import React from 'react';\r\nimport { db } from './firebase'\r\nexport default class Form extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { contentList: [], emailList: [], };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit =\r\n\t\t\tthis.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdb\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n\t\t\t.get()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (data.exists) {\r\n\t\t\t\t\tthis.setState({ emailList: data.data().contacts, contentList: data.data().events })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"test-mailing\">\r\n\t\t\t\t<h1>Let's see if it works</h1>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"test-mailing\"\r\n\t\t\t\t\t\tname=\"test-mailing\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder=\"Send event\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.feedback}\r\n\t\t\t\t\t\tstyle={{ width: '100%', height: '150px' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tthis.setState({ feedback: event.target.value })\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tconst templateId = 'yes';\r\n\r\n\t\tthis.sendFeedback(templateId, { message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email })\r\n\t\tthis.props.handleDisplay();\r\n\t}\r\n\r\n\tsendFeedback(templateId, variables) {\r\n\t\twindow.emailjs.send(\"gmail\", templateId, { \"send_to\": this.state.emailList, \"content\": this.state.contentList })   // insert custom emails for send_to\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log('Email successfully sent!');\r\n\t\t\t\tconsole.log(variables);\r\n\t\t\t})\r\n\t\t\t// Handle errors here however you like, or use a React error boundary\r\n\t\t\t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\r\n\t}\r\n}","import React, { useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Invite(props) {\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n\r\n    const [personEmail, setPersonEmail] = React.useState([]);\r\n\r\n    const [emails, setEmails] = React.useState([]);\r\n\r\n    //this is because personEmail will be empty on first render\r\n    //since useState callback\r\n    const [fix, setFix] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {*} n an email that user selected\r\n     * @return {array} array with user included or not included\r\n     */\r\n    const handleChange = n => {\r\n        if (!personEmail.includes(n)) {\r\n            setPersonEmail([...personEmail, n]);\r\n        } else {\r\n            setPersonEmail(personEmail.filter(email => email !== n));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection(\"users\")\r\n            .doc(currentUser)\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    let temp = doc.data().contacts.map(c => {\r\n                        return c.email;\r\n                    });\r\n                    setEmails(temp);\r\n                }\r\n            });\r\n        db.collection(\"events\")\r\n            .doc(props.id)\r\n            .get()\r\n            .then(doc => {\r\n                setPersonEmail(doc.data().invitees); //this will finish after next useEffect\r\n                setFix(true); //so you need this line\r\n            });\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (fix) {\r\n            db.collection(\"events\")\r\n                .doc(props.id)\r\n                .update({\r\n                    invitees: personEmail\r\n                });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [personEmail]);\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"Invite More\"}</DialogTitle>\r\n                <DialogContent>\r\n                    {emails.map(name => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox\r\n                                checked={personEmail.indexOf(name) > -1}\r\n                                onChange={() => handleChange(name)}\r\n                            />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PieChart from 'react-minimal-pie-chart';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport Invite from \"./Invite\";\r\nimport moment from \"moment\";\r\n\r\nclass Cards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            startShare: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const handleExpandClick = () => {\r\n            this.setState({ expanded: !this.state.expanded });\r\n        };\r\n        const { data, isShared, hasAccepted } = this.props;\r\n        let invitees = data.invitees ? data.invitees.join(\"\\n\") : \"\";\r\n        let shareStatus = isShared ? \"Shared event\" : \"Made by me\";\r\n        let invitePeople = this.state.startShare ? (\r\n            <Invite id={data.id} open={this.state.startShare} />\r\n        ) : null;\r\n        let editButton = !isShared ? (\r\n            <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={() => this.props.editEvent(data.id)}\r\n            >\r\n                edit\r\n            </Button>\r\n        ) : null;\r\n        let deleteButton = !isShared ? (\r\n            <IconButton\r\n                aria-label=\"delete\"\r\n                onClick={() => this.props.deleteEvent(data.id)}\r\n            >\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        ) : null;\r\n\r\n        let acceptIcon = (isShared && !hasAccepted)? (\r\n            <div>\r\n                <IconButton onClick = {() => this.props.acceptInvite(data.id)}>\r\n                <CheckIcon/>\r\n            </IconButton>\r\n            <IconButton onClick = {() => this.props.declineInvite(data.id)}>\r\n                <ClearIcon/>\r\n            </IconButton>\r\n            </div>\r\n        ) : null;\r\n\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            {shareStatus}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {data.title}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {data.category}\r\n                        </Typography>\r\n                        <Typography>{data.description}</Typography>\r\n                        <Typography>{moment(data.startDate).format(\"LLLL\")+ \" - \" + moment(data.endDate).format(\"LT\")}</Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        {editButton}\r\n                        <IconButton\r\n                            aria-label=\"share\"\r\n                            onClick={() => this.handleShareEvent()}\r\n                        >\r\n                            <ShareIcon />\r\n                        </IconButton>\r\n                        {deleteButton}\r\n                        <IconButton\r\n                            onClick={handleExpandClick}\r\n                            aria-expanded={this.state.expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </IconButton>\r\n                        {acceptIcon}\r\n                    </CardActions>\r\n                    <Collapse\r\n                        in={this.state.expanded}\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                    >\r\n                        <CardContent>\r\n                            \r\n                            <PieChart data = {[\r\n                                {title: \"People confirmed going\", value: data.owners.length + data.accepted_invitees.length, color : \"#00e676\"},\r\n                                {title: \"People who might go\", value: data.invitees.length, color : \"#fff59d\"},\r\n                                {title: \"People who won't go\", value: data.declined_invitees.length, color : \"#78909c\"}\r\n                            ]} radius = {50} style={{\r\n                                height: '125px',\r\n                                marginBottom: '2em',\r\n                                marginTop : '0',\r\n                                display: 'flex'\r\n\r\n                              }}/>\r\n                            <Typography>\r\n                                Owners: {data.owners}\r\n                                <br />\r\n                                Invitees: {data.invitees}\r\n                                <br />\r\n                                Accepted Invitees: {data.accepted_invitees}\r\n                                <br />\r\n                                Declined Invitees: {data.declined_invitees}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Collapse>\r\n                </Card>\r\n                {invitePeople}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param id id of event to be shared with others\r\n     * @return pop up with checkboxes like the third page, select\r\n     * people to invite from contacts\r\n     */\r\n    handleShareEvent = () => {\r\n        this.setState({ startShare: !this.state.startShare });\r\n    };\r\n}\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nexport default class Modal extends React.Component {\r\n  /**\r\n   * Closes modal\r\n   */\r\n  onClose = e => {\r\n    this.props.onClose && this.props.onClose(e);\r\n  };\r\n\r\n  /**\r\n   * Renders modal with event data\r\n   */\r\n  render() {\r\n    if (!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    var description = \"\";\r\n    console.log(this.props.calendarEventDayData.events);\r\n\r\n    for (let i = 0; i < this.props.calendarEventDayData.events.length; ++i) {\r\n      var startTime = moment(this.props.calendarEventDayData.events[i].startDate).format(\"LT\");\r\n      var endTime = moment(this.props.calendarEventDayData.events[i].endDate).format(\"LT\");\r\n      var header = startTime + \" - \" + endTime + \": \" + this.props.calendarEventDayData.events[i].title;\r\n\r\n      description += header + \"\\n\" + this.props.calendarEventDayData.events[i].description + \"\\n\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"modal\" id=\"modal\">\r\n        <h2>{moment(this.props.calendarEventDayData.date).format(\"dddd\" + \" \"+ \"L\")}</h2>\r\n        <div className=\"content\">\r\n        {description.split(\"\\n\").map((i,key) => { return <div key={key}>{i}</div>; })}\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button className=\"toggle-button\" onClick={this.onClose}>\r\n            close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired\r\n};","import React from \"react\";\r\nimport * as dateFns from 'date-fns';\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./EventCalendar.css\";\r\nimport moment from \"moment\";\r\n\r\nexport class EventCalendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: new Date(),\r\n            selectedDate: null,\r\n            show: false,\r\n            title: \"\",\r\n            calendarEventDayData: null\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Comparator for ordering events.\r\n     * Used for days where there are multiple events.\r\n     */\r\n    compareEventStartDates(a, b) {\r\n        if ( moment(a.startDate).valueOf() < moment(b.startDate).valueOf() ){\r\n            return -1;\r\n        }\r\n\r\n        if ( moment(a.startDate).valueOf() > moment(b.startDate).valueOf() ){\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Updates modal state to display the events data\r\n     */\r\n    showModal = (calendarEventDayData) => {\r\n        this.calendarEventDayData = calendarEventDayData;\r\n\r\n        this.setState({\r\n          show: !this.state.show,\r\n          calendarEventDayData: this.calendarEventDayData,\r\n        });\r\n      };\r\n\r\n    /**\r\n     * Calendar header\r\n     */\r\n    renderHeader() {\r\n        const dateFormat = \"MMMM yyyy\";\r\n\r\n        return (\r\n            <div className=\"header row flex-middle\">\r\n                <div className=\"col col-start\">\r\n                    <div className=\"icon\" onClick={this.prevMonth}>\r\n                        chevron_left\r\n          </div>\r\n                </div>\r\n                <div className=\"col col-center\">\r\n                    <span>{dateFns.format(this.state.currentMonth, dateFormat)}</span>\r\n                </div>\r\n                <div className=\"col col-end\" onClick={this.nextMonth}>\r\n                    <div className=\"icon\">chevron_right</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Calendar week days\r\n     */\r\n    renderDays() {\r\n        const dateFormat = \"iiii\";\r\n        const days = [];\r\n\r\n        let startDate = dateFns.startOfWeek(this.state.currentMonth);\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            days.push(\r\n                <div className=\"col col-center\" key={i}>\r\n                    {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <div className=\"days row\">{days}</div>;\r\n    }\r\n\r\n\r\n    /**\r\n     * Calendar days\r\n     */\r\n    renderCells() {\r\n        var areThereEvents = !(\r\n            this.props.events === null ||\r\n            this.props.events === undefined || \r\n            this.props.events.length === 0);\r\n        \r\n        var areThereSharedEvents = !(\r\n            this.props.sharedEvents === null ||\r\n            this.props.sharedEvents === undefined ||\r\n            this.props.sharedEvents.length === 0);\r\n\r\n        if (areThereEvents || areThereSharedEvents) {\r\n            const { currentMonth, selectedDate } = this.state;\r\n            const monthStart = dateFns.startOfMonth(currentMonth);\r\n            const monthEnd = dateFns.endOfMonth(monthStart);\r\n            const startDate = dateFns.startOfWeek(monthStart);\r\n            const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n            const dateFormat = \"d\";\r\n            const rows = [];\r\n\r\n            let days = [];\r\n            let day = startDate;\r\n            let formattedDate = \"\";\r\n\r\n            let eventData = [];\r\n            if (areThereEvents) {\r\n                for (let i = 0; i < this.props.events.length; ++i) {\r\n                    if (moment(this.props.events[i].startDate).format(\"L\").split('/')[0] == dateFns.getMonth(currentMonth) + 1) {\r\n                        var data = {\r\n                            date: this.props.events[i].date,\r\n                            title: this.props.events[i].title,\r\n                            description: this.props.events[i].description,\r\n                            startDate: this.props.events[i].startDate,\r\n                            endDate: this.props.events[i].endDate,\r\n                        }\r\n        \r\n                        eventData.push(data)\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (areThereSharedEvents) {\r\n                for (let i = 0; i < this.props.sharedEvents.length; ++i) {\r\n                    if (moment(this.props.sharedEvents[i].startDate).format('L').split('/')[0]== dateFns.getMonth(currentMonth) + 1) {\r\n                        var data = {\r\n                            date: this.props.sharedEvents[i].date,\r\n                            title: this.props.sharedEvents[i].title,\r\n                            description: this.props.sharedEvents[i].description,\r\n                            startDate: this.props.sharedEvents[i].startDate,\r\n                            endDate: this.props.sharedEvents[i].endDate,\r\n                        }\r\n        \r\n                        eventData.push(data)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            let calendarEvents = [];\r\n\r\n            for (let i = 0; i < eventData.length; ++i) {\r\n\r\n                var duplicate = false;\r\n                var  eventDate = moment(eventData[i].startDate).format('L');\r\n                var calendarEventData = {\r\n                    title: eventData[i].title, \r\n                    description: eventData[i].description,\r\n                    startDate: eventData[i].startDate,\r\n                    endDate: eventData[i].endDate\r\n                }\r\n\r\n                for (let j = 0; j < calendarEvents.length && !duplicate; ++j) {\r\n                    if (calendarEvents[j].date === eventDate) {\r\n                        duplicate = true;\r\n                        \r\n                        calendarEvents[j].events.push(calendarEventData)\r\n                    }\r\n\r\n                }\r\n\r\n                if (!duplicate) {\r\n                    var calendarData = {\r\n                        date: eventDate,\r\n                        events: [ calendarEventData ]\r\n                    }\r\n\r\n                    calendarEvents.push(calendarData)\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < calendarEvents.length; ++i) {\r\n                calendarEvents[i].events.sort(this.compareEventStartDates);\r\n            }\r\n\r\n\r\n            while (day <= endDate) {\r\n                for (let i = 0; i < 7; i++) {\r\n                    formattedDate = dateFns.format(day, dateFormat);\r\n                    \r\n                    var isEvent = false;\r\n\r\n                    for (let i = 0; i < calendarEvents.length && !isEvent; ++i) {\r\n                        var calendarEventDay = calendarEvents[i].date.split('/')[1].replace(/^0+/, '');\r\n                        var calendarEventMonth = calendarEvents[i].date.split('/')[0].replace(/^0+/, '');\r\n\r\n                        // eslint-disable-next-line eqeqeq\r\n                        if ((calendarEventDay == dateFns.getDate(day).toString()) &&\r\n                            // eslint-disable-next-line eqeqeq\r\n                            (calendarEventMonth == (dateFns.getMonth(day) + 1))) {\r\n\r\n                                if (calendarEvents[i].events.length > 1) {\r\n\r\n                                    var multipleEventsTitle = (calendarEvents[i].events[0].title + \" +\" + (calendarEvents[i].events.length - 1)).toString();\r\n                                    console.log(multipleEventsTitle);\r\n                                    days.push(\r\n                                        <div\r\n                                            className={`col cell ${\r\n                                                !dateFns.isSameMonth(day, monthStart)\r\n                                                    ? \"disabled\"\r\n                                                    : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                                                }`}\r\n                                            key={day}\r\n                                            // onClick={() => this.onDateClick(dateFns.toDate(cloneDay))}\r\n                                            onClick={e => {\r\n                                                this.showModal(calendarEvents[i]);\r\n                                                }}\r\n                                        >\r\n                                            <span className=\"number\">{formattedDate}</span>\r\n                                            <span className=\"bg\">{formattedDate}</span>\r\n                                            <span className=\"title\">{multipleEventsTitle}</span>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                                else {\r\n                                    var title = calendarEvents[i].events[0].title.toString();\r\n                                    console.log(title);\r\n\r\n                                    days.push(\r\n                                        <div\r\n                                            className={`col cell ${\r\n                                                !dateFns.isSameMonth(day, monthStart)\r\n                                                    ? \"disabled\"\r\n                                                    : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                                                }`}\r\n                                            key={day}\r\n                                            onClick={e => {\r\n                                                this.showModal(calendarEvents[i]);\r\n                                                }}\r\n                                        >\r\n                                            <span className=\"number\">{formattedDate}</span>\r\n                                            <span className=\"bg\">{formattedDate}</span>\r\n                                            <span className=\"title\">{title}</span>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                            \r\n\r\n                            isEvent = true;\r\n                        }   \r\n                    }\r\n\r\n                    if(!isEvent) {\r\n                        days.push(\r\n                            <div\r\n                                className={`col cell ${\r\n                                    !dateFns.isSameMonth(day, monthStart)\r\n                                        ? \"disabled\"\r\n                                        : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                                    }`}\r\n                                key={day}\r\n                            >\r\n                                <span className=\"number\">{formattedDate}</span>\r\n                                <span className=\"bg\">{formattedDate}</span>\r\n                            </div>\r\n                        );\r\n                    }\r\n\r\n                    // days.push(\r\n                    //     <div\r\n                    //         className={`col cell ${\r\n                    //             !dateFns.isSameMonth(day, monthStart)\r\n                    //                 ? \"disabled\"\r\n                    //                 : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                    //             }`}\r\n                    //         key={day}\r\n                    //         // onClick={() => this.onDateClick(dateFns.toDate(cloneDay))}\r\n                    //         onClick={e => {\r\n                    //           this.showModal(e);\r\n                    //         }}\r\n                    //     >\r\n                    //         <span className=\"number\">{formattedDate}</span>\r\n                    //         <span className=\"bg\">{formattedDate}</span>\r\n\r\n                    //         <span>bla</span> \r\n                    //     </div>\r\n                    // );\r\n                    day = dateFns.addDays(day, 1);\r\n                }\r\n                rows.push(\r\n                    <div className=\"row\" key={day}>\r\n                        {days}\r\n                    </div>\r\n                );\r\n                days = [];\r\n            }\r\n                return <div className=\"body\">{rows}</div>;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Set the current state to the selected day\r\n     */\r\n    onDateClick = day => {\r\n        this.setState({\r\n            selectedDate: \"day\"\r\n        });\r\n        \r\n    };\r\n\r\n    /**\r\n     * Go to next month\r\n     */\r\n    nextMonth = () => {\r\n        this.setState({\r\n            currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\r\n        });\r\n    };\r\n\r\n    \r\n    /**\r\n     * Go to previous month\r\n     */\r\n    prevMonth = () => {\r\n        this.setState({\r\n            currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <div id=\"parent\">\r\n            <div className=\"calendar\">\r\n                {this.renderHeader()}\r\n                {this.renderDays()}\r\n                {this.renderCells()}\r\n            </div>\r\n            <div className=\"modal\">\r\n              <Modal \r\n              onClose={this.showModal} \r\n              show={this.state.show}\r\n              calendarEventDayData={this.calendarEventDayData}\r\n              >\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventCalendar;","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport \"react-table/react-table.css\";\r\nimport Form from \"./Form\";\r\nimport { db, firebase } from \"./firebase\";\r\nimport Cards from \"./Cards\";\r\nimport EventCalendar from \"./EventCalendar/EventCalendar\";\r\nimport moment from \"moment\";\r\nimport { categories } from \"./AddEvent\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport class EventHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            openMenu: false,\r\n            anchorEl2: null,\r\n            openMenu2: false,\r\n            anchorEl3: null,\r\n            openMenu3: false,\r\n            showForm: false,\r\n            showShared: \"events\",\r\n            events: [],\r\n            sharedEvents: [],\r\n            acceptedEvents: [],\r\n            filteredEvents: [],\r\n            filteredSharedEvents: [],\r\n            filteredAcceptedEvents: [],\r\n            eventSortOrder: \"descending\",\r\n            search: \"\"\r\n        };\r\n    }\r\n\r\n    areThereNoEvents() {\r\n        return this.state.events === null || this.state.events === undefined || this.state.events.length === 0;\r\n    }\r\n\r\n    areThereNoSharedEvents() {\r\n        return (\r\n            this.state.sharedEvents === null ||\r\n            this.state.sharedEvents === undefined ||\r\n            this.state.sharedEvents.length === 0\r\n        );\r\n    }\r\n    areNoAcceptedEvents() {\r\n        return (\r\n            this.state.acceptedEvents === null ||\r\n            this.state.acceptedEvents === undefined ||\r\n            this.state.acceptedEvents.length === 0\r\n        );\r\n    }\r\n\r\n    isSearching() {\r\n        return this.state.search != \"\";\r\n    }\r\n\r\n    sendEmail = () => {\r\n        this.setState({ showForm: true });\r\n    };\r\n\r\n    switchEventView = () => {\r\n        this.setState({ showShared: !this.state.showShared });\r\n    };\r\n\r\n    setEventOrder = order => {\r\n        this.handleClose3();\r\n        this.setState({ eventSortOrder: order });\r\n    };\r\n\r\n    /**\r\n     * Comparator for ordering events ascending\r\n     */\r\n    compareEventStartDatesAscending(a, b) {\r\n        if (moment(a.startDate).valueOf() < moment(b.startDate).valueOf()) {\r\n            return -1;\r\n        }\r\n\r\n        if (moment(a.startDate).valueOf() > moment(b.startDate).valueOf()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Comparator for ordering events descending\r\n     */\r\n    compareEventStartDatesDescending(a, b) {\r\n        if (moment(a.startDate).valueOf() < moment(b.startDate).valueOf()) {\r\n            return 1;\r\n        }\r\n\r\n        if (moment(a.startDate).valueOf() > moment(b.startDate).valueOf()) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Comparator for ordering events by category\r\n     */\r\n    compareEventCategory(a, b) {\r\n        const map = {};\r\n\r\n        map[categories.None] = 0;\r\n        map[categories.Hobbies] = 1;\r\n        map[categories.Social] = 2;\r\n        map[categories.Errands] = 3;\r\n        map[categories.Projects] = 4;\r\n        map[categories.Hobbies] = 5;\r\n\r\n        if (map[a.category] < map[b.category]) {\r\n            return -1;\r\n        }\r\n\r\n        if (map[a.category] > map[b.category]) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    viewForm = () => {\r\n        if (this.state.showShared === \"events\") {\r\n            return <div>{this.showEvents()}</div>;\r\n        } else if (this.state.showShared === \"shared\") {\r\n            return <div>{this.showSharedEvents()}</div>;\r\n        } else if (this.state.showShared === \"accepted\") {\r\n            return <div>{this.showAcceptedEvents()}</div>;\r\n        } else if (this.state.showShared === \"calendar\") {\r\n            return <div>{this.showCalendar()}</div>;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Displays event table\r\n     * @return Header saying no events or Table of Events\r\n     */\r\n    showEvents = () => {\r\n        var displayedEvents = [];\r\n\r\n        if (this.isSearching()) {\r\n            displayedEvents = this.state.filteredEvents;\r\n        } else {\r\n            displayedEvents = this.state.events;\r\n        }\r\n\r\n        switch (this.state.eventSortOrder) {\r\n            case \"ascending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesAscending);\r\n                break;\r\n            }\r\n            case \"descending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesDescending);\r\n                break;\r\n            }\r\n            case \"category\": {\r\n                displayedEvents.sort(this.compareEventCategory);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.areThereNoEvents()) {\r\n            return <h2>No events</h2>;\r\n        } else {\r\n            return displayedEvents.map((event, index) => (\r\n                <Cards\r\n                    key={index}\r\n                    data={event}\r\n                    editEvent={id => this.props.editEvent(id)}\r\n                    deleteEvent={id => this.deleteEvent(id)}\r\n                />\r\n            ));\r\n        }\r\n    };\r\n\r\n    showSharedEvents = () => {\r\n        var displayedEvents = [];\r\n\r\n        if (this.isSearching()) {\r\n            displayedEvents = this.state.filteredEvents;\r\n        } else {\r\n            displayedEvents = this.state.events;\r\n        }\r\n\r\n        switch (this.state.eventSortOrder) {\r\n            case \"ascending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesAscending);\r\n                break;\r\n            }\r\n            case \"descending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesDescending);\r\n                break;\r\n            }\r\n            case \"category\": {\r\n                displayedEvents.sort(this.compareEventCategory);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.areThereNoSharedEvents()) {\r\n            return <h2>No shared events</h2>;\r\n        } else {\r\n            console.log();\r\n            return displayedEvents.map((event, index) => (\r\n                <Cards\r\n                    key={index}\r\n                    data={event}\r\n                    isShared={true}\r\n                    hasAccepted={false}\r\n                    acceptInvite={id => this.acceptInvite(id)}\r\n                    declineInvite={id => this.declineInvite(id)}\r\n                />\r\n            ));\r\n        }\r\n    };\r\n\r\n    showAcceptedEvents = () => {\r\n        var displayedEvents = [];\r\n\r\n        if (this.isSearching()) {\r\n            displayedEvents = this.state.acceptedEvents;\r\n        } else {\r\n            displayedEvents = this.state.events;\r\n        }\r\n\r\n        if (this.areNoAcceptedEvents()) {\r\n            return <h2>No accepted events</h2>;\r\n        } else {\r\n            return displayedEvents.map((event, index) => (\r\n                <Cards key={index} data={event} isShared={true} hasAccepted={true} />\r\n            ));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Displays event calendar\r\n     */\r\n    showCalendar = () => {\r\n        const { events } = this.state;\r\n        const { sharedEvents, acceptedEvents } = this.state;\r\n\r\n        if (!this.areThereNoEvents() || !this.areThereNoSharedEvents()) {\r\n            return (\r\n                <div className=\"App\">\r\n                    <main>\r\n                        <EventCalendar\r\n                            events={events}\r\n                            sharedEvents={sharedEvents}\r\n                            acceptedEvents={acceptedEvents}\r\n                        ></EventCalendar>\r\n                    </main>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <h2>There are no events to be displayed</h2>;\r\n        }\r\n    };\r\n\r\n    handleSearch = text => {\r\n        this.setState({ search: text.target.value });\r\n\r\n        this.state.filteredEvents = this.filterEvents(this.state.events);\r\n        this.state.filteredSharedEvents = this.filterEvents(this.state.sharedEvents);\r\n        this.state.filteredAcceptedEvents = this.filterEvents(this.state.acceptedEvents);\r\n    };\r\n\r\n    /**\r\n     * Filters event by search input. Supports event title, description, category, and time\r\n     * @param eventsToFilter Takes in events to filter\r\n     * @return Filtered events by search input\r\n     */\r\n    filterEvents = eventsToFilter => {\r\n        var filteredEvents = [];\r\n\r\n        for (let i = 0; i < eventsToFilter.length; i++) {\r\n            let searchLowerCase = this.state.search.toLowerCase();\r\n\r\n            let accepted =\r\n                eventsToFilter[i].title.toLowerCase().includes(searchLowerCase) ||\r\n                eventsToFilter[i].category.toLowerCase().includes(searchLowerCase) ||\r\n                eventsToFilter[i].description.toLowerCase().includes(searchLowerCase) ||\r\n                moment(eventsToFilter[i].startDate)\r\n                    .format(\"LLLL\")\r\n                    .toLowerCase()\r\n                    .includes(searchLowerCase);\r\n\r\n            if (accepted) {\r\n                filteredEvents.push(eventsToFilter[i]);\r\n            }\r\n        }\r\n\r\n        return filteredEvents;\r\n    };\r\n\r\n    getMainStyle = () => {\r\n        return {\r\n            textAlign: \"center\",\r\n            padding: \"5px\",\r\n            background: \"#fff\"\r\n        };\r\n    };\r\n\r\n    getBtnStyle = () => {\r\n        return {\r\n            textAlign: \"right\",\r\n            padding: \"10px\",\r\n            background: \"#fff\"\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Clicks create event option and starts adding event\r\n     */\r\n    handleAddEventMenu = () => {\r\n        this.handleClose();\r\n        this.props.beginAddEvent();\r\n    };\r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n    handleClick2 = e => {\r\n        this.setState({\r\n            anchorEl2: e.currentTarget,\r\n            openMenu2: !this.state.openMenu2\r\n        });\r\n    };\r\n    handleClick3 = e => {\r\n        this.setState({\r\n            anchorEl3: e.currentTarget,\r\n            openMenu3: !this.state.openMenu3\r\n        });\r\n    };\r\n\r\n    /**\r\n     * closes drop down menu\r\n     */\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, openMenu: !this.state.openMenu });\r\n    };\r\n    handleClose2 = () => {\r\n        this.setState({ anchorEl2: null, openMenu2: !this.state.openMenu2 });\r\n    };\r\n    handleClose3 = () => {\r\n        this.setState({ anchorEl3: null, openMenu3: !this.state.openMenu3 });\r\n    };\r\n\r\n    /**\r\n     * Clicks join event option\r\n     */\r\n    handleJoinEventMenu = () => {\r\n        this.handleClose();\r\n        this.props.beginJoinEvent();\r\n    };\r\n\r\n    /**\r\n     * Delete Event\r\n     */\r\n    deleteEvent = id => {\r\n        db.collection(\"events\")\r\n            .doc(id)\r\n            .delete();\r\n    };\r\n    acceptInvite = id => {\r\n        const document = db.collection(\"events\").doc(id);\r\n        document\r\n            .update({\r\n                invitees: firebase.firestore.FieldValue.arrayRemove(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            })\r\n            .catch(err => console.error(err));\r\n        document\r\n            .update({\r\n                accepted_invitees: firebase.firestore.FieldValue.arrayUnion(\r\n                    JSON.parse(localStorage.getItem(\"currentUser\"))\r\n                )\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n    declineInvite = id => {\r\n        const document = db.collection(\"events\").doc(id);\r\n        document\r\n            .update({\r\n                invitees: firebase.firestore.FieldValue.arrayRemove(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            })\r\n            .catch(err => console.error(err));\r\n        document\r\n            .update({\r\n                declined_invitees: firebase.firestore.FieldValue.arrayUnion(\r\n                    JSON.parse(localStorage.getItem(\"currentUser\"))\r\n                )\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    /**\r\n     * Renders table and buttons below the header.\r\n     * @return Buttons\r\n     * @return Event Table\r\n     * @return Event Calendar(not implemented)\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.showForm && (\r\n                    <div>\r\n                        <Form handleDisplay={this.handleDisplay}></Form>\r\n                    </div>\r\n                )}\r\n                <div style={this.getBtnStyle()}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={e => this.handleClick(e)}\r\n                    >\r\n                        Create/Join Event\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.openMenu}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MenuItem onClick={this.handleAddEventMenu}>Create Event</MenuItem>\r\n                        <MenuItem onClick={this.handleJoinEventMenu}>Join Event</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                <div style={this.getBtnStyle()}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={e => this.handleClick3(e)}\r\n                    >\r\n                        Sort Event\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl3}\r\n                        open={this.state.openMenu3}\r\n                        onClose={this.handleClose3}\r\n                    >\r\n                        <MenuItem onClick={() => this.setEventOrder(\"descending\")}>Latest</MenuItem>\r\n                        <MenuItem onClick={() => this.setEventOrder(\"ascending\")}>Earliest</MenuItem>\r\n                        <MenuItem onClick={() => this.setEventOrder(\"category\")}>Category</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                <TextField\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"search by title, description, category, date...\"\r\n                    fullWidth\r\n                    value={this.state.search}\r\n                    margin=\"normal\"\r\n                    onChange={search => this.handleSearch(search)}\r\n                />\r\n                <div style={this.getMainStyle()}>\r\n                    <Button onClick={e => this.handleClick2(e)}>Switch</Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl2}\r\n                        open={this.state.openMenu2}\r\n                        onClose={this.handleClose2}\r\n                    >\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"events\")}>Show Own Events</MenuItem>\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"shared\")}>Show New Event Invites</MenuItem>\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"accepted\")}>Show Accepted Events</MenuItem>\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"calendar\")}>Show Event Calendar</MenuItem>\r\n                    </Menu>\r\n                    {this.viewForm()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * this shows form for inviting others\r\n     */\r\n    handleDisplay = () => {\r\n        this.setState({ showForm: false });\r\n    };\r\n    handleMenuClick = text => {\r\n        this.handleClose2();\r\n        this.setState({ showShared: text });\r\n    };\r\n\r\n    componentDidMount() {\r\n        let tempObject = { temp: [] };\r\n\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        this.unsubscribe1 = db\r\n            .collection(\"events\")\r\n            .where(\"owners\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    console.log(\"1\");\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ events: tempObject.temp });\r\n            });\r\n\r\n        this.unsubscribe2 = db\r\n            .collection(\"events\")\r\n            .where(\"invitees\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    console.log(\"2\");\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ sharedEvents: tempObject.temp });\r\n            });\r\n\r\n        this.unsubscribe3 = db\r\n            .collection(\"events\")\r\n            .where(\"accepted_invitees\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    console.log(\"3\");\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ acceptedEvents: tempObject.temp });\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"unsub\");\r\n        this.unsubscribe1();\r\n        this.unsubscribe2();\r\n        this.unsubscribe3();\r\n    }\r\n}\r\n/**\r\n * @return events that current user made that are not shared\r\n * @return shared events which are events current user shared(invited people)\r\n */\r\n\r\nexport default EventHome;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\n\r\n//database\r\nimport { db, firebase } from \"./firebase\";\r\n\r\nexport default function AddContact() {\r\n    //----- states -----\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userInput, setUserInput] = React.useState(\"\");\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [errorOpen, setErrorOpen] = React.useState(false);\r\n    const [successOpen, setSuccessOpen] = React.useState(false);\r\n    const [message, setMessage] = React.useState(\"\");\r\n    //----- end of states -----\r\n\r\n    //----- styles -----\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n    //----- end of styles -----\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setErrorOpen(false);\r\n    };\r\n    const handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setSuccessOpen(false);\r\n    };\r\n\r\n    /**\r\n     * Adds contact by referencing database\r\n     */\r\n    const handleAddContact = () => {\r\n        /*\r\n            first it checks in database if userinput exists\r\n            then it accesses the current user's doc, and updates\r\n            their contact list with the user's input contact\r\n\r\n            when you add the contact, it adds the name and email\r\n\r\n            concerns: we did not use boolean variables to seperate the\r\n            check from the database addition because it does not update \r\n            fast enough and the contact does not get added\r\n        */\r\n        db.collection(\"users\")\r\n            .doc(userInput)\r\n            .get()\r\n            .then(docSnapshot => {\r\n                if (docSnapshot.exists) {\r\n                    db.collection(\"users\")\r\n                        .doc(currentUser)\r\n                        .update({\r\n                            contacts: firebase.firestore.FieldValue.arrayUnion(\r\n                                {\r\n                                    displayName: docSnapshot.data().displayName,\r\n                                    email: userInput,\r\n                                }\r\n                            )\r\n                        });\r\n                    handleClose();\r\n                    setSuccessOpen(true);\r\n                    setMessage(\"Successfully added contact!\");\r\n                } else {\r\n                    setErrorOpen(true);\r\n                    setMessage(\"Invalid contact!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Handles User Input when entering contact's\r\n     * email\r\n     * @param {*} t text that user types in\r\n     */\r\n    const handleInput = t => {\r\n        setUserInput(t.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    Add Contact\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Adding Contact</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To add a contact, please enter their email address.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAddContact} color=\"primary\">\r\n                        Enter\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={errorOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleErrorClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleErrorClose}\r\n                    variant=\"error\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={successOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleSuccessClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleSuccessClose}\r\n                    variant=\"success\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ViewContacts() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [c, setListofContacts] = React.useState([]);\r\n\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection(\"users\")\r\n            .doc(currentUser)\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    setListofContacts(doc.data().contacts);\r\n                }\r\n            });\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const listOfContacts = c.map((contact, index) => (\r\n        <li key={index}>\r\n            {contact.displayName} <br /> {contact.email}\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    View Contacts\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"List of your Contacts\"}</DialogTitle>\r\n                <DialogContent>{listOfContacts}</DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddContact from './AddContact'\r\nimport ViewContacts from './ViewContacts'\r\nimport firebase from \"firebase\";\r\nimport logo from \"./logo.png\";\r\n//import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { db } from \"./firebase\";\r\n\r\nconst headerStyle = {\r\n    background: \"#fff\",\r\n    //color: \"#5a769e\",\r\n    textAlign: \"center\",\r\n    padding: \"3px\",\r\n    //fontSize: \"24px\",\r\n    //fontFamily: \"Courier New\",\r\n    //fontStyle: \"italic\"\r\n};\r\n\r\nconst headButtonStyle = {\r\n    textAlign: \"left\"\r\n};\r\n\r\n\r\nexport class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            addContactsPrompt: false,\r\n        };\r\n    }\r\n\r\n    //localStorage is to access database document\r\n    /**\r\n     * when header mounts, it updates user data\r\n     * @return user data from the database\r\n     */\r\n    componentDidMount() {\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .get()\r\n            .then(data => {\r\n                if (data.exists) {\r\n                    this.setState({ user: data.data()});\r\n                } else {\r\n                    //console.log(\"Sad toot\");\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Renders the buttons to view/add contacts and\r\n     * sign out button and name of user\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header style={headerStyle}>\r\n                    <div>\r\n                        <header>\r\n                            <img\r\n                                src={logo}\r\n                                height=\"117px\"\r\n                                width=\"150px\"\r\n                                alt=\"Schedule It\" />\r\n                        </header>\r\n                    </div>\r\n                    <AddContact/>\r\n                    <ViewContacts/>\r\n\r\n                    {this.state.user && (\r\n                        <div>\r\n                            <div style={headButtonStyle}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    component={Link}\r\n                                    to=\"/\"\r\n                                >\r\n                                    Profile\r\n                                </Button>\r\n                                <br />\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    component={Link}\r\n                                    to=\"/home\"\r\n                                >\r\n                                    Events\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { db, firebase } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Join(props) {\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [userInput, setUserInput] = React.useState(\"\");\r\n\r\n    // SNACKBAR\r\n    const [errorOpen, setErrorOpen] = React.useState(false);\r\n    const [successOpen, setSuccessOpen] = React.useState(false);\r\n    const [message, setMessage] = React.useState(\"\");\r\n\r\n    const handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setErrorOpen(false);\r\n    };\r\n    const handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setSuccessOpen(false);\r\n    };\r\n\r\n    //END OF SNACKBAR\r\n\r\n    const handleInput = t => {\r\n        setUserInput(t.target.value);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleJoinEvent = () => {\r\n        db.collection(\"events\")\r\n            .where(\"code\", \"==\", userInput)\r\n            .get()\r\n            .then(querySnapshot => {\r\n                if (!querySnapshot.empty) {\r\n                    querySnapshot.forEach(doc => {\r\n                        db.collection(\"events\")\r\n                            .doc(doc.data().id)\r\n                            .update({\r\n                                invitees: firebase.firestore.FieldValue.arrayUnion(\r\n                                    currentUser\r\n                                )\r\n                            });\r\n                        setSuccessOpen(true);\r\n                        setMessage(\"Successfully joined event!\");\r\n                        handleClose();\r\n                    });\r\n                } else {\r\n                    setErrorOpen(true);\r\n                    setMessage(\"Invalid code!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"Type in code in join event\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Enter in event's code:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Event Code\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                    <Button onClick={handleJoinEvent} color=\"primary\">\r\n                        Enter\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={errorOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleErrorClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleErrorClose}\r\n                    variant=\"error\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={successOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleSuccessClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleSuccessClose}\r\n                    variant=\"success\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AddEvent from \"./AddEvent\";\r\nimport EventHome from \"./EventHome\";\r\nimport Header from \"./header\";\r\nimport { db } from \"./firebase\";\r\nimport Join from \"./Join\";\r\n\r\nexport class EventManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            homePage: true,\r\n            editingEvent: false,\r\n            idOfEditEvent: \"\",\r\n            joinEvent: false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Starts the process of adding a new event\r\n     * @return sets home page to false\r\n     * @return clears localStorage of event details\r\n     */\r\n    beginAddEvent = () => {\r\n        //have to account for them refreshing\r\n        localStorage.removeItem(\"saved_title\");\r\n        localStorage.removeItem(\"saved_description\");\r\n        // localStorage.removeItem(\"saved_time\");\r\n        // localStorage.removeItem(\"saved_date\");\r\n        localStorage.removeItem(\"saved_start_date\");\r\n        localStorage.removeItem(\"saved_end_date\");\r\n        this.setAdd();\r\n    };\r\n\r\n    beginJoinEvent = () => {\r\n        this.setState({ joinEvent: !this.state.joinEvent });\r\n    };\r\n\r\n    /**\r\n     * @param id id of event that is being edited\r\n     * @param viewShared if we are editing shared event\r\n     * or normal event\r\n     *\r\n     */\r\n    editEvent = (id, viewShared) => {\r\n        //accessing shared event collections\r\n        if (viewShared) {\r\n            //db.collection(\"shared_events\").doc(id)\r\n        }\r\n        //accessing normal event collections\r\n        else {\r\n            db.collection(\"events\")\r\n                .doc(id)\r\n                .get()\r\n                .then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log(\"TOOT\");\r\n                        localStorage.setItem(\r\n                            \"saved_title\",\r\n                            JSON.stringify(doc.data().title)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_description\",\r\n                            JSON.stringify(doc.data().description)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_category\",\r\n                            JSON.stringify(doc.data().category)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_start_date\",\r\n                            JSON.stringify(doc.data().startDate)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_end_date\",\r\n                            JSON.stringify(doc.data().endDate)\r\n                        );\r\n                    }\r\n                });\r\n        }\r\n        this.setState(\r\n            {\r\n                editingEvent: true,\r\n                idOfEditEvent: id\r\n            },\r\n            this.setAdd()\r\n        );\r\n    };\r\n\r\n    /**\r\n     * @param id takes in the id of the event to be deleted\r\n     * @return {array} returns the updated array with\r\n     * event removed to the database\r\n     * @todo delete either shared or personal events\r\n     */\r\n\r\n    /**\r\n     * Cancels the process of event creation\r\n     * @return Return back to the home page\r\n     */\r\n    cancelEvent = () => {\r\n        // localStorage.removeItem(\"saved_title\");\r\n        // localStorage.removeItem(\"saved_description\");\r\n        // localStorage.removeItem(\"saved_time\");\r\n        // localStorage.removeItem(\"saved_date\");\r\n        this.setHomePage();\r\n    };\r\n\r\n    /**\r\n     * function to start add/edit event\r\n     * @return sets home page to false\r\n     */\r\n    setAdd = () => {\r\n        this.setState({ homePage: false });\r\n    };\r\n\r\n    /**\r\n     * Sets view back to home page\r\n     * @return Home Page\r\n     */\r\n    setHomePage = () => {\r\n        this.setState({\r\n            homePage: true,\r\n            editingEvent: false,\r\n            idOfEditEvent: \"\"\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Decides what to render, between the\r\n     * home page and event creation page\r\n     */\r\n    render() {\r\n        let joinDialog = this.state.joinEvent ? <Join open={true}/> : null;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {this.state.homePage && (\r\n                    <EventHome\r\n                        beginAddEvent={this.beginAddEvent}\r\n                        beginJoinEvent={this.beginJoinEvent}\r\n                        editEvent={this.editEvent}\r\n                        deleteEvent={this.deleteEvent}\r\n                    />\r\n                )}\r\n                {!this.state.homePage && (\r\n                    <AddEvent\r\n                        cancelEvent={this.cancelEvent}\r\n                        setHomePage={() => this.setHomePage()}\r\n                        editingEvent={this.state.editingEvent}\r\n                        idOfEditEvent={this.state.idOfEditEvent}\r\n                    />\r\n                )}\r\n                {joinDialog}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventManager;\r\n","import React, { Component } from \"react\";\r\nimport { firebase, db } from \"./firebase\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Header from \"./header\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n//import { Link } from \"react-router-dom\";\r\n//import logo from \"./logo.png\";\r\n//import { textAlign } from \"@material-ui/system\";\r\n\r\n\r\nvar CLIENT_ID = \"YOUR_OAUTH_CLIENT_ID\";\r\n\r\nconst logInStyle = {\r\n    textAlign: \"center\",\r\n    top: \"100%\",\r\n    background: \"#fff\",\r\n    fontSize: \"20px\",\r\n    position: \"relative\"\r\n};\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // We will use Google and email as auth providers.\r\n    signInOptions: [\r\n        {\r\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            authMethod: \"https://accounts.google.com\",\r\n            // Required to enable ID token credentials for this provider.\r\n            clientId: CLIENT_ID\r\n        },\r\n        {\r\n            provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            requireDisplayName: true\r\n        }\r\n    ],\r\n    callbacks: {\r\n        // Avoid redirects after sign-in.\r\n        signInSuccessWithAuthResult: () => false\r\n    }\r\n};\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSignedIn: false,\r\n            picURL: \"\",\r\n            nameDisplay: \"\",\r\n            current_user_email: \"\",\r\n            userName: \"\",\r\n            bioDisplay: \"\",\r\n            userBio: \"\",\r\n            isUploading: false,\r\n            progress: 0,\r\n            profilePic: \"\"\r\n        };\r\n    }\r\n\r\n    // handle profile pic upload to Storage\r\n    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n\r\n    handleProgress = progress => this.setState({ progress });\r\n\r\n    handleUploadError = error => {\r\n        this.setState({ isUploading: false });\r\n        console.error(error);\r\n    };\r\n\r\n    handleUploadSuccess = filename => {\r\n        this.setState({ profilePic: filename, progress: 100, isUploading: false });\r\n        firebase\r\n            .storage()\r\n            .ref(\"images\")\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url => this.setState({ picURL: url }));\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({\r\n                    isSignedIn: !!user\r\n                });\r\n                //lets contacts data persist\r\n                let docReference = db.collection(\"users\").doc(user.email);\r\n                docReference.get().then(documentSnapshot => {\r\n                    if (!documentSnapshot.exists) {\r\n                        docReference.set({\r\n                            displayName: user.displayName,\r\n                            email: user.email,\r\n                            contacts: [],\r\n                            events: [],\r\n                            polls: [],\r\n                            pictureURL: user.photoURL,\r\n                            bio: \"\"\r\n                        });\r\n                    }\r\n                });\r\n\r\n                let docRef = db.collection('users').doc(user.email);\r\n                docRef.get().then(doc => {\r\n                    if (!doc.exists) {\r\n                        //console.log('No such document!');\r\n                    } else {\r\n                        //console.log('Document data:', doc.data());\r\n                        this.setState({ picURL: doc.data().pictureURL });\r\n                        this.setState({ nameDisplay: doc.data().displayName });\r\n                        this.setState({ userName: doc.data().displayName });\r\n                        this.setState({ current_user_email: doc.data().email });\r\n                        this.setState({ bioDisplay: doc.data().bio });\r\n                        this.setState({ userBio: doc.data().bio });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('Error getting document', err);\r\n                });\r\n\r\n                //locally store current user's email\r\n                localStorage.setItem(\"currentUser\", JSON.stringify(user.email));\r\n                //console.log(\"toot\");\r\n            }\r\n        });\r\n    };\r\n\r\n    onClick = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        localStorage.clear();\r\n    };\r\n\r\n    //update profile info in db\r\n    updateDb = e => {\r\n        if (this.state.nameDisplay !== this.state.userName) {\r\n            db.collection(\"users\")\r\n                .doc(this.state.current_user_email)\r\n                .update({\r\n                    displayName: this.state.nameDisplay,\r\n                });\r\n        }\r\n        if (this.state.bioDisplay !== this.state.userBio) {\r\n            db.collection(\"users\")\r\n                .doc(this.state.current_user_email)\r\n                .update({\r\n                    bio: this.state.bioDisplay\r\n                });\r\n        }\r\n        db.collection(\"users\")\r\n            .doc(this.state.current_user_email)\r\n            .update({\r\n                pictureURL: this.state.picURL\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <Header />\r\n                {this.state.isSignedIn ? (\r\n                    <div style={logInStyle}>\r\n                        <img src={this.state.picURL} alt=\"Profile\" vertical-align=\"middle\" width=\"100px\" height=\"100px\" border-radius=\"50%\" />\r\n                        <br />                        \r\n                        <form onSubmit={this.updateDb}>\r\n                            {this.state.isUploading && <p>Progress: {this.state.progress}</p>}\r\n                            <label\r\n                                style={{\r\n                                    backgroundColor: '#3f51b5',\r\n                                    color: 'white',\r\n                                    padding: '5px',\r\n                                    borderRadius: 4,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    Upload profile picture\r\n                                <FileUploader\r\n                                    hidden\r\n                                    accept=\"image/*\"\r\n                                    name=\"Profile Picture\"\r\n                                    randomizeFilename\r\n                                    storageRef={firebase.storage().ref(\"images\")}\r\n                                    onUploadStart={this.handleUploadStart}\r\n                                    onUploadError={this.handleUploadError}\r\n                                    onUploadSuccess={this.handleUploadSuccess}\r\n                                    onProgress={this.handleProgress}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            <label style={{\r\n                                fontSize: 18\r\n                            }}>\r\n                                {firebase.auth().currentUser.email}\r\n                            </label>\r\n                            <br />\r\n                            <label style={{\r\n                                fontSize: 18,\r\n                            }}>\r\n                                Name\r\n                            </label>\r\n                            <br />\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"fullname\"\r\n                                size=\"26\"\r\n                                placeholder=\"Your name\"\r\n                                onChange={e => this.setState({ nameDisplay: e.target.value })}\r\n                                value={this.state.nameDisplay}\r\n                            />\r\n                            <br />\r\n                            <label style={{\r\n                                fontSize: 18,\r\n                            }}>\r\n                                Biography\r\n                            </label>\r\n                            <br />\r\n                            <textarea\r\n                                name=\"bioText\"\r\n                                rows=\"10\"\r\n                                cols=\"27\"\r\n                                placeholder=\"Biography\"\r\n                                value={this.state.bioDisplay}\r\n                                onChange={e => this.setState({ bioDisplay: e.target.value })}\r\n                            >\r\n                            </textarea>\r\n                            <br/>\r\n                            <button type=\"submit\">Save changes</button>\r\n                        </form>\r\n                        <br />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.onClick()}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </div>\r\n                ) : (\r\n                    <StyledFirebaseAuth\r\n                        uiCallback={ui => ui.disableAutoSignIn()}\r\n                        uiConfig={uiConfig}\r\n                        firebaseAuth={firebase.auth()}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport EventManager from \"./components/EventManager\";\r\nimport Login from './components/Login'\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Login/>\r\n                </Route>\r\n                <Route exact path=\"/home\">\r\n                    <EventManager />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}