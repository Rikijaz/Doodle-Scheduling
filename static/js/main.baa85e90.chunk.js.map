{"version":3,"sources":["components/logo.png","components/Snackbar.js","components/DoodleCalendar.js","components/AddSecondPage.js","components/firebase.js","components/InviteContacts.js","components/AddThirdPage.js","components/AddEvent.js","components/Form.js","components/Invite.js","components/Cards.js","components/Modal/Modal.js","components/EventCalendar/EventCalendar.js","components/EventHome.js","components/AddContact.js","components/ViewContacts.js","components/header.js","components/Join.js","components/EventManager.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","props","classes","className","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","close","onClick","DoodleCalendar","handleEventRemove","event","selectedIntervals","state","index","findIndex","interval","uid","splice","setState","handleEventUpdate","handleSelect","newIntervals","lastUid","intervals","map","concat","length","parentMethod","dayFormat","startTime","moment","h","m","endTime","scaleFormat","numberOfDays","this","onIntervalSelect","onIntervalUpdate","onIntervalRemove","useModal","React","Component","AddSecondPage","changeCalendar","calendar","onEventSubmitted","eventData","console","log","start","format","eventStartDate","eventEndDate","end","startDate","endDate","localStorage","setItem","JSON","stringify","renderCalendar","e","children","renderButtons","Button","type","size","goToFirstPage","goToThirdPage","endIcon","cancelEvent","parse","getItem","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","InviteContacts","useState","personEmail","setPersonEmail","emails","setEmails","useEffect","collection","doc","get","then","exists","temp","data","contacts","c","email","setSharedEvent","FormControl","InputLabel","Select","labelId","multiple","value","onChange","target","input","Input","renderValue","selected","join","name","MenuItem","Checkbox","checked","indexOf","ListItemText","AddThirdPage","handleCheckbox","renderOptions","FormGroup","row","FormControlLabel","control","label","renderContactDropdown","l","list","invite_list","goToSecondPage","submitEvent","categories","Object","freeze","None","Hobbies","Social","Errands","Projects","Miscellaneous","AddEvent","handleErrorClose","reason","errorMessageOpen","handleSuccessClose","successMessageOpen","handleTitle","t","title","handleDescription","des","description","onSubmitFirstPage","preventDefault","category","firstPage","secondPage","thirdPage","handleCategoryMenuClick","selectedCategory","handleClose","anchorEl","openMenu","handleClick","currentTarget","invitees","code","makeCode","idOfEditEvent","editingEvent","uuid","v4","update","set","owners","accepted_invitees","declined_invitees","setHomePage","result","characters","charactersLength","i","charAt","Math","floor","random","viewForm","Container","maxWidth","onSubmit","TextField","placeholder","fullWidth","margin","aria-controls","aria-haspopup","Menu","open","style","textAlign","shared","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Form","contentList","emailList","handleChange","bind","handleSubmit","events","required","feedback","width","height","sendFeedback","message_html","from_name","reply_to","handleDisplay","templateId","variables","window","emailjs","send","res","catch","err","Transition","forwardRef","ref","Slide","direction","Invite","setOpen","currentUser","fix","setFix","Dialog","TransitionComponent","keepMounted","aria-labelledby","DialogTitle","DialogContent","n","includes","filter","DialogActions","Cards","handleShareEvent","startShare","expanded","isShared","hasAccepted","shareStatus","invitePeople","editButton","editEvent","deleteButton","deleteEvent","acceptIcon","acceptInvite","declineInvite","Card","CardContent","Typography","gutterBottom","component","CardActions","aria-expanded","Collapse","in","timeout","unmountOnExit","radius","marginBottom","marginTop","Modal","show","calendarEventDayData","date","split","EventCalendar","showModal","onDateClick","day","selectedDate","nextMonth","currentMonth","dateFns","prevMonth","Date","a","b","valueOf","days","push","areThereEvents","undefined","areThereSharedEvents","sharedEvents","duplicate","eventDate","calendarEventData","calendarData","isEvent","calendarEventDay","calendarEventMonth","multipleEventsTitle","monthStart","monthEnd","rows","formattedDate","calendarEvents","j","sort","compareEventStartDates","replace","toString","renderHeader","renderDays","renderCells","EventHome","sendEmail","showForm","switchEventView","showShared","setEventOrder","order","handleClose3","eventSortOrder","showEvents","showSharedEvents","showAcceptedEvents","showCalendar","compareEventStartDatesAscending","compareEventStartDatesDescending","compareEventCategory","areThereNoEvents","areThereNoSharedEvents","acceptedEvents","areNoAcceptedEvents","getMainStyle","padding","background","getBtnStyle","handleAddEventMenu","beginAddEvent","handleClick2","anchorEl2","openMenu2","handleClick3","anchorEl3","openMenu3","handleClose2","handleJoinEventMenu","beginJoinEvent","delete","document","FieldValue","arrayRemove","arrayUnion","handleMenuClick","text","tempObject","unsubscribe1","where","onSnapshot","forEach","unsubscribe2","unsubscribe3","AddContact","userInput","setUserInput","errorOpen","setErrorOpen","successOpen","setSuccessOpen","setMessage","DialogContentText","autoFocus","docSnapshot","displayName","ViewContacts","setListofContacts","listOfContacts","contact","headerStyle","headButtonStyle","Header","user","addContactsPrompt","src","logo","alt","Link","to","Join","querySnapshot","empty","EventManager","removeItem","setAdd","joinEvent","viewShared","homePage","joinDialog","logInStyle","top","position","uiConfig","signInFlow","signInOptions","provider","auth","GoogleAuthProvider","PROVIDER_ID","authMethod","clientId","EmailAuthProvider","requireDisplayName","callbacks","signInSuccessWithAuthResult","Login","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","handleUploadSuccess","filename","profilePic","child","getDownloadURL","url","picURL","componentDidMount","onAuthStateChanged","isSignedIn","docReference","documentSnapshot","polls","pictureURL","photoURL","bio","nameDisplay","userName","current_user_email","bioDisplay","userBio","signOut","clear","updateDb","vertical-align","border-radius","borderRadius","cursor","hidden","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","cols","uiCallback","ui","disableAutoSignIn","firebaseAuth","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.baa85e90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.88ca5a89.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MySnackbarContent);","import React from 'react';\r\nimport moment from 'moment';\r\nimport WeekCalendar from 'react-week-calendar';\r\n\r\n// garbage text for testing pull requests to dev\r\n\r\nexport default class DoodleCalendar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastUid: 1,\r\n      selectedIntervals: [\r\n        // {\r\n        //   uid: 1,\r\n        //   start: moment({h: 6, m: 30}),\r\n        //   end: moment({h: 7, m: 59}),\r\n        //   value: \"CS150 exam\"\r\n        // },\r\n      ]\r\n    }\r\n  }\r\n\r\n  handleEventRemove = (event) => {\r\n    const {selectedIntervals} = this.state;\r\n    //console.log('Removing event');\r\n\r\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\r\n    if (index > -1) {\r\n      selectedIntervals.splice(index, 1);\r\n      this.setState({selectedIntervals});\r\n    }\r\n\r\n  }\r\n\r\n  handleEventUpdate = (event) => {\r\n    const {selectedIntervals} = this.state;\r\n    //console.log('Updating event');\r\n\r\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\r\n    if (index > -1) {\r\n      selectedIntervals[index] = event;\r\n      this.setState({selectedIntervals});\r\n    }\r\n  }\r\n\r\n  handleSelect = (newIntervals) => {\r\n    const {lastUid, selectedIntervals} = this.state;\r\n    const intervals = newIntervals.map( (interval, index) => {\r\n\r\n      return {\r\n        ...interval,\r\n        uid: lastUid + index\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      selectedIntervals: selectedIntervals.concat(intervals),\r\n      lastUid: lastUid + newIntervals.length\r\n    })\r\n\r\n    this.props.parentMethod(intervals);\r\n  }\r\n\r\n  render() {\r\n    return <WeekCalendar\r\n      dayFormat = {'dddd, MM.DD'}\r\n      startTime = {moment({h: 0, m: 0})}\r\n      endTime = {moment({h: 23, m: 50})}\r\n      scaleFormat = {'hh:mm a'}\r\n      numberOfDays= {7}\r\n      selectedIntervals = {this.state.selectedIntervals}\r\n      onIntervalSelect = {this.handleSelect}\r\n      onIntervalUpdate = {this.handleEventUpdate}\r\n      onIntervalRemove = {this.handleEventRemove}\r\n      useModal = {false}\r\n      />\r\n  }\r\n}","import React, { Component } from \"react\";\r\n//import { TextField } from '@material-ui/core';\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DoodleCalendar from \"./DoodleCalendar\";\r\nimport \"react-week-calendar/dist/style.css\";\r\nimport moment from \"moment\";\r\n\r\nexport class AddSecondPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // time: JSON.parse(localStorage.getItem(\"saved_time\")),\r\n            // date: JSON.parse(localStorage.getItem(\"saved_date\")),\r\n            startDate: JSON.parse(localStorage.getItem(\"saved_start_date\")),\r\n            endDate: JSON.parse(localStorage.getItem(\"saved_end_date\")),\r\n            calendar: \"default\"\r\n        };\r\n    }\r\n\r\n    // eric's stuff //\r\n    changeCalendar = calendar => {\r\n        this.setState({ calendar });\r\n    };\r\n\r\n    onEventSubmitted = eventData => {\r\n        console.log(eventData[0].start.format());\r\n        console.log(moment(eventData[0].start.format()).format(\"LLLL\"));\r\n\r\n        // //right now it should only take in one date & one range of time\r\n        // let x = new Date(eventData[0].start.format(\"LLLL\"));\r\n        // let y = new Date(eventData[0].end.format(\"LLLL\"));\r\n        // let start = x.getHours().toString() + \":\" + x.getMinutes().toString();\r\n        // let end = y.getHours().toString() + \":\" + y.getMinutes().toString();\r\n        // let together = start + \"-\" + end;\r\n        // let date = (x.getMonth() + 1).toString() + \"/\" + x.getDate().toString();\r\n        // localStorage.setItem(\"saved_date\", JSON.stringify(date));\r\n        // localStorage.setItem(\"saved_time\", JSON.stringify(together));\r\n\r\n        var eventStartDate = eventData[0].start.format();\r\n        var eventEndDate = eventData[0].end.format();\r\n\r\n        this.setState({ startDate: eventStartDate, endDate: eventEndDate });\r\n\r\n        localStorage.setItem(\"saved_start_date\", JSON.stringify(eventStartDate));\r\n        localStorage.setItem(\"saved_end_date\", JSON.stringify(eventEndDate));\r\n        // https://momentjs.com/docs/#/parsing/string-format/ if you are looking for a different time format\r\n    };\r\n\r\n    // eric's stuff //\r\n\r\n    render() {\r\n        //eric's shit\r\n\r\n        //eslint-disable-next-line\r\n        const calendar = this.state.calendar;\r\n        //let renderCalendar = null;\r\n\r\n        return (\r\n            <div>\r\n                {this.renderCalendar()}\r\n                {this.renderButtons()}\r\n            </div>\r\n        );\r\n    }\r\n    renderCalendar = () => {\r\n        return (\r\n            <div>\r\n                <h3>Choose your time!</h3>\r\n                <DoodleCalendar parentMethod={e => this.onEventSubmitted(e)}>\r\n                    {this.props.children}\r\n                </DoodleCalendar>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderButtons = () => {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={this.props.goToFirstPage}\r\n                >\r\n                    Back\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={e =>\r\n                        this.props.goToThirdPage(\r\n                            this.state.startDate,\r\n                            this.state.endDate,\r\n                            e\r\n                        )\r\n                    }\r\n                >\r\n                    Next\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"userCancelButton\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    endIcon={<CancelIcon />}\r\n                    onClick={this.props.cancelEvent}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AddSecondPage;\r\n/*  \r\n    Eric's Stuff that was added in:\r\n        renderCalendar\r\n        calendar\r\n        DoodleCalendar\r\n        onEventSubmitted\r\n        changeCalendar\r\n        calendar in state\r\n        DoodleCalendar.js\r\n\r\n\r\n\r\n*/\r\n","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAmcdm-nCXD4ahr4EwKddfHQ_vpqkMEPWA\",\r\n    authDomain: \"cs180-schedulingapp.firebaseapp.com\",\r\n    databaseURL: \"https://cs180-schedulingapp.firebaseio.com\",\r\n    projectId: \"cs180-schedulingapp\",\r\n    storageBucket: \"cs180-schedulingapp.appspot.com\",\r\n    messagingSenderId: \"350264880268\",\r\n    appId: \"1:350264880268:web:4fb4718431afc39b6e9fa9\",\r\n    measurementId: \"G-DBB71H8E8J\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nexport {firebase, db};\r\nexport const storage = firebase.storage();","/* eslint-disable no-unused-expressions */\r\nimport React, { useEffect } from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { db } from \"./firebase\";\r\n\r\nexport default function InviteContacts(props) {\r\n    const [personEmail, setPersonEmail] = React.useState([]);\r\n\r\n    const handleChange = event => {\r\n        setPersonEmail(event.target.value);\r\n        console.log(event.target.value);\r\n    };\r\n\r\n    const [emails, setEmails] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"1\")\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    let temp = doc.data().contacts.map(c => {\r\n                        return c.email;\r\n                    });\r\n                    setEmails(temp);\r\n                }\r\n            });\r\n\r\n    },[]);\r\n\r\n     //if add props to dependencies, infinite useEffect, dont do it\r\n    useEffect(() => {\r\n        console.log(\"2\")\r\n        props.setSharedEvent(personEmail);\r\n        // eslint-disable-next-line\r\n    },[personEmail]);\r\n\r\n    return (\r\n        <div>\r\n            <FormControl>\r\n                <InputLabel id=\"demo-mutiple-checkbox-label\">Select Contacts to Invite</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-checkbox-label\"\r\n                    id=\"demo-mutiple-checkbox\"\r\n                    multiple\r\n                    value={personEmail}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => selected.join(\", \")}\r\n                >\r\n                    {emails.map(name => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox\r\n                                checked={personEmail.indexOf(name) > -1}\r\n                            />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InviteContacts from \"./InviteContacts\";\r\n\r\nexport class AddThirdPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n            invite_list: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderOptions()}\r\n                <br />\r\n                {this.renderButtons()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //functions\r\n\r\n    /**\r\n     * toggles check of checkbox\r\n     */\r\n    handleCheckbox = () => {\r\n        this.setState({ checked: !this.state.checked });\r\n    };\r\n\r\n    /**\r\n     * Rendering invite options\r\n     */\r\n    renderOptions = () => {\r\n        return (\r\n            <div>\r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={this.state.checked}\r\n                                value={this.state.checked}\r\n                                onChange={() => this.handleCheckbox()}\r\n                            />\r\n                        }\r\n                        label=\"Make this event shareable\"\r\n                    />\r\n                </FormGroup>\r\n                {this.renderContactDropdown()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderContactDropdown = () => {\r\n        if (this.state.checked) {\r\n            return (\r\n                <InviteContacts setSharedEvent={l => this.setSharedEvent(l)} />\r\n            );\r\n        }\r\n    };\r\n\r\n    setSharedEvent = list => {\r\n        this.setState({ invite_list: list });\r\n    };\r\n\r\n    //We are rendering buttons separately from options\r\n    /**\r\n     * Rendering buttons\r\n     */\r\n    renderButtons = () => {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={this.props.goToSecondPage}\r\n                >\r\n                    Back\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={e =>\r\n                        this.props.submitEvent(e, this.state.invite_list)\r\n                    }\r\n                >\r\n                    Submit Event\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"userCancelButton\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    endIcon={<CancelIcon />}\r\n                    onClick={this.props.cancelEvent}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AddThirdPage;\r\n","import React, { Component } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\nimport AddSecondPage from \"./AddSecondPage\";\r\nimport AddThirdPage from \"./AddThirdPage\";\r\nimport { db } from \"./firebase\";\r\nimport uuid from \"uuid\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport const categories = Object.freeze({\r\n    None: \"None\",\r\n    Hobbies: \"Hobbies\",\r\n    Social: \"Social\",\r\n    Errands: \"Errands\",\r\n    Projects: \"Projects\",\r\n    Miscellaneous: \"Miscellaneous\",\r\n});\r\n\r\nexport class AddEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //event variables\r\n            title: JSON.parse(localStorage.getItem(\"saved_title\")) || \"\",\r\n            description:\r\n                JSON.parse(localStorage.getItem(\"saved_description\")) || \"\",\r\n            startDate: JSON.parse(localStorage.getItem(\"saved_start_date\")) || \"\",\r\n            endDate: JSON.parse(localStorage.getItem(\"saved_end_date\")) || \"\",\r\n            category: JSON.parse(localStorage.getItem(\"saved_category\")) || categories.None,\r\n            calendar: \"default\",\r\n\r\n            //variables to keep track of pages & state\r\n            firstPage: true,\r\n            secondPage: false,\r\n            thirdPage: false,\r\n\r\n            //for social aspect\r\n            //invitees and owners will be emails\r\n            owners: [JSON.parse(localStorage.getItem(\"currentUser\"))], //every time event created, user will be owner\r\n            shared: false, //if this is being shared\r\n            invitees: [], //this only if being shared\r\n\r\n            //snackbar errors\r\n            errorMessageOpen: false,\r\n            message: \"\",\r\n            successMessageOpen: false,\r\n\r\n            // Category\r\n            anchorEl: null,\r\n            openMenu: false,\r\n        };\r\n    }\r\n\r\n    //----- snackbar functions -----\r\n    handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ errorMessageOpen: false });\r\n    };\r\n    handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ successMessageOpen: false });\r\n    };\r\n\r\n    //----- end of snackbar functions -----\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.viewForm()}\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.errorMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleErrorClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleErrorClose}\r\n                        variant=\"error\"\r\n                        message={this.state.message}\r\n                    />\r\n                </Snackbar>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.successMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSuccessClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleSuccessClose}\r\n                        variant=\"success\"\r\n                        message={\"New event has been created\"}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //----- first page functions -----\r\n    /**\r\n     * @param {*} t takes user input and sets it equal to title\r\n     */\r\n    handleTitle = t => {\r\n        this.setState({ title: t.target.value });\r\n    };\r\n\r\n    /**\r\n     * @param {*} des takes user input and sets it equal to description\r\n     */\r\n    handleDescription = des => {\r\n        this.setState({ description: des.target.value });\r\n    };\r\n\r\n    /**\r\n     * Submits user input of title and description\r\n     * @param {*} e Takes in event of pressing button\r\n     * @return sets state to go to second page and saves title\r\n     * and description to local storage\r\n     */\r\n    onSubmitFirstPage = e => {\r\n        e.preventDefault();\r\n        //when they go back from second page, the data still there\r\n        if (this.state.title !== \"\" && this.state.title !== null) {\r\n            localStorage.setItem(\r\n                \"saved_title\",\r\n                JSON.stringify(this.state.title)\r\n            );\r\n            localStorage.setItem(\r\n                \"saved_description\",\r\n                JSON.stringify(this.state.description)\r\n            );\r\n            localStorage.setItem(\r\n                \"saved_category\",\r\n                JSON.stringify(this.state.category)\r\n            );\r\n            //going to second page & unrendering first page\r\n            this.setState({ firstPage: false, secondPage: true });\r\n        } else {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Please input a title!\"\r\n            });\r\n        }\r\n    };\r\n    //----- end of first page functions -----\r\n\r\n    //----- second page functions -----\r\n    /**\r\n     * If you hit back on the second page, it goes back to first page\r\n     */\r\n    goToFirstPage = () => {\r\n        this.setState({ firstPage: true, secondPage: false });\r\n    };\r\n    //redo error messages later when implementing another date and time picker\r\n\r\n    /**\r\n     * @param {string=} startDate Takes in start date from eric's calendar\r\n     * @param {string=} endDate Takes in end date from eric's calendar\r\n     * @param {*} e Takes in event of hitting button to go to next page\r\n     * @return Sets date and time in state\r\n     * @return error message if date & time are null\r\n     */\r\n    goToThirdPage = (startDate, endDate, e) => {\r\n        e.preventDefault();\r\n        if (startDate !== null && startDate !== \"\" && endDate !== null && endDate !== \"\") {\r\n            this.setState({\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                firstPage: false,\r\n                secondPage: false,\r\n                thirdPage: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Please input a date and time!\"\r\n            });\r\n        }\r\n    };\r\n    //----- end of second page functions -----\r\n\r\n    //----- third page functions -----\r\n    /**\r\n     * Goes back to second page when hitting back on third page\r\n     */\r\n    goToSecondPage = () => {\r\n        this.setState({ firstPage: false, secondPage: true, thirdPage: false });\r\n    };\r\n\r\n    handleCategoryMenuClick = selectedCategory => {\r\n        this.handleClose();\r\n        this.setState({ category: selectedCategory });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, openMenu: !this.state.openMenu });\r\n    };\r\n\r\n    \r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n\r\n    /**\r\n     * When creating/editing event, it adds/edits it to the database./\r\n     * If the event is going to be shared, it will add it to the\r\n     * shared event collection\r\n     * @param {*} e takes in event of hitting submit event\r\n     * @return saves to firestore database and goes back to home page\r\n     * @todo fix edit event\r\n     */\r\n    submitEvent = (e, invitees) => {\r\n        e.preventDefault();\r\n        let code = this.makeCode(5);\r\n        const { idOfEditEvent, editingEvent } = this.props;\r\n        const id = uuid.v4();\r\n        \r\n        if (!editingEvent) {\r\n            //add new event\r\n            db.collection(\"events\")\r\n                .doc(id)\r\n                .set({\r\n                    id: id,\r\n                    code: code,\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    category: this.state.category,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate,\r\n                    owners: this.state.owners,\r\n                    accepted_invitees: [],\r\n                    declined_invitees: [],\r\n                    invitees: invitees\r\n                });\r\n        } else {\r\n            //editing event\r\n            db.collection(\"events\")\r\n                .doc(idOfEditEvent)\r\n                .update({\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    category: this.state.category,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate,\r\n                    invitees: invitees\r\n                });\r\n        }\r\n        this.props.setHomePage();\r\n    };\r\n\r\n    makeCode = length => {\r\n        var result = \"\";\r\n        var characters =\r\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(\r\n                Math.floor(Math.random() * charactersLength)\r\n            );\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} check if checkbox is clicked to make event shareable\r\n     * @param {Array} list populatex invitees with contacts' emails\r\n     * @todo this list will be populated with people outside the contact list\r\n     */\r\n\r\n    //----- end of third page functions -----\r\n\r\n    /**\r\n     * Decides what to display when adding event by\r\n     * conditionally renders new pages\r\n     */\r\n    viewForm = () => {\r\n        const btnStyle = {\r\n            textAlign: \"right\"\r\n        };\r\n\r\n        //this will be the same as AddFirstPage\r\n        //just grabbing title and description\r\n        if (this.state.firstPage) {\r\n            return (\r\n                <div>\r\n                    <Container maxWidth=\"sm\">\r\n                        <form onSubmit={e => this.onSubmitFirstPage(e)}>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Event Name\"\r\n                                fullWidth\r\n                                value={this.state.title}\r\n                                margin=\"normal\"\r\n                                onChange={title => this.handleTitle(title)}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Event Description ... Optional\"\r\n                                fullWidth\r\n                                value={this.state.description}\r\n                                margin=\"normal\"\r\n                                onChange={des => this.handleDescription(des)}\r\n                            />\r\n                            {/* <div style={this.getBtnStyle()}> */}\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                aria-controls=\"simple-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={e => this.handleClick(e)}\r\n                            >\r\n                                {this.state.category}\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"simple-menu\"\r\n                                anchorEl={this.state.anchorEl}\r\n                                open={this.state.openMenu}\r\n                                onClose={this.handleClose}\r\n                            >\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Hobbies)}>\r\n                                {categories.Hobbies}\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Social)}>\r\n                                {categories.Social}\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Errands)}>\r\n                                {categories.Errands}\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Projects)}>\r\n                                {categories.Projects}\r\n                                </MenuItem>\r\n                                <MenuItem onClick={() => this.handleCategoryMenuClick(categories.Miscellaneous)}>\r\n                                {categories.Miscellaneous}\r\n                                </MenuItem>\r\n                            </Menu>\r\n                            {/* </div> */}\r\n                            <br />\r\n                            <div style={btnStyle}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"userContinueButton\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    endIcon={<ArrowForwardIcon />}\r\n                                    onClick={e => this.onSubmitFirstPage(e)}\r\n                                >\r\n                                    Continue\r\n                                </Button>\r\n                            </div>\r\n                            <Button\r\n                                type=\"button\"\r\n                                className=\"userCancelButton\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                endIcon={<CancelIcon />}\r\n                                onClick={this.props.cancelEvent}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </form>\r\n                    </Container>\r\n                </div>\r\n            );\r\n        } else if (this.state.secondPage) {\r\n            return (\r\n                <div>\r\n                    <AddSecondPage\r\n                        cancelEvent={this.props.cancelEvent}\r\n                        goToFirstPage={() => this.goToFirstPage()}\r\n                        goToThirdPage={(startDate, endDate, e) =>\r\n                            this.goToThirdPage(startDate, endDate, e)\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (this.state.thirdPage) {\r\n            return (\r\n                <div>\r\n                    <AddThirdPage\r\n                        goToSecondPage={() => this.goToSecondPage()}\r\n                        cancelEvent={this.props.cancelEvent}\r\n                        submitEvent={(e, invitees) =>\r\n                            this.submitEvent(e, invitees)\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default AddEvent;\r\n","import React from 'react';\r\nimport { db } from './firebase'\r\nexport default class Form extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { contentList: [], emailList: [], };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit =\r\n\t\t\tthis.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdb\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n\t\t\t.get()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (data.exists) {\r\n\t\t\t\t\tthis.setState({ emailList: data.data().contacts, contentList: data.data().events })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"test-mailing\">\r\n\t\t\t\t<h1>Let's see if it works</h1>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"test-mailing\"\r\n\t\t\t\t\t\tname=\"test-mailing\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder=\"Send event\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.feedback}\r\n\t\t\t\t\t\tstyle={{ width: '100%', height: '150px' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tthis.setState({ feedback: event.target.value })\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tconst templateId = 'yes';\r\n\r\n\t\tthis.sendFeedback(templateId, { message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email })\r\n\t\tthis.props.handleDisplay();\r\n\t}\r\n\r\n\tsendFeedback(templateId, variables) {\r\n\t\twindow.emailjs.send(\"gmail\", templateId, { \"send_to\": this.state.emailList, \"content\": this.state.contentList })   // insert custom emails for send_to\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log('Email successfully sent!');\r\n\t\t\t\tconsole.log(variables);\r\n\t\t\t})\r\n\t\t\t// Handle errors here however you like, or use a React error boundary\r\n\t\t\t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\r\n\t}\r\n}","import React, { useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Invite(props) {\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n\r\n    const [personEmail, setPersonEmail] = React.useState([]);\r\n\r\n    const [emails, setEmails] = React.useState([]);\r\n\r\n    //this is because personEmail will be empty on first render\r\n    //since useState callback\r\n    const [fix, setFix] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {*} n an email that user selected\r\n     * @return {array} array with user included or not included\r\n     */\r\n    const handleChange = n => {\r\n        if (!personEmail.includes(n)) {\r\n            setPersonEmail([...personEmail, n]);\r\n        } else {\r\n            setPersonEmail(personEmail.filter(email => email !== n));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection(\"users\")\r\n            .doc(currentUser)\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    let temp = doc.data().contacts.map(c => {\r\n                        return c.email;\r\n                    });\r\n                    setEmails(temp);\r\n                }\r\n            });\r\n        db.collection(\"events\")\r\n            .doc(props.id)\r\n            .get()\r\n            .then(doc => {\r\n                setPersonEmail(doc.data().invitees); //this will finish after next useEffect\r\n                setFix(true); //so you need this line\r\n            });\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (fix) {\r\n            db.collection(\"events\")\r\n                .doc(props.id)\r\n                .update({\r\n                    invitees: personEmail\r\n                });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [personEmail]);\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"Invite More\"}</DialogTitle>\r\n                <DialogContent>\r\n                    {emails.map(name => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox\r\n                                checked={personEmail.indexOf(name) > -1}\r\n                                onChange={() => handleChange(name)}\r\n                            />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PieChart from 'react-minimal-pie-chart';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport Invite from \"./Invite\";\r\nimport moment from \"moment\";\r\n\r\nclass Cards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            startShare: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const handleExpandClick = () => {\r\n            this.setState({ expanded: !this.state.expanded });\r\n        };\r\n        const { data, isShared, hasAccepted } = this.props;\r\n        let invitees = data.invitees ? data.invitees.join(\"\\n\") : \"\";\r\n        let shareStatus = isShared ? \"Shared event\" : \"Made by me\";\r\n        let invitePeople = this.state.startShare ? (\r\n            <Invite id={data.id} open={this.state.startShare} />\r\n        ) : null;\r\n        let editButton = !isShared ? (\r\n            <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={() => this.props.editEvent(data.id)}\r\n            >\r\n                edit\r\n            </Button>\r\n        ) : null;\r\n        let deleteButton = !isShared ? (\r\n            <IconButton\r\n                aria-label=\"delete\"\r\n                onClick={() => this.props.deleteEvent(data.id)}\r\n            >\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        ) : null;\r\n\r\n        let acceptIcon = (isShared && !hasAccepted)? (\r\n            <div>\r\n                <IconButton onClick = {() => this.props.acceptInvite(data.id)}>\r\n                <CheckIcon/>\r\n            </IconButton>\r\n            <IconButton onClick = {() => this.props.declineInvite(data.id)}>\r\n                <ClearIcon/>\r\n            </IconButton>\r\n            </div>\r\n        ) : null;\r\n\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            {shareStatus}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {data.title}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {data.category}\r\n                        </Typography>\r\n                        <Typography>{data.description}</Typography>\r\n                        <Typography>{moment(data.startDate).format(\"LLLL\")+ \" - \" + moment(data.endDate).format(\"LT\")}</Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        {editButton}\r\n                        <IconButton\r\n                            aria-label=\"share\"\r\n                            onClick={() => this.handleShareEvent()}\r\n                        >\r\n                            <ShareIcon />\r\n                        </IconButton>\r\n                        {deleteButton}\r\n                        <IconButton\r\n                            onClick={handleExpandClick}\r\n                            aria-expanded={this.state.expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </IconButton>\r\n                        {acceptIcon}\r\n                    </CardActions>\r\n                    <Collapse\r\n                        in={this.state.expanded}\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                    >\r\n                        <CardContent>\r\n                            \r\n                            <PieChart data = {[\r\n                                {title: \"People confirmed going\", value: data.owners.length + data.accepted_invitees.length, color : \"#00e676\"},\r\n                                {title: \"People who might go\", value: data.invitees.length, color : \"#fff59d\"},\r\n                                {title: \"People who won't go\", value: data.declined_invitees.length, color : \"#78909c\"}\r\n                            ]} radius = {50} style={{\r\n                                height: '125px',\r\n                                marginBottom: '2em',\r\n                                marginTop : '0',\r\n                                display: 'flex'\r\n\r\n                              }}/>\r\n                            <Typography>\r\n                                Owners: {data.owners}\r\n                                <br />\r\n                                Invitees: {data.invitees}\r\n                                <br />\r\n                                Accepted Invitees: {data.accepted_invitees}\r\n                                <br />\r\n                                Declined Invitees: {data.declined_invitees}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Collapse>\r\n                </Card>\r\n                {invitePeople}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param id id of event to be shared with others\r\n     * @return pop up with checkboxes like the third page, select\r\n     * people to invite from contacts\r\n     */\r\n    handleShareEvent = () => {\r\n        this.setState({ startShare: !this.state.startShare });\r\n    };\r\n}\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nexport default class Modal extends React.Component {\r\n  /**\r\n   * Closes modal\r\n   */\r\n  onClose = e => {\r\n    this.props.onClose && this.props.onClose(e);\r\n  };\r\n\r\n  /**\r\n   * Renders modal with event data\r\n   */\r\n  render() {\r\n    if (!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    var description = \"\";\r\n    console.log(this.props.calendarEventDayData.events);\r\n\r\n    for (let i = 0; i < this.props.calendarEventDayData.events.length; ++i) {\r\n      var startTime = moment(this.props.calendarEventDayData.events[i].startDate).format(\"LT\");\r\n      var endTime = moment(this.props.calendarEventDayData.events[i].endDate).format(\"LT\");\r\n      var header = startTime + \" - \" + endTime + \": \" + this.props.calendarEventDayData.events[i].title;\r\n\r\n      description += header + \"\\n\" + this.props.calendarEventDayData.events[i].description + \"\\n\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"modal\" id=\"modal\">\r\n        <h2>{moment(this.props.calendarEventDayData.date).format(\"dddd\" + \" \"+ \"L\")}</h2>\r\n        <div className=\"content\">\r\n        {description.split(\"\\n\").map((i,key) => { return <div key={key}>{i}</div>; })}\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button className=\"toggle-button\" onClick={this.onClose}>\r\n            close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired\r\n};","import React from \"react\";\r\nimport * as dateFns from 'date-fns';\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./EventCalendar.css\";\r\nimport moment from \"moment\";\r\n\r\nexport class EventCalendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: new Date(),\r\n            selectedDate: null,\r\n            show: false,\r\n            title: \"\",\r\n            calendarEventDayData: null\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Comparator for ordering events.\r\n     * Used for days where there are multiple events.\r\n     */\r\n    compareEventStartDates(a, b) {\r\n        if ( moment(a.startDate).valueOf() < moment(b.startDate).valueOf() ){\r\n            return -1;\r\n        }\r\n\r\n        if ( moment(a.startDate).valueOf() > moment(b.startDate).valueOf() ){\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Updates modal state to display the events data\r\n     */\r\n    showModal = (calendarEventDayData) => {\r\n        this.calendarEventDayData = calendarEventDayData;\r\n\r\n        this.setState({\r\n          show: !this.state.show,\r\n          calendarEventDayData: this.calendarEventDayData,\r\n        });\r\n      };\r\n\r\n    /**\r\n     * Calendar header\r\n     */\r\n    renderHeader() {\r\n        const dateFormat = \"MMMM yyyy\";\r\n\r\n        return (\r\n            <div className=\"header row flex-middle\">\r\n                <div className=\"col col-start\">\r\n                    <div className=\"icon\" onClick={this.prevMonth}>\r\n                        chevron_left\r\n          </div>\r\n                </div>\r\n                <div className=\"col col-center\">\r\n                    <span>{dateFns.format(this.state.currentMonth, dateFormat)}</span>\r\n                </div>\r\n                <div className=\"col col-end\" onClick={this.nextMonth}>\r\n                    <div className=\"icon\">chevron_right</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Calendar week days\r\n     */\r\n    renderDays() {\r\n        const dateFormat = \"iiii\";\r\n        const days = [];\r\n\r\n        let startDate = dateFns.startOfWeek(this.state.currentMonth);\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            days.push(\r\n                <div className=\"col col-center\" key={i}>\r\n                    {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <div className=\"days row\">{days}</div>;\r\n    }\r\n\r\n\r\n    /**\r\n     * Calendar days\r\n     */\r\n    renderCells() {\r\n        var areThereEvents = !(\r\n            this.props.events === null ||\r\n            this.props.events === undefined || \r\n            this.props.events.length === 0);\r\n        \r\n        var areThereSharedEvents = !(\r\n            this.props.sharedEvents === null ||\r\n            this.props.sharedEvents === undefined ||\r\n            this.props.sharedEvents.length === 0);\r\n\r\n        if (areThereEvents || areThereSharedEvents) {\r\n            const { currentMonth, selectedDate } = this.state;\r\n            const monthStart = dateFns.startOfMonth(currentMonth);\r\n            const monthEnd = dateFns.endOfMonth(monthStart);\r\n            const startDate = dateFns.startOfWeek(monthStart);\r\n            const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n            const dateFormat = \"d\";\r\n            const rows = [];\r\n\r\n            let days = [];\r\n            let day = startDate;\r\n            let formattedDate = \"\";\r\n\r\n            let eventData = [];\r\n            if (areThereEvents) {\r\n                for (let i = 0; i < this.props.events.length; ++i) {\r\n                    if (moment(this.props.events[i].startDate).format(\"L\").split('/')[0] == dateFns.getMonth(currentMonth) + 1) {\r\n                        var data = {\r\n                            date: this.props.events[i].date,\r\n                            title: this.props.events[i].title,\r\n                            description: this.props.events[i].description,\r\n                            startDate: this.props.events[i].startDate,\r\n                            endDate: this.props.events[i].endDate,\r\n                        }\r\n        \r\n                        eventData.push(data)\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (areThereSharedEvents) {\r\n                for (let i = 0; i < this.props.sharedEvents.length; ++i) {\r\n                    if (moment(this.props.sharedEvents[i].startDate).format('L').split('/')[0]== dateFns.getMonth(currentMonth) + 1) {\r\n                        var data = {\r\n                            date: this.props.sharedEvents[i].date,\r\n                            title: this.props.sharedEvents[i].title,\r\n                            description: this.props.sharedEvents[i].description,\r\n                            startDate: this.props.sharedEvents[i].startDate,\r\n                            endDate: this.props.sharedEvents[i].endDate,\r\n                        }\r\n        \r\n                        eventData.push(data)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            let calendarEvents = [];\r\n\r\n            for (let i = 0; i < eventData.length; ++i) {\r\n\r\n                var duplicate = false;\r\n                var  eventDate = moment(eventData[i].startDate).format('L');\r\n                var calendarEventData = {\r\n                    title: eventData[i].title, \r\n                    description: eventData[i].description,\r\n                    startDate: eventData[i].startDate,\r\n                    endDate: eventData[i].endDate\r\n                }\r\n\r\n                for (let j = 0; j < calendarEvents.length && !duplicate; ++j) {\r\n                    if (calendarEvents[j].date === eventDate) {\r\n                        duplicate = true;\r\n                        \r\n                        calendarEvents[j].events.push(calendarEventData)\r\n                    }\r\n\r\n                }\r\n\r\n                if (!duplicate) {\r\n                    var calendarData = {\r\n                        date: eventDate,\r\n                        events: [ calendarEventData ]\r\n                    }\r\n\r\n                    calendarEvents.push(calendarData)\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < calendarEvents.length; ++i) {\r\n                calendarEvents[i].events.sort(this.compareEventStartDates);\r\n            }\r\n\r\n\r\n            while (day <= endDate) {\r\n                for (let i = 0; i < 7; i++) {\r\n                    formattedDate = dateFns.format(day, dateFormat);\r\n                    \r\n                    var isEvent = false;\r\n\r\n                    for (let i = 0; i < calendarEvents.length && !isEvent; ++i) {\r\n                        var calendarEventDay = calendarEvents[i].date.split('/')[1].replace(/^0+/, '');\r\n                        var calendarEventMonth = calendarEvents[i].date.split('/')[0].replace(/^0+/, '');\r\n\r\n                        // eslint-disable-next-line eqeqeq\r\n                        if ((calendarEventDay == dateFns.getDate(day).toString()) &&\r\n                            // eslint-disable-next-line eqeqeq\r\n                            (calendarEventMonth == (dateFns.getMonth(day) + 1))) {\r\n\r\n                                if (calendarEvents[i].events.length > 1) {\r\n\r\n                                    var multipleEventsTitle = (calendarEvents[i].events[0].title + \" +\" + (calendarEvents[i].events.length - 1)).toString();\r\n                                    console.log(multipleEventsTitle);\r\n                                    days.push(\r\n                                        <div\r\n                                            className={`col cell ${\r\n                                                !dateFns.isSameMonth(day, monthStart)\r\n                                                    ? \"disabled\"\r\n                                                    : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                                                }`}\r\n                                            key={day}\r\n                                            // onClick={() => this.onDateClick(dateFns.toDate(cloneDay))}\r\n                                            onClick={e => {\r\n                                                this.showModal(calendarEvents[i]);\r\n                                                }}\r\n                                        >\r\n                                            <span className=\"number\">{formattedDate}</span>\r\n                                            <span className=\"bg\">{formattedDate}</span>\r\n                                            <span className=\"title\">{multipleEventsTitle}</span>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                                else {\r\n                                    var title = calendarEvents[i].events[0].title.toString();\r\n                                    console.log(title);\r\n\r\n                                    days.push(\r\n                                        <div\r\n                                            className={`col cell ${\r\n                                                !dateFns.isSameMonth(day, monthStart)\r\n                                                    ? \"disabled\"\r\n                                                    : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                                                }`}\r\n                                            key={day}\r\n                                            onClick={e => {\r\n                                                this.showModal(calendarEvents[i]);\r\n                                                }}\r\n                                        >\r\n                                            <span className=\"number\">{formattedDate}</span>\r\n                                            <span className=\"bg\">{formattedDate}</span>\r\n                                            <span className=\"title\">{title}</span>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                            \r\n\r\n                            isEvent = true;\r\n                        }   \r\n                    }\r\n\r\n                    if(!isEvent) {\r\n                        days.push(\r\n                            <div\r\n                                className={`col cell ${\r\n                                    !dateFns.isSameMonth(day, monthStart)\r\n                                        ? \"disabled\"\r\n                                        : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                                    }`}\r\n                                key={day}\r\n                            >\r\n                                <span className=\"number\">{formattedDate}</span>\r\n                                <span className=\"bg\">{formattedDate}</span>\r\n                            </div>\r\n                        );\r\n                    }\r\n\r\n                    // days.push(\r\n                    //     <div\r\n                    //         className={`col cell ${\r\n                    //             !dateFns.isSameMonth(day, monthStart)\r\n                    //                 ? \"disabled\"\r\n                    //                 : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                    //             }`}\r\n                    //         key={day}\r\n                    //         // onClick={() => this.onDateClick(dateFns.toDate(cloneDay))}\r\n                    //         onClick={e => {\r\n                    //           this.showModal(e);\r\n                    //         }}\r\n                    //     >\r\n                    //         <span className=\"number\">{formattedDate}</span>\r\n                    //         <span className=\"bg\">{formattedDate}</span>\r\n\r\n                    //         <span>bla</span> \r\n                    //     </div>\r\n                    // );\r\n                    day = dateFns.addDays(day, 1);\r\n                }\r\n                rows.push(\r\n                    <div className=\"row\" key={day}>\r\n                        {days}\r\n                    </div>\r\n                );\r\n                days = [];\r\n            }\r\n                return <div className=\"body\">{rows}</div>;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Set the current state to the selected day\r\n     */\r\n    onDateClick = day => {\r\n        this.setState({\r\n            selectedDate: \"day\"\r\n        });\r\n        \r\n    };\r\n\r\n    /**\r\n     * Go to next month\r\n     */\r\n    nextMonth = () => {\r\n        this.setState({\r\n            currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\r\n        });\r\n    };\r\n\r\n    \r\n    /**\r\n     * Go to previous month\r\n     */\r\n    prevMonth = () => {\r\n        this.setState({\r\n            currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <div id=\"parent\">\r\n            <div className=\"calendar\">\r\n                {this.renderHeader()}\r\n                {this.renderDays()}\r\n                {this.renderCells()}\r\n            </div>\r\n            <div className=\"modal\">\r\n              <Modal \r\n              onClose={this.showModal} \r\n              show={this.state.show}\r\n              calendarEventDayData={this.calendarEventDayData}\r\n              >\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventCalendar;","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport \"react-table/react-table.css\";\r\nimport Form from \"./Form\";\r\nimport { db, firebase } from \"./firebase\";\r\nimport Cards from \"./Cards\";\r\nimport EventCalendar from \"./EventCalendar/EventCalendar\";\r\nimport moment from \"moment\";\r\nimport { categories } from \"./AddEvent\";\r\n\r\nexport class EventHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            openMenu: false,\r\n            anchorEl2: null,\r\n            openMenu2: false,\r\n            anchorEl3: null,\r\n            openMenu3: false,\r\n            showForm: false,\r\n            showShared: \"events\",\r\n            events: [],\r\n            sharedEvents: [],\r\n            acceptedEvents: [],\r\n            eventSortOrder: \"descending\"\r\n        };\r\n    }\r\n\r\n    areThereNoEvents() {\r\n        return this.state.events === null || this.state.events === undefined || this.state.events.length === 0;\r\n    }\r\n\r\n    areThereNoSharedEvents() {\r\n        return (\r\n            this.state.sharedEvents === null ||\r\n            this.state.sharedEvents === undefined ||\r\n            this.state.sharedEvents.length === 0\r\n        );\r\n    }\r\n    areNoAcceptedEvents() {\r\n        return (\r\n            this.state.acceptedEvents === null ||\r\n            this.state.acceptedEvents === undefined ||\r\n            this.state.acceptedEvents.length === 0\r\n        );\r\n    }\r\n    sendEmail = () => {\r\n        this.setState({ showForm: true });\r\n    };\r\n\r\n    switchEventView = () => {\r\n        this.setState({ showShared: !this.state.showShared });\r\n    };\r\n\r\n    setEventOrder = order => {\r\n        this.handleClose3();\r\n        this.setState({ eventSortOrder: order });\r\n    };\r\n\r\n    /**\r\n     * Comparator for ordering events ascending\r\n     */\r\n    compareEventStartDatesAscending(a, b) {\r\n        if (moment(a.startDate).valueOf() < moment(b.startDate).valueOf()) {\r\n            return -1;\r\n        }\r\n\r\n        if (moment(a.startDate).valueOf() > moment(b.startDate).valueOf()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Comparator for ordering events descending\r\n     */\r\n    compareEventStartDatesDescending(a, b) {\r\n        if (moment(a.startDate).valueOf() < moment(b.startDate).valueOf()) {\r\n            return 1;\r\n        }\r\n\r\n        if (moment(a.startDate).valueOf() > moment(b.startDate).valueOf()) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Comparator for ordering events by category\r\n     */\r\n    compareEventCategory(a, b) {\r\n        const map = {};\r\n\r\n        map[categories.None] = 0;\r\n        map[categories.Hobbies] = 1;\r\n        map[categories.Social] = 2;\r\n        map[categories.Errands] = 3;\r\n        map[categories.Projects] = 4;\r\n        map[categories.Hobbies] = 5;\r\n\r\n        if (map[a.category] < map[b.category]) {\r\n            return -1;\r\n        }\r\n\r\n        if (map[a.category] > map[b.category]) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    viewForm = () => {\r\n        if (this.state.showShared === \"events\") {\r\n            return <div>{this.showEvents()}</div>;\r\n        } else if (this.state.showShared === \"shared\") {\r\n            return <div>{this.showSharedEvents()}</div>;\r\n        } else if (this.state.showShared === \"accepted\") {\r\n            return <div>{this.showAcceptedEvents()}</div>;\r\n        } else if (this.state.showShared === \"calendar\") {\r\n            return <div>{this.showCalendar()}</div>;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Displays event table\r\n     * @return Header saying no events or Table of Events\r\n     */\r\n    showEvents = () => {\r\n        const { events } = this.state;\r\n\r\n        switch (this.state.eventSortOrder) {\r\n            case \"ascending\": {\r\n                events.sort(this.compareEventStartDatesAscending);\r\n                break;\r\n            }\r\n            case \"descending\": {\r\n                events.sort(this.compareEventStartDatesDescending);\r\n                break;\r\n            }\r\n            case \"category\": {\r\n                events.sort(this.compareEventCategory);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.areThereNoEvents()) {\r\n            return <h2>No events</h2>;\r\n        } else {\r\n            return events.map((event, index) => (\r\n                <Cards\r\n                    key={index}\r\n                    data={event}\r\n                    editEvent={id => this.props.editEvent(id)}\r\n                    deleteEvent={id => this.deleteEvent(id)}\r\n                />\r\n            ));\r\n        }\r\n    };\r\n\r\n    showSharedEvents = () => {\r\n        const { sharedEvents } = this.state;\r\n\r\n        switch (this.state.eventSortOrder) {\r\n            case \"ascending\": {\r\n                sharedEvents.sort(this.compareEventStartDatesAscending);\r\n                break;\r\n            }\r\n            case \"descending\": {\r\n                sharedEvents.sort(this.compareEventStartDatesDescending);\r\n                break;\r\n            }\r\n            case \"category\": {\r\n                sharedEvents.sort(this.compareEventCategory);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.areThereNoSharedEvents()) {\r\n            return <h2>No shared events</h2>;\r\n        } else {\r\n            console.log();\r\n            return sharedEvents.map((event, index) => (\r\n                <Cards\r\n                    key={index}\r\n                    data={event}\r\n                    isShared={true}\r\n                    hasAccepted={false}\r\n                    acceptInvite={id => this.acceptInvite(id)}\r\n                    declineInvite={id => this.declineInvite(id)}\r\n                />\r\n            ));\r\n        }\r\n    };\r\n\r\n    showAcceptedEvents = () => {\r\n        const { acceptedEvents } = this.state;\r\n        if (this.areNoAcceptedEvents()) {\r\n            return <h2>No accepted events</h2>;\r\n        } else {\r\n            return acceptedEvents.map((event, index) => (\r\n                <Cards key={index} data={event} isShared={true} hasAccepted={true} />\r\n            ));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Displays event calendar\r\n     */\r\n    showCalendar = () => {\r\n        const { events } = this.state;\r\n        const { sharedEvents, acceptedEvents } = this.state;\r\n\r\n        if (!this.areThereNoEvents() || !this.areThereNoSharedEvents()) {\r\n            return (\r\n                <div className=\"App\">\r\n                    <main>\r\n                        <EventCalendar\r\n                            events={events}\r\n                            sharedEvents={sharedEvents}\r\n                            acceptedEvents={acceptedEvents}\r\n                        ></EventCalendar>\r\n                    </main>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <h2>There are no events to be displayed</h2>;\r\n        }\r\n    };\r\n\r\n    getMainStyle = () => {\r\n        return {\r\n            textAlign: \"center\",\r\n            padding: \"5px\",\r\n            background: \"#fff\"\r\n        };\r\n    };\r\n\r\n    getBtnStyle = () => {\r\n      return {\r\n        textAlign: \"right\",\r\n        padding: \"10px\",\r\n        background: \"#fff\"\r\n      };\r\n    };\r\n\r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Clicks create event option and starts adding event\r\n     */\r\n    handleAddEventMenu = () => {\r\n        this.handleClose();\r\n        this.props.beginAddEvent();\r\n    };\r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n    handleClick2 = e => {\r\n        this.setState({\r\n            anchorEl2: e.currentTarget,\r\n            openMenu2: !this.state.openMenu2\r\n        });\r\n    };\r\n    handleClick3 = e => {\r\n        this.setState({\r\n            anchorEl3: e.currentTarget,\r\n            openMenu3: !this.state.openMenu3\r\n        });\r\n    };\r\n\r\n    /**\r\n     * closes drop down menu\r\n     */\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, openMenu: !this.state.openMenu });\r\n    };\r\n    handleClose2 = () => {\r\n        this.setState({ anchorEl2: null, openMenu2: !this.state.openMenu2 });\r\n    };\r\n    handleClose3 = () => {\r\n        this.setState({ anchorEl3: null, openMenu3: !this.state.openMenu3 });\r\n    };\r\n\r\n    /**\r\n     * Clicks join event option\r\n     */\r\n    handleJoinEventMenu = () => {\r\n        this.handleClose();\r\n        this.props.beginJoinEvent();\r\n    };\r\n\r\n    /**\r\n     * Delete Event\r\n     */\r\n    deleteEvent = id => {\r\n        db.collection(\"events\")\r\n            .doc(id)\r\n            .delete();\r\n    };\r\n    acceptInvite = id => {\r\n        const document = db.collection(\"events\").doc(id);\r\n        document\r\n            .update({\r\n                invitees: firebase.firestore.FieldValue.arrayRemove(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            })\r\n            .catch(err => console.error(err));\r\n        document\r\n            .update({\r\n                accepted_invitees: firebase.firestore.FieldValue.arrayUnion(\r\n                    JSON.parse(localStorage.getItem(\"currentUser\"))\r\n                )\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n    declineInvite = id => {\r\n        const document = db.collection(\"events\").doc(id);\r\n        document\r\n            .update({\r\n                invitees: firebase.firestore.FieldValue.arrayRemove(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            })\r\n            .catch(err => console.error(err));\r\n        document\r\n            .update({\r\n                declined_invitees: firebase.firestore.FieldValue.arrayUnion(\r\n                    JSON.parse(localStorage.getItem(\"currentUser\"))\r\n                )\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    /**\r\n     * Renders table and buttons below the header.\r\n     * @return Buttons\r\n     * @return Event Table\r\n     * @return Event Calendar(not implemented)\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.showForm && (\r\n                    <div>\r\n                        <Form handleDisplay={this.handleDisplay}></Form>\r\n                    </div>\r\n                )}\r\n                <div style={this.getBtnStyle()}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={e => this.handleClick(e)}\r\n                    >\r\n                        Create/Join Event\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.openMenu}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MenuItem onClick={this.handleAddEventMenu}>Create Event</MenuItem>\r\n                        <MenuItem onClick={this.handleJoinEventMenu}>Join Event</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                <div style={this.getBtnStyle()}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={e => this.handleClick3(e)}\r\n                    >\r\n                        Sort Event\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl3}\r\n                        open={this.state.openMenu3}\r\n                        onClose={this.handleClose3}\r\n                    >\r\n                        <MenuItem onClick={() => this.setEventOrder(\"ascending\")}>Latest</MenuItem>\r\n                        <MenuItem onClick={() => this.setEventOrder(\"descending\")}>Earliest</MenuItem>\r\n                        <MenuItem onClick={() => this.setEventOrder(\"category\")}>Category</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                <div style={this.getMainStyle()}>\r\n                    <Button onClick={e => this.handleClick2(e)}>Switch</Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl2}\r\n                        open={this.state.openMenu2}\r\n                        onClose={this.handleClose2}\r\n                    >\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"events\")}>Show Own Events</MenuItem>\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"shared\")}>Show New Event Invites</MenuItem>\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"accepted\")}>Show Accepted Events</MenuItem>\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"calendar\")}>Show Event Calendar</MenuItem>\r\n                    </Menu>\r\n                    {this.viewForm()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * this shows form for inviting others\r\n     */\r\n    handleDisplay = () => {\r\n        this.setState({ showForm: false });\r\n    };\r\n    handleMenuClick = text => {\r\n        this.handleClose2();\r\n        this.setState({ showShared: text });\r\n    };\r\n\r\n    componentDidMount() {\r\n        let tempObject = { temp: [] };\r\n\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        this.unsubscribe1 = db\r\n            .collection(\"events\")\r\n            .where(\"owners\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    console.log(\"1\");\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ events: tempObject.temp });\r\n            });\r\n\r\n        this.unsubscribe2 = db\r\n            .collection(\"events\")\r\n            .where(\"invitees\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    console.log(\"2\");\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ sharedEvents: tempObject.temp });\r\n            });\r\n\r\n        this.unsubscribe3 = db\r\n            .collection(\"events\")\r\n            .where(\"accepted_invitees\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    console.log(\"3\");\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ acceptedEvents: tempObject.temp });\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"unsub\");\r\n        this.unsubscribe1();\r\n        this.unsubscribe2();\r\n        this.unsubscribe3();\r\n    }\r\n}\r\n/**\r\n * @return events that current user made that are not shared\r\n * @return shared events which are events current user shared(invited people)\r\n */\r\n\r\nexport default EventHome;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\n\r\n//database\r\nimport { db, firebase } from \"./firebase\";\r\n\r\nexport default function AddContact() {\r\n    //----- states -----\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userInput, setUserInput] = React.useState(\"\");\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [errorOpen, setErrorOpen] = React.useState(false);\r\n    const [successOpen, setSuccessOpen] = React.useState(false);\r\n    const [message, setMessage] = React.useState(\"\");\r\n    //----- end of states -----\r\n\r\n    //----- styles -----\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n    //----- end of styles -----\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setErrorOpen(false);\r\n    };\r\n    const handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setSuccessOpen(false);\r\n    };\r\n\r\n    /**\r\n     * Adds contact by referencing database\r\n     */\r\n    const handleAddContact = () => {\r\n        /*\r\n            first it checks in database if userinput exists\r\n            then it accesses the current user's doc, and updates\r\n            their contact list with the user's input contact\r\n\r\n            when you add the contact, it adds the name and email\r\n\r\n            concerns: we did not use boolean variables to seperate the\r\n            check from the database addition because it does not update \r\n            fast enough and the contact does not get added\r\n        */\r\n        db.collection(\"users\")\r\n            .doc(userInput)\r\n            .get()\r\n            .then(docSnapshot => {\r\n                if (docSnapshot.exists) {\r\n                    db.collection(\"users\")\r\n                        .doc(currentUser)\r\n                        .update({\r\n                            contacts: firebase.firestore.FieldValue.arrayUnion(\r\n                                {\r\n                                    displayName: docSnapshot.data().displayName,\r\n                                    email: userInput,\r\n                                }\r\n                            )\r\n                        });\r\n                    handleClose();\r\n                    setSuccessOpen(true);\r\n                    setMessage(\"Successfully added contact!\");\r\n                } else {\r\n                    setErrorOpen(true);\r\n                    setMessage(\"Invalid contact!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Handles User Input when entering contact's\r\n     * email\r\n     * @param {*} t text that user types in\r\n     */\r\n    const handleInput = t => {\r\n        setUserInput(t.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    Add Contact\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Adding Contact</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To add a contact, please enter their email address.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAddContact} color=\"primary\">\r\n                        Enter\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={errorOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleErrorClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleErrorClose}\r\n                    variant=\"error\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={successOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleSuccessClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleSuccessClose}\r\n                    variant=\"success\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ViewContacts() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [c, setListofContacts] = React.useState([]);\r\n\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection(\"users\")\r\n            .doc(currentUser)\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    setListofContacts(doc.data().contacts);\r\n                }\r\n            });\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const listOfContacts = c.map((contact, index) => (\r\n        <li key={index}>\r\n            {contact.displayName} <br /> {contact.email}\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    View Contacts\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"List of your Contacts\"}</DialogTitle>\r\n                <DialogContent>{listOfContacts}</DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddContact from './AddContact'\r\nimport ViewContacts from './ViewContacts'\r\nimport firebase from \"firebase\";\r\nimport logo from \"./logo.png\";\r\n//import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { db } from \"./firebase\";\r\n\r\nconst headerStyle = {\r\n    background: \"#fff\",\r\n    //color: \"#5a769e\",\r\n    textAlign: \"center\",\r\n    padding: \"3px\",\r\n    //fontSize: \"24px\",\r\n    //fontFamily: \"Courier New\",\r\n    //fontStyle: \"italic\"\r\n};\r\n\r\nconst headButtonStyle = {\r\n    textAlign: \"left\"\r\n};\r\n\r\n\r\nexport class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            addContactsPrompt: false,\r\n        };\r\n    }\r\n\r\n    //localStorage is to access database document\r\n    /**\r\n     * when header mounts, it updates user data\r\n     * @return user data from the database\r\n     */\r\n    componentDidMount() {\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .get()\r\n            .then(data => {\r\n                if (data.exists) {\r\n                    this.setState({ user: data.data()});\r\n                } else {\r\n                    //console.log(\"Sad toot\");\r\n                }\r\n            });\r\n    }\r\n    \r\n    /**\r\n     * Renders the buttons to view/add contacts and\r\n     * sign out button and name of user\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header style={headerStyle}>\r\n                    <div>\r\n                        <header>\r\n                            <img\r\n                                src={logo}\r\n                                height=\"117px\"\r\n                                width=\"150px\"\r\n                                alt=\"Schedule It\" />\r\n                        </header>\r\n                    </div>\r\n                    <AddContact/>\r\n                    <ViewContacts/>\r\n\r\n                    {this.state.user && (\r\n                        <div>\r\n                            <div style={headButtonStyle}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    component={Link}\r\n                                    to=\"/\"\r\n                                >\r\n                                    Profile\r\n                                </Button>\r\n                                <br />\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    component={Link}\r\n                                    to=\"/home\"\r\n                                >\r\n                                    Events\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { db, firebase } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Join(props) {\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [userInput, setUserInput] = React.useState(\"\");\r\n\r\n    // SNACKBAR\r\n    const [errorOpen, setErrorOpen] = React.useState(false);\r\n    const [successOpen, setSuccessOpen] = React.useState(false);\r\n    const [message, setMessage] = React.useState(\"\");\r\n\r\n    const handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setErrorOpen(false);\r\n    };\r\n    const handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setSuccessOpen(false);\r\n    };\r\n\r\n    //END OF SNACKBAR\r\n\r\n    const handleInput = t => {\r\n        setUserInput(t.target.value);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleJoinEvent = () => {\r\n        db.collection(\"events\")\r\n            .where(\"code\", \"==\", userInput)\r\n            .get()\r\n            .then(querySnapshot => {\r\n                if (!querySnapshot.empty) {\r\n                    querySnapshot.forEach(doc => {\r\n                        db.collection(\"events\")\r\n                            .doc(doc.data().id)\r\n                            .update({\r\n                                invitees: firebase.firestore.FieldValue.arrayUnion(\r\n                                    currentUser\r\n                                )\r\n                            });\r\n                        setSuccessOpen(true);\r\n                        setMessage(\"Successfully joined event!\");\r\n                        handleClose();\r\n                    });\r\n                } else {\r\n                    setErrorOpen(true);\r\n                    setMessage(\"Invalid code!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"Type in code in join event\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Enter in event's code:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Event Code\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                    <Button onClick={handleJoinEvent} color=\"primary\">\r\n                        Enter\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={errorOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleErrorClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleErrorClose}\r\n                    variant=\"error\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={successOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleSuccessClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleSuccessClose}\r\n                    variant=\"success\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AddEvent from \"./AddEvent\";\r\nimport EventHome from \"./EventHome\";\r\nimport Header from \"./header\";\r\nimport { db } from \"./firebase\";\r\nimport Join from \"./Join\";\r\n\r\nexport class EventManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            homePage: true,\r\n            editingEvent: false,\r\n            idOfEditEvent: \"\",\r\n            joinEvent: false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Starts the process of adding a new event\r\n     * @return sets home page to false\r\n     * @return clears localStorage of event details\r\n     */\r\n    beginAddEvent = () => {\r\n        //have to account for them refreshing\r\n        localStorage.removeItem(\"saved_title\");\r\n        localStorage.removeItem(\"saved_description\");\r\n        // localStorage.removeItem(\"saved_time\");\r\n        // localStorage.removeItem(\"saved_date\");\r\n        localStorage.removeItem(\"saved_start_date\");\r\n        localStorage.removeItem(\"saved_end_date\");\r\n        this.setAdd();\r\n    };\r\n\r\n    beginJoinEvent = () => {\r\n        this.setState({ joinEvent: !this.state.joinEvent });\r\n    };\r\n\r\n    /**\r\n     * @param id id of event that is being edited\r\n     * @param viewShared if we are editing shared event\r\n     * or normal event\r\n     *\r\n     */\r\n    editEvent = (id, viewShared) => {\r\n        //accessing shared event collections\r\n        if (viewShared) {\r\n            //db.collection(\"shared_events\").doc(id)\r\n        }\r\n        //accessing normal event collections\r\n        else {\r\n            db.collection(\"events\")\r\n                .doc(id)\r\n                .get()\r\n                .then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log(\"TOOT\");\r\n                        localStorage.setItem(\r\n                            \"saved_title\",\r\n                            JSON.stringify(doc.data().title)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_description\",\r\n                            JSON.stringify(doc.data().description)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_category\",\r\n                            JSON.stringify(doc.data().category)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_start_date\",\r\n                            JSON.stringify(doc.data().startDate)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_end_date\",\r\n                            JSON.stringify(doc.data().endDate)\r\n                        );\r\n                    }\r\n                });\r\n        }\r\n        this.setState(\r\n            {\r\n                editingEvent: true,\r\n                idOfEditEvent: id\r\n            },\r\n            this.setAdd()\r\n        );\r\n    };\r\n\r\n    /**\r\n     * @param id takes in the id of the event to be deleted\r\n     * @return {array} returns the updated array with\r\n     * event removed to the database\r\n     * @todo delete either shared or personal events\r\n     */\r\n\r\n    /**\r\n     * Cancels the process of event creation\r\n     * @return Return back to the home page\r\n     */\r\n    cancelEvent = () => {\r\n        // localStorage.removeItem(\"saved_title\");\r\n        // localStorage.removeItem(\"saved_description\");\r\n        // localStorage.removeItem(\"saved_time\");\r\n        // localStorage.removeItem(\"saved_date\");\r\n        this.setHomePage();\r\n    };\r\n\r\n    /**\r\n     * function to start add/edit event\r\n     * @return sets home page to false\r\n     */\r\n    setAdd = () => {\r\n        this.setState({ homePage: false });\r\n    };\r\n\r\n    /**\r\n     * Sets view back to home page\r\n     * @return Home Page\r\n     */\r\n    setHomePage = () => {\r\n        this.setState({\r\n            homePage: true,\r\n            editingEvent: false,\r\n            idOfEditEvent: \"\"\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Decides what to render, between the\r\n     * home page and event creation page\r\n     */\r\n    render() {\r\n        let joinDialog = this.state.joinEvent ? <Join open={true}/> : null;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {this.state.homePage && (\r\n                    <EventHome\r\n                        beginAddEvent={this.beginAddEvent}\r\n                        beginJoinEvent={this.beginJoinEvent}\r\n                        editEvent={this.editEvent}\r\n                        deleteEvent={this.deleteEvent}\r\n                    />\r\n                )}\r\n                {!this.state.homePage && (\r\n                    <AddEvent\r\n                        cancelEvent={this.cancelEvent}\r\n                        setHomePage={() => this.setHomePage()}\r\n                        editingEvent={this.state.editingEvent}\r\n                        idOfEditEvent={this.state.idOfEditEvent}\r\n                    />\r\n                )}\r\n                {joinDialog}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventManager;\r\n","import React, { Component } from \"react\";\r\nimport { firebase, db } from \"./firebase\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Header from \"./header\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n//import { Link } from \"react-router-dom\";\r\n//import logo from \"./logo.png\";\r\n//import { textAlign } from \"@material-ui/system\";\r\n\r\n\r\nvar CLIENT_ID = \"YOUR_OAUTH_CLIENT_ID\";\r\n\r\nconst logInStyle = {\r\n    textAlign: \"center\",\r\n    top: \"100%\",\r\n    background: \"#fff\",\r\n    fontSize: \"20px\",\r\n    position: \"relative\"\r\n};\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // We will use Google and email as auth providers.\r\n    signInOptions: [\r\n        {\r\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            authMethod: \"https://accounts.google.com\",\r\n            // Required to enable ID token credentials for this provider.\r\n            clientId: CLIENT_ID\r\n        },\r\n        {\r\n            provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            requireDisplayName: true\r\n        }\r\n    ],\r\n    callbacks: {\r\n        // Avoid redirects after sign-in.\r\n        signInSuccessWithAuthResult: () => false\r\n    }\r\n};\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSignedIn: false,\r\n            picURL: \"\",\r\n            nameDisplay: \"\",\r\n            current_user_email: \"\",\r\n            userName: \"\",\r\n            bioDisplay: \"\",\r\n            userBio: \"\",\r\n            isUploading: false,\r\n            progress: 0,\r\n            profilePic: \"\"\r\n        };\r\n    }\r\n\r\n    // handle profile pic upload to Storage\r\n    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n\r\n    handleProgress = progress => this.setState({ progress });\r\n\r\n    handleUploadError = error => {\r\n        this.setState({ isUploading: false });\r\n        console.error(error);\r\n    };\r\n\r\n    handleUploadSuccess = filename => {\r\n        this.setState({ profilePic: filename, progress: 100, isUploading: false });\r\n        firebase\r\n            .storage()\r\n            .ref(\"images\")\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url => this.setState({ picURL: url }));\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({\r\n                    isSignedIn: !!user\r\n                });\r\n                //lets contacts data persist\r\n                let docReference = db.collection(\"users\").doc(user.email);\r\n                docReference.get().then(documentSnapshot => {\r\n                    if (!documentSnapshot.exists) {\r\n                        docReference.set({\r\n                            displayName: user.displayName,\r\n                            email: user.email,\r\n                            contacts: [],\r\n                            events: [],\r\n                            polls: [],\r\n                            pictureURL: user.photoURL,\r\n                            bio: \"\"\r\n                        });\r\n                    }\r\n                });\r\n\r\n                let docRef = db.collection('users').doc(user.email);\r\n                docRef.get().then(doc => {\r\n                    if (!doc.exists) {\r\n                        //console.log('No such document!');\r\n                    } else {\r\n                        //console.log('Document data:', doc.data());\r\n                        this.setState({ picURL: doc.data().pictureURL });\r\n                        this.setState({ nameDisplay: doc.data().displayName });\r\n                        this.setState({ userName: doc.data().displayName });\r\n                        this.setState({ current_user_email: doc.data().email });\r\n                        this.setState({ bioDisplay: doc.data().bio });\r\n                        this.setState({ userBio: doc.data().bio });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('Error getting document', err);\r\n                });\r\n\r\n                //locally store current user's email\r\n                localStorage.setItem(\"currentUser\", JSON.stringify(user.email));\r\n                //console.log(\"toot\");\r\n            }\r\n        });\r\n    };\r\n\r\n    onClick = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        localStorage.clear();\r\n    };\r\n\r\n    //update profile info in db\r\n    updateDb = e => {\r\n        if (this.state.nameDisplay !== this.state.userName) {\r\n            db.collection(\"users\")\r\n                .doc(this.state.current_user_email)\r\n                .update({\r\n                    displayName: this.state.nameDisplay,\r\n                });\r\n        }\r\n        if (this.state.bioDisplay !== this.state.userBio) {\r\n            db.collection(\"users\")\r\n                .doc(this.state.current_user_email)\r\n                .update({\r\n                    bio: this.state.bioDisplay\r\n                });\r\n        }\r\n        db.collection(\"users\")\r\n            .doc(this.state.current_user_email)\r\n            .update({\r\n                pictureURL: this.state.picURL\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <Header />\r\n                {this.state.isSignedIn ? (\r\n                    <div style={logInStyle}>\r\n                        <img src={this.state.picURL} alt=\"Profile\" vertical-align=\"middle\" width=\"100px\" height=\"100px\" border-radius=\"50%\" />\r\n                        <br />                        \r\n                        <form onSubmit={this.updateDb}>\r\n                            {this.state.isUploading && <p>Progress: {this.state.progress}</p>}\r\n                            <label\r\n                                style={{\r\n                                    backgroundColor: '#3f51b5',\r\n                                    color: 'white',\r\n                                    padding: '5px',\r\n                                    borderRadius: 4,\r\n                                    fontSize: 18,\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    Upload profile picture\r\n                                <FileUploader\r\n                                    hidden\r\n                                    accept=\"image/*\"\r\n                                    name=\"Profile Picture\"\r\n                                    randomizeFilename\r\n                                    storageRef={firebase.storage().ref(\"images\")}\r\n                                    onUploadStart={this.handleUploadStart}\r\n                                    onUploadError={this.handleUploadError}\r\n                                    onUploadSuccess={this.handleUploadSuccess}\r\n                                    onProgress={this.handleProgress}\r\n                                />\r\n                            </label>\r\n                            <br />\r\n                            <label style={{\r\n                                fontSize: 18\r\n                            }}>\r\n                                {firebase.auth().currentUser.email}\r\n                            </label>\r\n                            <br />\r\n                            <label style={{\r\n                                fontSize: 18,\r\n                            }}>\r\n                                Name\r\n                            </label>\r\n                            <br />\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"fullname\"\r\n                                size=\"26\"\r\n                                placeholder=\"Your name\"\r\n                                onChange={e => this.setState({ nameDisplay: e.target.value })}\r\n                                value={this.state.nameDisplay}\r\n                            />\r\n                            <br />\r\n                            <label style={{\r\n                                fontSize: 18,\r\n                            }}>\r\n                                Biography\r\n                            </label>\r\n                            <br />\r\n                            <textarea\r\n                                name=\"bioText\"\r\n                                rows=\"10\"\r\n                                cols=\"27\"\r\n                                placeholder=\"Biography\"\r\n                                value={this.state.bioDisplay}\r\n                                onChange={e => this.setState({ bioDisplay: e.target.value })}\r\n                            >\r\n                            </textarea>\r\n                            <br/>\r\n                            <button type=\"submit\">Save changes</button>\r\n                        </form>\r\n                        <br />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.onClick()}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </div>\r\n                ) : (\r\n                    <StyledFirebaseAuth\r\n                        uiCallback={ui => ui.disableAutoSignIn()}\r\n                        uiConfig={uiConfig}\r\n                        firebaseAuth={firebase.auth()}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport EventManager from \"./components/EventManager\";\r\nimport Login from './components/Login'\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Login/>\r\n                </Route>\r\n                <Route exact path=\"/home\">\r\n                    <EventManager />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}