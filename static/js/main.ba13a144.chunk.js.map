{"version":3,"sources":["components/Snackbar.js","components/firebase.js","components/DoodleCalendar.js","components/AddSecondPage.js","components/InviteContacts.js","components/AddThirdPage.js","components/AddEvent.js","components/Form.js","components/Invite.js","components/Cards.js","components/Modal/Modal.js","components/EventCalendar/EventCalendar.js","components/EventHome.js","components/AddContact.js","components/ViewContacts.js","components/Notifcations.js","components/header.js","components/Join.js","components/EventManager.js","components/Login.js","components/Profile.js","App.js","serviceWorker.js","index.js","components/logo.png"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","props","classes","className","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","close","onClick","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","DoodleCalendar","handleEventRemove","event","selectedIntervals","state","index","findIndex","interval","uid","splice","setState","handleEventUpdate","handleSelect","newIntervals","lastUid","intervals","map","concat","length","console","log","parentMethod","getCalendarStyle","padding","displayCurrentEvents","currentEvents","i","currentUser","JSON","parse","localStorage","getItem","collection","where","onSnapshot","data","forEach","doc","eventData","end","moment","endDate","start","startDate","value","title","push","style","this","dayFormat","startTime","h","m","endTime","scaleFormat","numberOfDays","onIntervalSelect","onIntervalUpdate","onIntervalRemove","useModal","React","Component","AddSecondPage","changeCalendar","calendar","onEventSubmitted","format","eventStartDate","eventEndDate","setItem","stringify","renderCalendar","e","children","renderButtons","goToFirstPage","size","Button","type","goToThirdPage","endIcon","cancelEvent","useStyles","makeStyles","root","textAlign","InviteContacts","useState","personEmail","setPersonEmail","emails","setEmails","useEffect","get","then","exists","temp","contacts","c","email","setSharedEvent","FormControl","InputLabel","margin","Select","labelId","multiple","onChange","target","input","Input","renderValue","selected","join","name","MenuItem","Checkbox","checked","indexOf","ListItemText","AddThirdPage","handleCheckbox","renderOptions","FormGroup","row","FormControlLabel","control","label","renderContactDropdown","l","list","invite_list","goToSecondPage","submitEvent","categories","Object","freeze","None","Hobbies","Social","Errands","Projects","Miscellaneous","AddEvent","handleErrorClose","reason","errorMessageOpen","handleSuccessClose","successMessageOpen","handleTitle","t","handleDescription","des","description","onSubmitFirstPage","preventDefault","category","firstPage","secondPage","thirdPage","handleCategoryMenuClick","selectedCategory","handleClose","anchorEl","openMenu","handleClick","currentTarget","invitees","code","makeCode","idOfEditEvent","editingEvent","uuid","v4","batch","accepted_invitees","x","id2","set","user","seen","typeOf","eventTitle","commit","catch","err","update","templateId","emailEvent","emailDescription","emailStartDate","emailEndDate","window","emailjs","send","res","owners","declined_invitees","setHomePage","result","characters","charactersLength","charAt","Math","floor","random","viewForm","Container","maxWidth","aria-controls","aria-haspopup","Menu","open","onSubmit","TextField","placeholder","fullWidth","shared","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Form","contentList","emailList","handleChange","bind","handleSubmit","events","required","feedback","width","height","sendFeedback","message_html","from_name","reply_to","handleDisplay","variables","Transition","forwardRef","ref","Slide","direction","Invite","setOpen","originalInvitees","setOriginalInvitees","fix","setFix","temp2","filter","includes","Dialog","TransitionComponent","keepMounted","aria-labelledby","DialogTitle","DialogContent","n","DialogActions","Cards","handleShareEvent","startShare","expanded","isShared","hasAccepted","shareStatus","invitePeople","editButton","editEvent","deleteButton","deleteEvent","acceptIcon","acceptInvite","declineInvite","Card","CardContent","Typography","gutterBottom","component","CardActions","aria-expanded","Collapse","in","timeout","unmountOnExit","radius","marginBottom","marginTop","Modal","show","calendarEventDayData","date","split","EventCalendar","showModal","onDateClick","day","selectedDate","nextMonth","currentMonth","dateFns","prevMonth","Date","a","b","valueOf","days","areThereEvents","undefined","areThereSharedEvents","sharedEvents","areThereAcceptedEvents","acceptedEvents","duplicate","eventDate","calendarEventData","calendarData","isEvent","calendarEventDay","calendarEventMonth","multipleEventsTitle","monthStart","monthEnd","rows","formattedDate","calendarEvents","j","sort","compareEventStartDates","replace","toString","renderHeader","renderDays","renderCells","EventHome","sendEmail","showForm","switchEventView","showShared","setEventOrder","order","handleClose3","eventSortOrder","showEvents","showSharedEvents","showAcceptedEvents","showCalendar","displayedEvents","isSearching","filteredEvents","compareEventStartDatesAscending","compareEventStartDatesDescending","compareEventCategory","areThereNoEvents","filteredSharedEvents","areThereNoSharedEvents","filteredAcceptedEvents","areNoAcceptedEvents","handleSearch","text","search","filterEvents","eventsToFilter","searchLowerCase","toLowerCase","getMainStyle","background","getBtnStyle","handleAddEventMenu","beginAddEvent","handleClick2","anchorEl2","openMenu2","handleClick3","anchorEl3","openMenu3","handleClose2","handleJoinEventMenu","beginJoinEvent","find","delete","document","FieldValue","arrayRemove","arrayUnion","handleMenuClick","tempObject","unsubscribe1","unsubscribe2","unsubscribe3","AddContact","userInput","setUserInput","errorOpen","setErrorOpen","successOpen","setSuccessOpen","setMessage","DialogContentText","autoFocus","docSnapshot","displayName","ViewContacts","setListofContacts","listOfContacts","contact","Notifcations","getMessage","New","Paper","Grid","container","wrap","item","xs","handleDelete","headerStyle","fontFamily","headButtonStyle","Header","displayNotifications","notifications","tempDoc","NotificationBar","notification","addContactsPrompt","unreadNotifications","tempNotifications","activeNotificationCount","src","logo","alt","Badge","badgeContent","Link","to","Join","querySnapshot","empty","EventManager","snapshot","removeItem","setAdd","joinEvent","viewShared","homePage","joinDialog","uiConfig","signInFlow","signInOptions","provider","auth","GoogleAuthProvider","PROVIDER_ID","authMethod","clientId","EmailAuthProvider","requireDisplayName","callbacks","signInSuccessWithAuthResult","Login","componentDidMount","onAuthStateChanged","isSignedIn","docReference","documentSnapshot","polls","pictureURL","photoURL","picURL","current_user_email","uiCallback","ui","disableAutoSignIn","firebaseAuth","logInStyle","top","position","Profile","nameDisplay","userName","bioDisplay","bio","userBio","oldURL","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","handleUploadSuccess","filename","profilePic","child","getDownloadURL","url","signOut","clear","updateDb","vertical-align","border-radius","borderRadius","cursor","hidden","accept","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","cols","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ba13a144.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MySnackbarContent);","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAmcdm-nCXD4ahr4EwKddfHQ_vpqkMEPWA\",\r\n    authDomain: \"cs180-schedulingapp.firebaseapp.com\",\r\n    databaseURL: \"https://cs180-schedulingapp.firebaseio.com\",\r\n    projectId: \"cs180-schedulingapp\",\r\n    storageBucket: \"cs180-schedulingapp.appspot.com\",\r\n    messagingSenderId: \"350264880268\",\r\n    appId: \"1:350264880268:web:4fb4718431afc39b6e9fa9\",\r\n    measurementId: \"G-DBB71H8E8J\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nexport {firebase, db};\r\nexport const storage = firebase.storage();","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport WeekCalendar from \"react-week-calendar\";\r\nimport { db, firebase } from \"./firebase\";\r\n\r\n// garbage text for testing pull requests to dev\r\n\r\nexport default class DoodleCalendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lastUid: 1,\r\n            selectedIntervals: [\r\n                // {\r\n                //   uid: 1,\r\n                //   start: moment({h: 6, m: 30}),\r\n                //   end: moment({h: 7, m: 59}),\r\n                //   value: \"CS150 exam\"\r\n                // },\r\n            ]\r\n        };\r\n\r\n        this.displayCurrentEvents();\r\n    }\r\n\r\n    handleEventRemove = event => {\r\n        const { selectedIntervals } = this.state;\r\n        //console.log('Removing event');\r\n\r\n        const index = selectedIntervals.findIndex(interval => interval.uid === event.uid);\r\n        if (index > -1) {\r\n            selectedIntervals.splice(index, 1);\r\n            this.setState({ selectedIntervals });\r\n        }\r\n    };\r\n\r\n    handleEventUpdate = event => {\r\n        const { selectedIntervals } = this.state;\r\n        //console.log('Updating event');\r\n\r\n        const index = selectedIntervals.findIndex(interval => interval.uid === event.uid);\r\n        if (index > -1) {\r\n            selectedIntervals[index] = event;\r\n            this.setState({ selectedIntervals });\r\n        }\r\n    };\r\n\r\n    handleSelect = newIntervals => {\r\n        const { lastUid, selectedIntervals } = this.state;\r\n        const intervals = newIntervals.map((interval, index) => {\r\n            return {\r\n                ...interval,\r\n                uid: lastUid + index\r\n            };\r\n        });\r\n\r\n        this.setState({\r\n            selectedIntervals: selectedIntervals.concat(intervals),\r\n            lastUid: lastUid + newIntervals.length\r\n        });\r\n\r\n        console.log(selectedIntervals);\r\n\r\n        this.props.parentMethod(intervals);\r\n    };\r\n\r\n    displayCurrentEvents() {\r\n        let currentEvents = [];\r\n\r\n        let i = 0;\r\n\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        \r\n        db.collection(\"events\")\r\n            .where(\"owners\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                data.forEach(doc => {\r\n                    i++;\r\n                    var eventData = {\r\n                        end: moment(doc.data().endDate),\r\n                        start: moment(doc.data().startDate),\r\n                        value: doc.data().title,\r\n                        uid: i\r\n                    };\r\n\r\n                    currentEvents.push(eventData);\r\n                });\r\n                this.setState({ selectedIntervals: currentEvents });\r\n            });\r\n\r\n        db.collection(\"events\")\r\n            .where(\"invitees\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                data.forEach(doc => {\r\n                    i++;\r\n                    var eventData = {\r\n                        end: moment(doc.data().endDate),\r\n                        start: moment(doc.data().startDate),\r\n                        value: doc.data().title,\r\n                        uid: i\r\n                    };\r\n\r\n                    currentEvents.push(eventData);\r\n                });\r\n                this.setState({ selectedIntervals: currentEvents });\r\n            });\r\n\r\n        db.collection(\"events\")\r\n            .where(\"accepted_invitees\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                data.forEach(doc => {\r\n                    i++;\r\n                    var eventData = {\r\n                        end: moment(doc.data().endDate),\r\n                        start: moment(doc.data().startDate),\r\n                        value: doc.data().title,\r\n                        uid: i\r\n                    };\r\n\r\n                    currentEvents.push(eventData);\r\n                });\r\n                this.setState({ selectedIntervals: currentEvents });\r\n            });\r\n    }\r\n\r\n    getCalendarStyle = () => {\r\n        return {\r\n            padding: \"45px\"\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getCalendarStyle()}>\r\n                <WeekCalendar\r\n                    dayFormat={\"dddd, MM.DD\"}\r\n                    startTime={moment({ h: 8, m: 0 })}\r\n                    endTime={moment({ h: 20, m: 50 })}\r\n                    scaleFormat={\"hh:mm a\"}\r\n                    numberOfDays={7}\r\n                    selectedIntervals={this.state.selectedIntervals}\r\n                    onIntervalSelect={this.handleSelect}\r\n                    onIntervalUpdate={this.handleEventUpdate}\r\n                    onIntervalRemove={this.handleEventRemove}\r\n                    useModal={true}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport DoodleCalendar from \"./DoodleCalendar\";\r\nimport \"react-week-calendar/dist/style.css\";\r\nimport moment from \"moment\";\r\nimport './styling/AddSecondPage.css'\r\n\r\nexport class AddSecondPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // time: JSON.parse(localStorage.getItem(\"saved_time\")),\r\n            // date: JSON.parse(localStorage.getItem(\"saved_date\")),\r\n            startDate: JSON.parse(localStorage.getItem(\"saved_start_date\")),\r\n            endDate: JSON.parse(localStorage.getItem(\"saved_end_date\")),\r\n            calendar: \"default\"\r\n        };\r\n    }\r\n\r\n    // eric's stuff //\r\n    changeCalendar = calendar => {\r\n        this.setState({ calendar });\r\n    };\r\n\r\n    onEventSubmitted = eventData => {\r\n        console.log(eventData[0].start.format());\r\n        console.log(moment(eventData[0].start.format()).format(\"LLLL\"));\r\n\r\n        var eventStartDate = eventData[0].start.format();\r\n        var eventEndDate = eventData[0].end.format();\r\n\r\n        this.setState({ startDate: eventStartDate, endDate: eventEndDate });\r\n\r\n        localStorage.setItem(\r\n            \"saved_start_date\",\r\n            JSON.stringify(eventStartDate)\r\n        );\r\n        localStorage.setItem(\"saved_end_date\", JSON.stringify(eventEndDate));\r\n        // https://momentjs.com/docs/#/parsing/string-format/ if you are looking for a different time format\r\n    };\r\n\r\n    // eric's stuff //\r\n\r\n    render() {\r\n        //eric's shit\r\n\r\n        //eslint-disable-next-line\r\n        const calendar = this.state.calendar;\r\n        //let renderCalendar = null;\r\n\r\n        return (\r\n            <div>\r\n                {this.renderCalendar()}\r\n                {this.renderButtons()}\r\n            </div>\r\n        );\r\n    }\r\n    renderCalendar = () => {\r\n        return (\r\n            <div>\r\n                <h3 className=\"text\">Choose your time!</h3>\r\n                <DoodleCalendar parentMethod={e => this.onEventSubmitted(e)}>\r\n                    {this.props.children}\r\n                </DoodleCalendar>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderButtons = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"rightGroup\">\r\n                    <IconButton\r\n                        className=\"button\"\r\n                        aria-label=\"back\"\r\n                        onClick={this.props.goToFirstPage}\r\n                        color=\"primary\"\r\n                        size=\"medium\"\r\n                    >\r\n                        <ArrowBackIosIcon />\r\n                    </IconButton>\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={e =>\r\n                            this.props.goToThirdPage(\r\n                                this.state.startDate,\r\n                                this.state.endDate,\r\n                                e\r\n                            )\r\n                        }\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                </div>\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"userCancelButton\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    endIcon={<CancelIcon />}\r\n                    onClick={this.props.cancelEvent}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AddSecondPage;\r\n","/* eslint-disable no-unused-expressions */\r\nimport React, { useEffect } from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { db } from \"./firebase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nexport default function InviteContacts(props) {\r\n    const classes = useStyles();\r\n    const [personEmail, setPersonEmail] = React.useState([]);\r\n\r\n    const handleChange = event => {\r\n        setPersonEmail(event.target.value);\r\n        console.log(event.target.value);\r\n    };\r\n\r\n    const [emails, setEmails] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"1\");\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    let temp = doc.data().contacts.map(c => {\r\n                        return c.email;\r\n                    });\r\n                    setEmails(temp);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    //if add props to dependencies, infinite useEffect, dont do it\r\n    useEffect(() => {\r\n        console.log(\"2\");\r\n        props.setSharedEvent(personEmail);\r\n        // eslint-disable-next-line\r\n    }, [personEmail]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormControl>\r\n                <InputLabel\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    id=\"demo-mutiple-checkbox-label\"\r\n                >\r\n                    Select Contacts to Invite\r\n                </InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-checkbox-label\"\r\n                    id=\"demo-mutiple-checkbox\"\r\n                    multiple\r\n                    value={personEmail}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => selected.join(\", \")}\r\n                >\r\n                    {emails.map(name => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox\r\n                                checked={personEmail.indexOf(name) > -1}\r\n                            />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InviteContacts from \"./InviteContacts\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport \"./styling/AddThirdPage.css\";\r\n\r\nexport class AddThirdPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n            invite_list: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderOptions()}\r\n                <br />\r\n                {this.renderButtons()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //functions\r\n\r\n    /**\r\n     * toggles check of checkbox\r\n     */\r\n    handleCheckbox = () => {\r\n        this.setState({ checked: !this.state.checked });\r\n    };\r\n\r\n    /**\r\n     * Rendering invite options\r\n     */\r\n    renderOptions = () => {\r\n        return (\r\n            <div>\r\n                <FormGroup className=\"checkrow\" row>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={this.state.checked}\r\n                                value={this.state.checked}\r\n                                onChange={() => this.handleCheckbox()}\r\n                            />\r\n                        }\r\n                        label=\"Make this event shareable\"\r\n                    />\r\n                </FormGroup>\r\n                {this.renderContactDropdown()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderContactDropdown = () => {\r\n        if (this.state.checked) {\r\n            return (\r\n                <InviteContacts setSharedEvent={l => this.setSharedEvent(l)} />\r\n            );\r\n        }\r\n    };\r\n\r\n    setSharedEvent = list => {\r\n        this.setState({ invite_list: list });\r\n    };\r\n\r\n    //We are rendering buttons separately from options\r\n    /**\r\n     * Rendering buttons\r\n     */\r\n    renderButtons = () => {\r\n        return (\r\n            <div>\r\n                <div className=\"right\">\r\n                    <IconButton\r\n                        className=\"button\"\r\n                        aria-label=\"back\"\r\n                        onClick={this.props.goToSecondPage}\r\n                        color=\"primary\"\r\n                        size=\"medium\"\r\n                    >\r\n                        <ArrowBackIosIcon />\r\n                    </IconButton>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={e =>\r\n                            this.props.submitEvent(e, this.state.invite_list)\r\n                        }\r\n                    >\r\n                        Submit Event\r\n                    </Button>\r\n                </div>\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"userCancelButton\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    endIcon={<CancelIcon />}\r\n                    onClick={this.props.cancelEvent}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AddThirdPage;\r\n","import React, { Component } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\nimport AddSecondPage from \"./AddSecondPage\";\r\nimport AddThirdPage from \"./AddThirdPage\";\r\nimport { db } from \"./firebase\";\r\nimport uuid from \"uuid\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport \"./styling/AddEvent.css\";\r\n\r\nexport const categories = Object.freeze({\r\n    None: \"None\",\r\n    Hobbies: \"Hobbies\",\r\n    Social: \"Social\",\r\n    Errands: \"Errands\",\r\n    Projects: \"Projects\",\r\n    Miscellaneous: \"Miscellaneous\"\r\n});\r\n\r\nexport class AddEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //event variables\r\n            title: JSON.parse(localStorage.getItem(\"saved_title\")) || \"\",\r\n            description:\r\n                JSON.parse(localStorage.getItem(\"saved_description\")) || \"\",\r\n            startDate:\r\n                JSON.parse(localStorage.getItem(\"saved_start_date\")) || \"\",\r\n            endDate: JSON.parse(localStorage.getItem(\"saved_end_date\")) || \"\",\r\n            category:\r\n                JSON.parse(localStorage.getItem(\"saved_category\")) ||\r\n                categories.None,\r\n            calendar: \"default\",\r\n\r\n            //variables to keep track of pages & state\r\n            firstPage: true,\r\n            secondPage: false,\r\n            thirdPage: false,\r\n\r\n            //for social aspect\r\n            //invitees and owners will be emails\r\n            owners: [JSON.parse(localStorage.getItem(\"currentUser\"))], //every time event created, user will be owner\r\n            shared: false, //if this is being shared\r\n            invitees: [], //this only if being shared\r\n\r\n            //snackbar errors\r\n            errorMessageOpen: false,\r\n            message: \"\",\r\n            successMessageOpen: false,\r\n\r\n            // Category\r\n            anchorEl: null,\r\n            openMenu: false\r\n        };\r\n    }\r\n\r\n    //----- snackbar functions -----\r\n    handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ errorMessageOpen: false });\r\n    };\r\n    handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ successMessageOpen: false });\r\n    };\r\n\r\n    //----- end of snackbar functions -----\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.viewForm()}\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.errorMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleErrorClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleErrorClose}\r\n                        variant=\"error\"\r\n                        message={this.state.message}\r\n                    />\r\n                </Snackbar>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.successMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSuccessClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleSuccessClose}\r\n                        variant=\"success\"\r\n                        message={\"New event has been created\"}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //----- first page functions -----\r\n    /**\r\n     * @param {*} t takes user input and sets it equal to title\r\n     */\r\n    handleTitle = t => {\r\n        this.setState({ title: t.target.value });\r\n    };\r\n\r\n    /**\r\n     * @param {*} des takes user input and sets it equal to description\r\n     */\r\n    handleDescription = des => {\r\n        this.setState({ description: des.target.value });\r\n    };\r\n\r\n    /**\r\n     * Submits user input of title and description\r\n     * @param {*} e Takes in event of pressing button\r\n     * @return sets state to go to second page and saves title\r\n     * and description to local storage\r\n     */\r\n    onSubmitFirstPage = e => {\r\n        e.preventDefault();\r\n        //when they go back from second page, the data still there\r\n        if (this.state.title !== \"\" && this.state.title !== null) {\r\n            localStorage.setItem(\r\n                \"saved_title\",\r\n                JSON.stringify(this.state.title)\r\n            );\r\n            localStorage.setItem(\r\n                \"saved_description\",\r\n                JSON.stringify(this.state.description)\r\n            );\r\n            localStorage.setItem(\r\n                \"saved_category\",\r\n                JSON.stringify(this.state.category)\r\n            );\r\n            //going to second page & unrendering first page\r\n            this.setState({ firstPage: false, secondPage: true });\r\n        } else {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Please input a title!\"\r\n            });\r\n        }\r\n    };\r\n    //----- end of first page functions -----\r\n\r\n    //----- second page functions -----\r\n    /**\r\n     * If you hit back on the second page, it goes back to first page\r\n     */\r\n    goToFirstPage = () => {\r\n        this.setState({ firstPage: true, secondPage: false });\r\n    };\r\n    //redo error messages later when implementing another date and time picker\r\n\r\n    /**\r\n     * @param {string=} startDate Takes in start date from eric's calendar\r\n     * @param {string=} endDate Takes in end date from eric's calendar\r\n     * @param {*} e Takes in event of hitting button to go to next page\r\n     * @return Sets date and time in state\r\n     * @return error message if date & time are null\r\n     */\r\n    goToThirdPage = (startDate, endDate, e) => {\r\n        e.preventDefault();\r\n        if (\r\n            startDate !== null &&\r\n            startDate !== \"\" &&\r\n            endDate !== null &&\r\n            endDate !== \"\"\r\n        ) {\r\n            this.setState({\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                firstPage: false,\r\n                secondPage: false,\r\n                thirdPage: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Please input a date and time!\"\r\n            });\r\n        }\r\n    };\r\n    //----- end of second page functions -----\r\n\r\n    //----- third page functions -----\r\n    /**\r\n     * Goes back to second page when hitting back on third page\r\n     */\r\n    goToSecondPage = () => {\r\n        this.setState({ firstPage: false, secondPage: true, thirdPage: false });\r\n    };\r\n\r\n    handleCategoryMenuClick = selectedCategory => {\r\n        this.handleClose();\r\n        this.setState({ category: selectedCategory });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, openMenu: !this.state.openMenu });\r\n    };\r\n\r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n\r\n    /**\r\n     * When creating/editing event, it adds/edits it to the database./\r\n     * If the event is going to be shared, it will add it to the\r\n     * shared event collection\r\n     * @param {*} e takes in event of hitting submit event\r\n     * @return saves to firestore database and goes back to home page\r\n     * @todo fix edit event\r\n     */\r\n    submitEvent = (e, invitees) => {\r\n        e.preventDefault();\r\n        let code = this.makeCode(5);\r\n        const { idOfEditEvent, editingEvent } = this.props;\r\n        const id = uuid.v4();\r\n\r\n        if (!editingEvent) {\r\n            //add new event\r\n            let batch = db.batch();\r\n            if(invitees.length!== 0){\r\n                for(let x = 0; x < invitees.length; x++){\r\n                    const id2 = uuid.v4();\r\n                    var temp = db.collection(\"notifications\").doc(id2);\r\n                    batch.set(temp, {user: invitees[x], seen: false, typeOf : 1, eventTitle: this.state.title, id : id2});\r\n                }\r\n            }\r\n            batch.commit();\r\n            \r\n            db.collection(\"events\")\r\n                .doc(id)\r\n                .set({\r\n                    id: id,\r\n                    code: code,\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    category: this.state.category,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate,\r\n                    owners: this.state.owners,\r\n                    accepted_invitees: [],\r\n                    declined_invitees: [],\r\n                    invitees: invitees\r\n                });\r\n            \r\n            /* email notification */\r\n            var invitees = invitees;\r\n            var templateId = 'yes';\r\n            var emailEvent = this.state.title;\r\n            var emailDescription = this.state.description;\r\n            var emailStartDate = this.state.startDate;\r\n            var emailEndDate = this.state.endDate;\r\n\r\n            console.log(\"add event\");\r\n            console.log(\"invitees: \" + invitees);\r\n            console.log(\"emailEvent: \" + emailEvent);\r\n            console.log(\"emailDescription: \" + emailDescription);\r\n            console.log(\"emailStartDate: \" + emailStartDate);\r\n            console.log(\"emailEndDate: \" + emailEndDate);\r\n            \r\n            window.emailjs.send(\"gmail\", templateId, {\"send_to\": [invitees], \"subject\": \"An event has been created!\", \"emailEvent\": emailEvent, \"emailDescription\": emailDescription, \"emailStartDate\": emailStartDate, \"emailEndDate\": emailEndDate})\r\n            .then(res => {\r\n                console.log('Email successfully sent!');\r\n            })\r\n            .catch(err => console.error(\"error: \" + err))\r\n        } else {\r\n            //editing event\r\n\r\n            let batch = db.batch();\r\n            db.collection(\"events\").doc(idOfEditEvent).get()\r\n            .then(doc =>{\r\n                if(doc.data().accepted_invitees.length !== 0){\r\n                    for(let x = 0; x < doc.data().accepted_invitees.length; x++){\r\n                        const id2 = uuid.v4();\r\n                        var temp = db.collection(\"notifications\").doc(id2);\r\n                        batch.set(temp, {user: doc.data().accepted_invitees[x], seen: false, typeOf : 3, eventTitle: this.state.title, id : id2});\r\n                    }\r\n                }\r\n                console.log(doc.data())\r\n                if(doc.data().invitees.length!== 0){\r\n                    for(let x = 0; x < doc.data().invitees.length; x++){\r\n                        const id2 = uuid.v4();\r\n                        var temp = db.collection(\"notifications\").doc(id2);\r\n                        batch.set(temp, {user: doc.data().invitees[x], seen: false, typeOf : 3, eventTitle: this.state.title, id : id2});\r\n                    }\r\n                }\r\n                batch.commit();\r\n            })\r\n            .catch(err => console.log(err));\r\n            \r\n            db.collection(\"events\")\r\n                .doc(idOfEditEvent)\r\n                .update({\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    category: this.state.category,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate\r\n                    // invitees: invitees TODO: XD it nukes all the other invitees that you didn't call for\r\n                });\r\n            \r\n            /* email notification */\r\n            var invitees = invitees;\r\n            var templateId = 'yes';\r\n            var emailEvent = this.state.title;\r\n            var emailDescription = this.state.description;\r\n            var emailStartDate = this.state.startDate;\r\n            var emailEndDate = this.state.endDate;\r\n            \r\n            console.log(\"edit event\");\r\n            console.log(\"invitees: \" + invitees);\r\n            console.log(\"emailEvent: \" + emailEvent);\r\n            console.log(\"emailDescription: \" + emailDescription);\r\n            console.log(\"emailStartDate: \" + emailStartDate);\r\n            console.log(\"emailEndDate: \" + emailEndDate);\r\n            \r\n            window.emailjs.send(\"gmail\", templateId, {\"send_to\": [invitees], \"subject\": \"An event has been edited!\", \"emailEvent\": emailEvent, \"emailDescription\": emailDescription, \"emailStartDate\": emailStartDate, \"emailEndDate\": emailEndDate})\r\n            .then(res => {\r\n                console.log('Email successfully sent!');\r\n            })\r\n            .catch(err => console.error(\"error: \" + err))\r\n        }\r\n        this.props.setHomePage();\r\n    };\r\n\r\n    makeCode = length => {\r\n        var result = \"\";\r\n        var characters =\r\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(\r\n                Math.floor(Math.random() * charactersLength)\r\n            );\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} check if checkbox is clicked to make event shareable\r\n     * @param {Array} list populatex invitees with contacts' emails\r\n     * @todo this list will be populated with people outside the contact list\r\n     */\r\n\r\n    //----- end of third page functions -----\r\n\r\n    /**\r\n     * Decides what to display when adding event by\r\n     * conditionally renders new pages\r\n     */\r\n    viewForm = () => {\r\n        //this will be the same as AddFirstPage\r\n        //just grabbing title and description\r\n        if (this.state.firstPage) {\r\n            return (\r\n                <div>\r\n                    <Container className=\"container\" maxWidth=\"md\">\r\n                        <div className=\"categoryBtn\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color={this.state.category !== categories.None ? \"primary\" : \"secondary\"}\r\n                                aria-controls=\"simple-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={e => this.handleClick(e)}\r\n                            >\r\n                                {this.state.category}\r\n                            </Button>\r\n                            <Menu\r\n                                id=\"simple-menu\"\r\n                                anchorEl={this.state.anchorEl}\r\n                                open={this.state.openMenu}\r\n                                onClose={this.handleClose}\r\n                            >\r\n                                <MenuItem\r\n                                    onClick={() =>\r\n                                        this.handleCategoryMenuClick(\r\n                                            categories.Hobbies\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    {categories.Hobbies}\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    onClick={() =>\r\n                                        this.handleCategoryMenuClick(\r\n                                            categories.Social\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    {categories.Social}\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    onClick={() =>\r\n                                        this.handleCategoryMenuClick(\r\n                                            categories.Errands\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    {categories.Errands}\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    onClick={() =>\r\n                                        this.handleCategoryMenuClick(\r\n                                            categories.Projects\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    {categories.Projects}\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    onClick={() =>\r\n                                        this.handleCategoryMenuClick(\r\n                                            categories.Miscellaneous\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    {categories.Miscellaneous}\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                        <form className=\"form\" onSubmit={e => this.onSubmitFirstPage(e)}>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Event Name\"\r\n                                fullWidth\r\n                                value={this.state.title}\r\n                                margin=\"normal\"\r\n                                onChange={title => this.handleTitle(title)}\r\n                            />\r\n                            <TextField\r\n                                className=\"form\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Event Description ... Optional\"\r\n                                fullWidth\r\n                                value={this.state.description}\r\n                                margin=\"normal\"\r\n                                onChange={des => this.handleDescription(des)}\r\n                            />\r\n\r\n                            <div className=\"btnGroup\">\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    className=\"userCancelButton\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    endIcon={<CancelIcon />}\r\n                                    onClick={this.props.cancelEvent}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"userContinueButton\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    endIcon={<ArrowForwardIcon />}\r\n                                    onClick={e => this.onSubmitFirstPage(e)}\r\n                                >\r\n                                    Continue\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </Container>\r\n                </div>\r\n            );\r\n        } else if (this.state.secondPage) {\r\n            return (\r\n                <div>\r\n                    <AddSecondPage\r\n                        cancelEvent={this.props.cancelEvent}\r\n                        goToFirstPage={() => this.goToFirstPage()}\r\n                        goToThirdPage={(startDate, endDate, e) =>\r\n                            this.goToThirdPage(startDate, endDate, e)\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (this.state.thirdPage) {\r\n            return (\r\n                <div>\r\n                    <AddThirdPage\r\n                        goToSecondPage={() => this.goToSecondPage()}\r\n                        cancelEvent={this.props.cancelEvent}\r\n                        submitEvent={(e, invitees) =>\r\n                            this.submitEvent(e, invitees)\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default AddEvent;\r\n","import React from 'react';\r\nimport { db } from './firebase'\r\nexport default class Form extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { contentList: [], emailList: [], };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit =\r\n\t\t\tthis.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdb\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n\t\t\t.get()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (data.exists) {\r\n\t\t\t\t\tthis.setState({ emailList: data.data().contacts, contentList: data.data().events })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"test-mailing\">\r\n\t\t\t\t<h1>Let's see if it works</h1>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"test-mailing\"\r\n\t\t\t\t\t\tname=\"test-mailing\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder=\"Send event\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.feedback}\r\n\t\t\t\t\t\tstyle={{ width: '100%', height: '150px' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tthis.setState({ feedback: event.target.value })\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tconst templateId = 'yes';\r\n\r\n\t\tthis.sendFeedback(templateId, { message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email })\r\n\t\tthis.props.handleDisplay();\r\n\t}\r\n\r\n\tsendFeedback(templateId, variables) {\r\n\t\twindow.emailjs.send(\"gmail\", templateId, { \"send_to\": this.state.emailList, \"content\": this.state.contentList })   // insert custom emails for send_to\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log('Email successfully sent!');\r\n\t\t\t\tconsole.log(variables);\r\n\t\t\t})\r\n\t\t\t// Handle errors here however you like, or use a React error boundary\r\n\t\t\t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\r\n\t}\r\n}","import React, { useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport uuid from \"uuid\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Invite(props) {\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n\r\n    const [originalInvitees, setOriginalInvitees] = React.useState([]);\r\n\r\n    const [personEmail, setPersonEmail] = React.useState([]);\r\n\r\n    const [emails, setEmails] = React.useState([]);\r\n\r\n    //this is because personEmail will be empty on first render\r\n    //since useState callback\r\n    const [fix, setFix] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        //i think you might have to check which one is longer\r\n        //personEmail is finished one, you can maybe do filter and combine with includes?\r\n        let temp2 = personEmail.filter( x => {return !originalInvitees.includes(x)}); //this is n^2 lmao it was gonna be it anyways// alright, I'm gonna assume this works, i would consolelog, yeah, but it's hard to test with just myself anyways\r\n        let batch = db.batch();\r\n            if(temp2.length!== 0){\r\n                for(let x = 0; x < temp2.length; x++){\r\n                    const id2 = uuid.v4();\r\n                    var temp = db.collection(\"notifications\").doc(id2);\r\n                    batch.set(temp, {user: temp2[x], seen: false, typeOf : 1, eventTitle: props.title, id : id2});\r\n                }\r\n            }\r\n            batch.commit();\r\n        setOpen(false);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {*} n an email that user selected\r\n     * @return {array} array with user included or not included\r\n     */\r\n    const handleChange = n => {\r\n        if (!personEmail.includes(n)) {\r\n            setPersonEmail([...personEmail, n]);\r\n        } else {\r\n            setPersonEmail(personEmail.filter(email => email !== n));\r\n        }\r\n    };\r\n    //okay  \r\n\r\n    //this useEffect acts like a componentDidMount \r\n    useEffect(() => {\r\n        db.collection(\"users\")\r\n            .doc(currentUser)\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    let temp = doc.data().contacts.map(c => {\r\n                        return c.email;\r\n                    });\r\n                    setEmails(temp);\r\n                }\r\n            });\r\n        db.collection(\"events\")\r\n            .doc(props.id)\r\n            .get()\r\n            .then(doc => {\r\n                setPersonEmail(doc.data().invitees); //this will finish after next useEffect\r\n                setOriginalInvitees(doc.data().invitees);\r\n                setFix(true); //so you need this line\r\n            });\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (fix) {\r\n            db.collection(\"events\")\r\n                .doc(props.id)\r\n                .update({\r\n                    invitees: personEmail\r\n                });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [personEmail]);\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"Invite More\"}</DialogTitle>\r\n                <DialogContent>\r\n                    {emails.map(name => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox\r\n                                checked={personEmail.indexOf(name) > -1}\r\n                                onChange={() => handleChange(name)}\r\n                            />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PieChart from 'react-minimal-pie-chart';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport Invite from \"./Invite\";\r\nimport moment from \"moment\";\r\n\r\nclass Cards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            startShare: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const handleExpandClick = () => {\r\n            this.setState({ expanded: !this.state.expanded });\r\n        };\r\n        const { data, isShared, hasAccepted } = this.props;\r\n        let invitees = data.invitees ? data.invitees.join(\"\\n\") : \"\";\r\n        let shareStatus = isShared ? \"Shared event\" : \"Made by me\";\r\n        let invitePeople = this.state.startShare ? (\r\n            <Invite id={data.id} open={this.state.startShare} title = {data.title} />\r\n        ) : null;\r\n        let editButton = !isShared ? (\r\n            <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                onClick={() => this.props.editEvent(data.id)}\r\n            >\r\n                edit\r\n            </Button>\r\n        ) : null;\r\n        let deleteButton = !isShared ? (\r\n            <IconButton\r\n                aria-label=\"delete\"\r\n                onClick={() => this.props.deleteEvent(data.id)}\r\n            >\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        ) : null;\r\n\r\n        let acceptIcon = (isShared && !hasAccepted)? (\r\n            <div>\r\n                <IconButton onClick = {() => this.props.acceptInvite(data.id)}>\r\n                <CheckIcon/>\r\n            </IconButton>\r\n            <IconButton onClick = {() => this.props.declineInvite(data.id)}>\r\n                <ClearIcon/>\r\n            </IconButton>\r\n            </div>\r\n        ) : null;\r\n\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            {shareStatus}\r\n                        </Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {data.title}\r\n                        </Typography>\r\n                        <Typography>{data.code}</Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            {data.category}\r\n                        </Typography>\r\n                        <Typography>{data.description}</Typography>\r\n                        <Typography>{moment(data.startDate).format(\"LLLL\")+ \" - \" + moment(data.endDate).format(\"LT\")}</Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        {editButton}\r\n                        <IconButton\r\n                            aria-label=\"share\"\r\n                            onClick={() => this.handleShareEvent()}\r\n                        >\r\n                            <ShareIcon />\r\n                        </IconButton>\r\n                        {deleteButton}\r\n                        <IconButton\r\n                            onClick={handleExpandClick}\r\n                            aria-expanded={this.state.expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </IconButton>\r\n                        {acceptIcon}\r\n                    </CardActions>\r\n                    <Collapse\r\n                        in={this.state.expanded}\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                    >\r\n                        <CardContent>\r\n                            \r\n                            <PieChart data = {[\r\n                                {title: \"People confirmed going\", value: data.owners.length + data.accepted_invitees.length, color : \"#00e676\"},\r\n                                {title: \"People who might go\", value: data.invitees.length, color : \"#fff59d\"},\r\n                                {title: \"People who won't go\", value: data.declined_invitees.length, color : \"#78909c\"}\r\n                            ]} radius = {50} style={{\r\n                                height: '125px',\r\n                                marginBottom: '2em',\r\n                                marginTop : '0',\r\n                                display: 'flex'\r\n\r\n                              }}/>\r\n                            <Typography>\r\n                                Owners: {data.owners}\r\n                                <br />\r\n                                Invitees: {data.invitees}\r\n                                <br />\r\n                                Accepted Invitees: {data.accepted_invitees}\r\n                                <br />\r\n                                Declined Invitees: {data.declined_invitees}\r\n                            </Typography>\r\n                            \r\n                        </CardContent>\r\n                    </Collapse>\r\n                </Card>\r\n                {invitePeople}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param id id of event to be shared with others\r\n     * @return pop up with checkboxes like the third page, select\r\n     * people to invite from contacts\r\n     */\r\n    handleShareEvent = () => {\r\n        this.setState({ startShare: !this.state.startShare });\r\n    };\r\n}\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nexport default class Modal extends React.Component {\r\n  /**\r\n   * Closes modal\r\n   */\r\n  onClose = e => {\r\n    this.props.onClose && this.props.onClose(e);\r\n  };\r\n\r\n  /**\r\n   * Renders modal with event data\r\n   */\r\n  render() {\r\n    if (!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    var description = \"\";\r\n    console.log(this.props.calendarEventDayData.events);\r\n\r\n    for (let i = 0; i < this.props.calendarEventDayData.events.length; ++i) {\r\n      var startTime = moment(this.props.calendarEventDayData.events[i].startDate).format(\"LT\");\r\n      var endTime = moment(this.props.calendarEventDayData.events[i].endDate).format(\"LT\");\r\n      var header = startTime + \" - \" + endTime + \": \" + this.props.calendarEventDayData.events[i].title;\r\n\r\n      description += header + \"\\n\" + this.props.calendarEventDayData.events[i].description + \"\\n\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"modal\" id=\"modal\">\r\n        <h2>{moment(this.props.calendarEventDayData.date).format(\"dddd\" + \" \"+ \"L\")}</h2>\r\n        <div className=\"content\">\r\n        {description.split(\"\\n\").map((i,key) => { return <div key={key}>{i}</div>; })}\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button className=\"toggle-button\" onClick={this.onClose}>\r\n            close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired\r\n};","import React from \"react\";\r\nimport * as dateFns from 'date-fns';\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./EventCalendar.css\";\r\nimport moment from \"moment\";\r\n\r\nexport class EventCalendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: new Date(),\r\n            selectedDate: null,\r\n            show: false,\r\n            title: \"\",\r\n            calendarEventDayData: null\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Comparator for ordering events.\r\n     * Used for days where there are multiple events.\r\n     */\r\n    compareEventStartDates(a, b) {\r\n        if ( moment(a.startDate).valueOf() < moment(b.startDate).valueOf() ){\r\n            return -1;\r\n        }\r\n\r\n        if ( moment(a.startDate).valueOf() > moment(b.startDate).valueOf() ){\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Updates modal state to display the events data\r\n     */\r\n    showModal = (calendarEventDayData) => {\r\n        this.calendarEventDayData = calendarEventDayData;\r\n\r\n        this.setState({\r\n          show: !this.state.show,\r\n          calendarEventDayData: this.calendarEventDayData,\r\n        });\r\n      };\r\n\r\n    /**\r\n     * Calendar header\r\n     */\r\n    renderHeader() {\r\n        const dateFormat = \"MMMM yyyy\";\r\n\r\n        return (\r\n            <div className=\"header row flex-middle\">\r\n                <div className=\"col col-start\">\r\n                    <div className=\"icon\" onClick={this.prevMonth}>\r\n                        chevron_left\r\n          </div>\r\n                </div>\r\n                <div className=\"col col-center\">\r\n                    <span>{dateFns.format(this.state.currentMonth, dateFormat)}</span>\r\n                </div>\r\n                <div className=\"col col-end\" onClick={this.nextMonth}>\r\n                    <div className=\"icon\">chevron_right</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Calendar week days\r\n     */\r\n    renderDays() {\r\n        const dateFormat = \"iiii\";\r\n        const days = [];\r\n\r\n        let startDate = dateFns.startOfWeek(this.state.currentMonth);\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            days.push(\r\n                <div className=\"col col-center\" key={i}>\r\n                    {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <div className=\"days row\">{days}</div>;\r\n    }\r\n\r\n\r\n    /**\r\n     * Calendar days\r\n     */\r\n    renderCells() {\r\n        var areThereEvents = !(\r\n            this.props.events === null ||\r\n            this.props.events === undefined || \r\n            this.props.events.length === 0);\r\n        \r\n        var areThereSharedEvents = !(\r\n            this.props.sharedEvents === null ||\r\n            this.props.sharedEvents === undefined ||\r\n            this.props.sharedEvents.length === 0);\r\n\r\n        var areThereAcceptedEvents = !(\r\n            this.props.acceptedEvents === null ||\r\n            this.props.acceptedEvents === undefined ||\r\n            this.props.acceptedEvents.length === 0);\r\n\r\n        if (areThereEvents || areThereSharedEvents || areThereAcceptedEvents) {\r\n            const { currentMonth, selectedDate } = this.state;\r\n            const monthStart = dateFns.startOfMonth(currentMonth);\r\n            const monthEnd = dateFns.endOfMonth(monthStart);\r\n            const startDate = dateFns.startOfWeek(monthStart);\r\n            const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n            const dateFormat = \"d\";\r\n            const rows = [];\r\n\r\n            let days = [];\r\n            let day = startDate;\r\n            let formattedDate = \"\";\r\n\r\n            let eventData = [];\r\n            if (areThereEvents) {\r\n                for (let i = 0; i < this.props.events.length; ++i) {\r\n                    if (moment(this.props.events[i].startDate).format(\"L\").split('/')[0] == dateFns.getMonth(currentMonth) + 1) {\r\n                        var data = {\r\n                            date: this.props.events[i].date,\r\n                            title: this.props.events[i].title,\r\n                            description: this.props.events[i].description,\r\n                            startDate: this.props.events[i].startDate,\r\n                            endDate: this.props.events[i].endDate,\r\n                        }\r\n        \r\n                        eventData.push(data)\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (areThereSharedEvents) {\r\n                for (let i = 0; i < this.props.sharedEvents.length; ++i) {\r\n                    if (moment(this.props.sharedEvents[i].startDate).format('L').split('/')[0]== dateFns.getMonth(currentMonth) + 1) {\r\n                        var data = {\r\n                            date: this.props.sharedEvents[i].date,\r\n                            title: this.props.sharedEvents[i].title,\r\n                            description: this.props.sharedEvents[i].description,\r\n                            startDate: this.props.sharedEvents[i].startDate,\r\n                            endDate: this.props.sharedEvents[i].endDate,\r\n                        }\r\n        \r\n                        eventData.push(data)\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (areThereAcceptedEvents) {\r\n                for (let i = 0; i < this.props.acceptedEvents.length; ++i) {\r\n                    if (moment(this.props.acceptedEvents[i].startDate).format('L').split('/')[0]== dateFns.getMonth(currentMonth) + 1) {\r\n                        var data = {\r\n                            date: this.props.acceptedEvents[i].date,\r\n                            title: this.props.acceptedEvents[i].title,\r\n                            description: this.props.acceptedEvents[i].description,\r\n                            startDate: this.props.acceptedEvents[i].startDate,\r\n                            endDate: this.props.acceptedEvents[i].endDate,\r\n                        }\r\n        \r\n                        eventData.push(data)\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            let calendarEvents = [];\r\n\r\n            for (let i = 0; i < eventData.length; ++i) {\r\n\r\n                var duplicate = false;\r\n                var  eventDate = moment(eventData[i].startDate).format('L');\r\n                var calendarEventData = {\r\n                    title: eventData[i].title, \r\n                    description: eventData[i].description,\r\n                    startDate: eventData[i].startDate,\r\n                    endDate: eventData[i].endDate\r\n                }\r\n\r\n                for (let j = 0; j < calendarEvents.length && !duplicate; ++j) {\r\n                    if (calendarEvents[j].date === eventDate) {\r\n                        duplicate = true;\r\n                        \r\n                        calendarEvents[j].events.push(calendarEventData)\r\n                    }\r\n\r\n                }\r\n\r\n                if (!duplicate) {\r\n                    var calendarData = {\r\n                        date: eventDate,\r\n                        events: [ calendarEventData ]\r\n                    }\r\n\r\n                    calendarEvents.push(calendarData)\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < calendarEvents.length; ++i) {\r\n                calendarEvents[i].events.sort(this.compareEventStartDates);\r\n            }\r\n\r\n\r\n            while (day <= endDate) {\r\n                for (let i = 0; i < 7; i++) {\r\n                    formattedDate = dateFns.format(day, dateFormat);\r\n                    \r\n                    var isEvent = false;\r\n\r\n                    for (let i = 0; i < calendarEvents.length && !isEvent; ++i) {\r\n                        var calendarEventDay = calendarEvents[i].date.split('/')[1].replace(/^0+/, '');\r\n                        var calendarEventMonth = calendarEvents[i].date.split('/')[0].replace(/^0+/, '');\r\n\r\n                        // eslint-disable-next-line eqeqeq\r\n                        if ((calendarEventDay == dateFns.getDate(day).toString()) &&\r\n                            // eslint-disable-next-line eqeqeq\r\n                            (calendarEventMonth == (dateFns.getMonth(day) + 1))) {\r\n\r\n                                if (calendarEvents[i].events.length > 1) {\r\n\r\n                                    var multipleEventsTitle = (calendarEvents[i].events[0].title + \" +\" + (calendarEvents[i].events.length - 1)).toString();\r\n                                    console.log(multipleEventsTitle);\r\n                                    days.push(\r\n                                        <div\r\n                                            className={`col cell ${\r\n                                                !dateFns.isSameMonth(day, monthStart)\r\n                                                    ? \"disabled\"\r\n                                                    : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                                                }`}\r\n                                            key={day}\r\n                                            // onClick={() => this.onDateClick(dateFns.toDate(cloneDay))}\r\n                                            onClick={e => {\r\n                                                this.showModal(calendarEvents[i]);\r\n                                                }}\r\n                                        >\r\n                                            <span className=\"number\">{formattedDate}</span>\r\n                                            <span className=\"bg\">{formattedDate}</span>\r\n                                            <span className=\"title\">{multipleEventsTitle}</span>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                                else {\r\n                                    var title = calendarEvents[i].events[0].title.toString();\r\n                                    console.log(title);\r\n\r\n                                    days.push(\r\n                                        <div\r\n                                            className={`col cell ${\r\n                                                !dateFns.isSameMonth(day, monthStart)\r\n                                                    ? \"disabled\"\r\n                                                    : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                                                }`}\r\n                                            key={day}\r\n                                            onClick={e => {\r\n                                                this.showModal(calendarEvents[i]);\r\n                                                }}\r\n                                        >\r\n                                            <span className=\"number\">{formattedDate}</span>\r\n                                            <span className=\"bg\">{formattedDate}</span>\r\n                                            <span className=\"title\">{title}</span>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                            \r\n\r\n                            isEvent = true;\r\n                        }   \r\n                    }\r\n\r\n                    if(!isEvent) {\r\n                        days.push(\r\n                            <div\r\n                                className={`col cell ${\r\n                                    !dateFns.isSameMonth(day, monthStart)\r\n                                        ? \"disabled\"\r\n                                        : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                                    }`}\r\n                                key={day}\r\n                            >\r\n                                <span className=\"number\">{formattedDate}</span>\r\n                                <span className=\"bg\">{formattedDate}</span>\r\n                            </div>\r\n                        );\r\n                    }\r\n\r\n                    // days.push(\r\n                    //     <div\r\n                    //         className={`col cell ${\r\n                    //             !dateFns.isSameMonth(day, monthStart)\r\n                    //                 ? \"disabled\"\r\n                    //                 : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n                    //             }`}\r\n                    //         key={day}\r\n                    //         // onClick={() => this.onDateClick(dateFns.toDate(cloneDay))}\r\n                    //         onClick={e => {\r\n                    //           this.showModal(e);\r\n                    //         }}\r\n                    //     >\r\n                    //         <span className=\"number\">{formattedDate}</span>\r\n                    //         <span className=\"bg\">{formattedDate}</span>\r\n\r\n                    //         <span>bla</span> \r\n                    //     </div>\r\n                    // );\r\n                    day = dateFns.addDays(day, 1);\r\n                }\r\n                rows.push(\r\n                    <div className=\"row\" key={day}>\r\n                        {days}\r\n                    </div>\r\n                );\r\n                days = [];\r\n            }\r\n                return <div className=\"body\">{rows}</div>;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Set the current state to the selected day\r\n     */\r\n    onDateClick = day => {\r\n        this.setState({\r\n            selectedDate: \"day\"\r\n        });\r\n        \r\n    };\r\n\r\n    /**\r\n     * Go to next month\r\n     */\r\n    nextMonth = () => {\r\n        this.setState({\r\n            currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\r\n        });\r\n    };\r\n\r\n    \r\n    /**\r\n     * Go to previous month\r\n     */\r\n    prevMonth = () => {\r\n        this.setState({\r\n            currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <div id=\"parent\">\r\n            <div className=\"calendar\">\r\n                {this.renderHeader()}\r\n                {this.renderDays()}\r\n                {this.renderCells()}\r\n            </div>\r\n            <div className=\"modal\">\r\n              <Modal \r\n              onClose={this.showModal} \r\n              show={this.state.show}\r\n              calendarEventDayData={this.calendarEventDayData}\r\n              >\r\n              </Modal>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventCalendar;","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport \"react-table/react-table.css\";\r\nimport Form from \"./Form\";\r\nimport { db, firebase } from \"./firebase\";\r\nimport uuid from \"uuid\";\r\nimport Cards from \"./Cards\";\r\nimport EventCalendar from \"./EventCalendar/EventCalendar\";\r\nimport moment from \"moment\";\r\nimport { categories } from \"./AddEvent\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport class EventHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            openMenu: false,\r\n            anchorEl2: null,\r\n            openMenu2: false,\r\n            anchorEl3: null,\r\n            openMenu3: false,\r\n            showForm: false,\r\n            showShared: \"events\",\r\n            events: [],\r\n            sharedEvents: [],\r\n            acceptedEvents: [],\r\n            filteredEvents: [],\r\n            filteredSharedEvents: [],\r\n            filteredAcceptedEvents: [],\r\n            eventSortOrder: \"descending\",\r\n            search: \"\"\r\n        };\r\n    }\r\n\r\n    areThereNoEvents() {\r\n        return this.state.events === null || this.state.events === undefined || this.state.events.length === 0;\r\n    }\r\n\r\n    areThereNoSharedEvents() {\r\n        return (\r\n            this.state.sharedEvents === null ||\r\n            this.state.sharedEvents === undefined ||\r\n            this.state.sharedEvents.length === 0\r\n        );\r\n    }\r\n    areNoAcceptedEvents() {\r\n        return (\r\n            this.state.acceptedEvents === null ||\r\n            this.state.acceptedEvents === undefined ||\r\n            this.state.acceptedEvents.length === 0\r\n        );\r\n    }\r\n\r\n    isSearching() {\r\n        return this.state.search != \"\";\r\n    }\r\n\r\n    sendEmail = () => {\r\n        this.setState({ showForm: true });\r\n    };\r\n\r\n    switchEventView = () => {\r\n        this.setState({ showShared: !this.state.showShared });\r\n    };\r\n\r\n    setEventOrder = order => {\r\n        this.handleClose3();\r\n        this.setState({ eventSortOrder: order });\r\n    };\r\n\r\n    /**\r\n     * Comparator for ordering events ascending\r\n     */\r\n    compareEventStartDatesAscending(a, b) {\r\n        if (moment(a.startDate).valueOf() < moment(b.startDate).valueOf()) {\r\n            return -1;\r\n        }\r\n\r\n        if (moment(a.startDate).valueOf() > moment(b.startDate).valueOf()) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Comparator for ordering events descending\r\n     */\r\n    compareEventStartDatesDescending(a, b) {\r\n        if (moment(a.startDate).valueOf() < moment(b.startDate).valueOf()) {\r\n            return 1;\r\n        }\r\n\r\n        if (moment(a.startDate).valueOf() > moment(b.startDate).valueOf()) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Comparator for ordering events by category\r\n     */\r\n    compareEventCategory(a, b) {\r\n        const map = {};\r\n        map[categories.None] = 0;\r\n        map[categories.Hobbies] = 1;\r\n        map[categories.Social] = 2;\r\n        map[categories.Errands] = 3;\r\n        map[categories.Projects] = 4;\r\n        map[categories.Hobbies] = 5;\r\n\r\n        if (map[a.category] < map[b.category]) {\r\n            return -1;\r\n        }\r\n\r\n        if (map[a.category] > map[b.category]) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    viewForm = () => {\r\n        if (this.state.showShared === \"events\") {\r\n            return <div>{this.showEvents()}</div>;\r\n        } else if (this.state.showShared === \"shared\") {\r\n            return <div>{this.showSharedEvents()}</div>;\r\n        } else if (this.state.showShared === \"accepted\") {\r\n            return <div>{this.showAcceptedEvents()}</div>;\r\n        } else if (this.state.showShared === \"calendar\") {\r\n            return <div>{this.showCalendar()}</div>;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Displays event table\r\n     * @return Header saying no events or Table of Events\r\n     */\r\n    showEvents = () => {\r\n        var displayedEvents = [];\r\n\r\n        if (this.isSearching()) {\r\n            displayedEvents = this.state.filteredEvents;\r\n        } else {\r\n            displayedEvents = this.state.events;\r\n        }\r\n\r\n        switch (this.state.eventSortOrder) {\r\n            case \"ascending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesAscending);\r\n                break;\r\n            }\r\n            case \"descending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesDescending);\r\n                break;\r\n            }\r\n            case \"category\": {\r\n                displayedEvents.sort(this.compareEventCategory);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.areThereNoEvents()) {\r\n            return <h2>No events</h2>;\r\n        } else {\r\n            return displayedEvents.map((event, index) => (\r\n                <Cards\r\n                    key={index}\r\n                    data={event}\r\n                    editEvent={id => this.props.editEvent(id)}\r\n                    deleteEvent={id => this.deleteEvent(id)}\r\n                />\r\n            ));\r\n        }\r\n    };\r\n\r\n    showSharedEvents = () => {\r\n        var displayedEvents = [];\r\n\r\n        if (this.isSearching()) {\r\n            displayedEvents = this.state.filteredSharedEvents;\r\n        } else {\r\n            displayedEvents = this.state.sharedEvents;\r\n        }\r\n\r\n        switch (this.state.eventSortOrder) {\r\n            case \"ascending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesAscending);\r\n                break;\r\n            }\r\n            case \"descending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesDescending);\r\n                break;\r\n            }\r\n            case \"category\": {\r\n                displayedEvents.sort(this.compareEventCategory);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.areThereNoSharedEvents()) {\r\n            return <h2>No shared events</h2>;\r\n        } else {\r\n            console.log();\r\n            return displayedEvents.map((event, index) => (\r\n                <Cards\r\n                    key={index}\r\n                    data={event}\r\n                    isShared={true}\r\n                    hasAccepted={false}\r\n                    acceptInvite={id => this.acceptInvite(id)}\r\n                    declineInvite={id => this.declineInvite(id)}\r\n                />\r\n            ));\r\n        }\r\n    };\r\n\r\n    showAcceptedEvents = () => {\r\n        var displayedEvents = [];\r\n\r\n        if (this.isSearching()) {\r\n            displayedEvents = this.state.filteredAcceptedEvents;\r\n        } else {\r\n            displayedEvents = this.state.acceptedEvents;\r\n        }\r\n\r\n        switch (this.state.eventSortOrder) {\r\n            case \"ascending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesAscending);\r\n                break;\r\n            }\r\n            case \"descending\": {\r\n                displayedEvents.sort(this.compareEventStartDatesDescending);\r\n                break;\r\n            }\r\n            case \"category\": {\r\n                displayedEvents.sort(this.compareEventCategory);\r\n                break;\r\n            }\r\n            default: {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.areNoAcceptedEvents()) {\r\n            return <h2>No accepted events</h2>;\r\n        } else {\r\n            return displayedEvents.map((event, index) => (\r\n                <Cards key={index} data={event} isShared={true} hasAccepted={true} />\r\n            ));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Displays event calendar\r\n     */\r\n    showCalendar = () => {\r\n        const { events } = this.state;\r\n        const { sharedEvents, acceptedEvents } = this.state;\r\n\r\n        if (!this.areThereNoEvents() || !this.areThereNoSharedEvents() || this.areNoAcceptedEvents()) {\r\n            return (\r\n                <div className=\"App\">\r\n                    <main>\r\n                        <EventCalendar\r\n                            events={events}\r\n                            sharedEvents={sharedEvents}\r\n                            acceptedEvents={acceptedEvents}\r\n                        ></EventCalendar>\r\n                    </main>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <h2>There are no events to be displayed</h2>;\r\n        }\r\n    };\r\n\r\n    handleSearch = text => {\r\n        this.setState({\r\n            search: text.target.value,\r\n            filteredEvents: this.filterEvents(this.state.events),\r\n            filteredSharedEvents: this.filterEvents(this.state.sharedEvents),\r\n            filteredAcceptedEvents: this.filterEvents(this.state.acceptedEvents),\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Filters event by search input. Supports event title, description, category, and time\r\n     * @param eventsToFilter Takes in events to filter\r\n     * @return Filtered events by search input\r\n     */\r\n    filterEvents = eventsToFilter => {\r\n        var filteredEvents = [];\r\n\r\n        for (let i = 0; i < eventsToFilter.length; i++) {\r\n            let searchLowerCase = this.state.search.toLowerCase();\r\n\r\n            let accepted =\r\n                eventsToFilter[i].title.toLowerCase().includes(searchLowerCase) ||\r\n                eventsToFilter[i].category.toLowerCase().includes(searchLowerCase) ||\r\n                eventsToFilter[i].description.toLowerCase().includes(searchLowerCase) ||\r\n                moment(eventsToFilter[i].startDate)\r\n                    .format(\"LLLL\")\r\n                    .toLowerCase()\r\n                    .includes(searchLowerCase);\r\n\r\n            if (accepted) {\r\n                filteredEvents.push(eventsToFilter[i]);\r\n            }\r\n        }\r\n\r\n        return filteredEvents;\r\n    };\r\n\r\n    getMainStyle = () => {\r\n        return {\r\n            textAlign: \"center\",\r\n            padding: \"5px\",\r\n            background: \"#fff\"\r\n        };\r\n    };\r\n\r\n    getBtnStyle = () => {\r\n        return {\r\n            textAlign: \"right\",\r\n            padding: \"10px\",\r\n            background: \"#fff\"\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Clicks create event option and starts adding event\r\n     */\r\n    handleAddEventMenu = () => {\r\n        this.handleClose();\r\n        this.props.beginAddEvent();\r\n    };\r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n    handleClick2 = e => {\r\n        this.setState({\r\n            anchorEl2: e.currentTarget,\r\n            openMenu2: !this.state.openMenu2\r\n        });\r\n    };\r\n    handleClick3 = e => {\r\n        this.setState({\r\n            anchorEl3: e.currentTarget,\r\n            openMenu3: !this.state.openMenu3\r\n        });\r\n    };\r\n\r\n    /**\r\n     * closes drop down menu\r\n     */\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, openMenu: !this.state.openMenu });\r\n    };\r\n    handleClose2 = () => {\r\n        this.setState({ anchorEl2: null, openMenu2: !this.state.openMenu2 });\r\n    };\r\n    handleClose3 = () => {\r\n        this.setState({ anchorEl3: null, openMenu3: !this.state.openMenu3 });\r\n    };\r\n\r\n    /**\r\n     * Clicks join event option\r\n     */\r\n    handleJoinEventMenu = () => {\r\n        this.handleClose();\r\n        this.props.beginJoinEvent();\r\n    };\r\n\r\n    /**\r\n     * Delete Event\r\n     */\r\n    deleteEvent = id => {\r\n        \r\n            let batch = db.batch();\r\n            db.collection(\"events\").doc(id).get()\r\n            .then(doc =>{\r\n                if(doc.data().accepted_invitees){\r\n                    for(let x = 0; x < doc.data().accepted_invitees.length; x++){\r\n                        const id2 = uuid.v4();\r\n                        var temp = db.collection(\"notifications\").doc(id2);\r\n                        batch.set(temp, {user: doc.data().accepted_invitees[x], seen: false, typeOf : 2, eventTitle: doc.data().title, id : id2});\r\n                    }\r\n                }\r\n                if(doc.data().invitees){\r\n                    for(let x = 0; x < doc.data().invitees.length; x++){\r\n                        const id2 = uuid.v4();\r\n                        var temp = db.collection(\"notifications\").doc(id2);\r\n                        batch.set(temp, {user: doc.data().invitees[x], seen: false, typeOf : 2, eventTitle: doc.data().title, id : id2});\r\n                    }\r\n                }\r\n                batch.commit();\r\n\r\n              this.state.events.find(event => {\r\n                if (event.id === id)\r\n                {\r\n                  /* email notification */\r\n                  var invitees = event.invitees;\r\n                  var templateId = 'yes';\r\n                  var emailEvent = event.title;\r\n                  var emailDescription = event.description;\r\n                  var emailStartDate = event.startDate;\r\n                  var emailEndDate = event.endDate;\r\n\r\n                  console.log(\"delete event\");\r\n                  console.log(\"invitees: \" + invitees);\r\n                  console.log(\"emailEvent: \" + emailEvent);\r\n                  console.log(\"emailDescription: \" + emailDescription);\r\n                  console.log(\"emailStartDate: \" + emailStartDate);\r\n                  console.log(\"emailEndDate: \" + emailEndDate);\r\n                  \r\n                  window.emailjs.send(\"gmail\", templateId, {\"send_to\": [invitees], \"subject\": \"An event has been deleted!\", \"emailEvent\": emailEvent, \"emailDescription\": emailDescription, \"emailStartDate\": emailStartDate, \"emailEndDate\": emailEndDate})\r\n                  .then(res => {\r\n                      console.log('Email successfully sent!');\r\n                      db.collection(\"events\")\r\n                      .doc(id)\r\n                      .delete();\r\n                  })\r\n                  .catch(\r\n                    db.collection(\"events\")\r\n                    .doc(id)\r\n                    .delete()\r\n                  )\r\n                }\r\n              })\r\n\r\n                // db.collection(\"events\")\r\n                // .doc(id)\r\n                // .delete();\r\n            })\r\n            .catch(err => console.log(err));\r\n       \r\n    };\r\n    acceptInvite = id => {\r\n        const document = db.collection(\"events\").doc(id);\r\n        document\r\n            .update({\r\n                invitees: firebase.firestore.FieldValue.arrayRemove(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            })\r\n            .catch(err => console.error(err));\r\n        document\r\n            .update({\r\n                accepted_invitees: firebase.firestore.FieldValue.arrayUnion(\r\n                    JSON.parse(localStorage.getItem(\"currentUser\"))\r\n                )\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n    declineInvite = id => {\r\n        const document = db.collection(\"events\").doc(id);\r\n        document\r\n            .update({\r\n                invitees: firebase.firestore.FieldValue.arrayRemove(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            })\r\n            .catch(err => console.error(err));\r\n        document\r\n            .update({\r\n                declined_invitees: firebase.firestore.FieldValue.arrayUnion(\r\n                    JSON.parse(localStorage.getItem(\"currentUser\"))\r\n                )\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    /**\r\n     * Renders table and buttons below the header.\r\n     * @return Buttons\r\n     * @return Event Table\r\n     * @return Event Calendar(not implemented)\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.showForm && (\r\n                    <div>\r\n                        <Form handleDisplay={this.handleDisplay}></Form>\r\n                    </div>\r\n                )}\r\n                <div style={this.getBtnStyle()}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={e => this.handleClick(e)}\r\n                    >\r\n                        Create/Join Event\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.openMenu}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MenuItem onClick={this.handleAddEventMenu}>Create Event</MenuItem>\r\n                        <MenuItem onClick={this.handleJoinEventMenu}>Join Event</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                <div style={this.getBtnStyle()}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={e => this.handleClick3(e)}\r\n                    >\r\n                        Sort Event\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl3}\r\n                        open={this.state.openMenu3}\r\n                        onClose={this.handleClose3}\r\n                    >\r\n                        <MenuItem onClick={() => this.setEventOrder(\"descending\")}>Latest</MenuItem>\r\n                        <MenuItem onClick={() => this.setEventOrder(\"ascending\")}>Earliest</MenuItem>\r\n                        <MenuItem onClick={() => this.setEventOrder(\"category\")}>Category</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                <TextField\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"search for title, description, category, date..\"\r\n                    fullWidth\r\n                    value={this.state.search}\r\n                    margin=\"normal\"\r\n                    onChange={search => this.handleSearch(search)}\r\n                />\r\n                <div style={this.getMainStyle()}>\r\n                    <Button onClick={e => this.handleClick2(e)}>Switch</Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl2}\r\n                        open={this.state.openMenu2}\r\n                        onClose={this.handleClose2}\r\n                    >\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"events\")}>Show Own Events</MenuItem>\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"shared\")}>Show New Event Invites</MenuItem>\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"accepted\")}>Show Accepted Events</MenuItem>\r\n                        <MenuItem onClick={() => this.handleMenuClick(\"calendar\")}>Show Event Calendar</MenuItem>\r\n                    </Menu>\r\n                    {this.viewForm()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * this shows form for inviting others\r\n     */\r\n    handleDisplay = () => {\r\n        this.setState({ showForm: false });\r\n    };\r\n    handleMenuClick = text => {\r\n        this.handleClose2();\r\n        this.setState({ showShared: text });\r\n    };\r\n\r\n    componentDidMount() {\r\n        let tempObject = { temp: [] };\r\n\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        this.unsubscribe1 = db\r\n            .collection(\"events\")\r\n            .where(\"owners\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ events: tempObject.temp });\r\n            });\r\n\r\n        this.unsubscribe2 = db\r\n            .collection(\"events\")\r\n            .where(\"invitees\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    console.log(\"2\");\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ sharedEvents: tempObject.temp });\r\n            });\r\n\r\n        this.unsubscribe3 = db\r\n            .collection(\"events\")\r\n            .where(\"accepted_invitees\", \"array-contains\", currentUser)\r\n            .onSnapshot(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    console.log(\"3\");\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ acceptedEvents: tempObject.temp });\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"unsub\");\r\n        this.unsubscribe1();\r\n        this.unsubscribe2();\r\n        this.unsubscribe3();\r\n    }\r\n}\r\n/**\r\n * @return events that current user made that are not shared\r\n * @return shared events which are events current user shared(invited people)\r\n */\r\n\r\nexport default EventHome;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\n\r\n//database\r\nimport { db, firebase } from \"./firebase\";\r\n\r\nexport default function AddContact() {\r\n    //----- states -----\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userInput, setUserInput] = React.useState(\"\");\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [errorOpen, setErrorOpen] = React.useState(false);\r\n    const [successOpen, setSuccessOpen] = React.useState(false);\r\n    const [message, setMessage] = React.useState(\"\");\r\n    //----- end of states -----\r\n\r\n    //----- styles -----\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n    //----- end of styles -----\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setErrorOpen(false);\r\n    };\r\n    const handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setSuccessOpen(false);\r\n    };\r\n\r\n    /**\r\n     * Adds contact by referencing database\r\n     */\r\n    const handleAddContact = () => {\r\n        /*\r\n            first it checks in database if userinput exists\r\n            then it accesses the current user's doc, and updates\r\n            their contact list with the user's input contact\r\n\r\n            when you add the contact, it adds the name and email\r\n\r\n            concerns: we did not use boolean variables to seperate the\r\n            check from the database addition because it does not update \r\n            fast enough and the contact does not get added\r\n        */\r\n        db.collection(\"users\")\r\n            .doc(userInput)\r\n            .get()\r\n            .then(docSnapshot => {\r\n                if (docSnapshot.exists) {\r\n                    db.collection(\"users\")\r\n                        .doc(currentUser)\r\n                        .update({\r\n                            contacts: firebase.firestore.FieldValue.arrayUnion(\r\n                                {\r\n                                    displayName: docSnapshot.data().displayName,\r\n                                    email: userInput,\r\n                                }\r\n                            )\r\n                        });\r\n                    handleClose();\r\n                    setSuccessOpen(true);\r\n                    setMessage(\"Successfully added contact!\");\r\n                } else {\r\n                    setErrorOpen(true);\r\n                    setMessage(\"Invalid contact!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Handles User Input when entering contact's\r\n     * email\r\n     * @param {*} t text that user types in\r\n     */\r\n    const handleInput = t => {\r\n        setUserInput(t.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    Add Contact\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Adding Contact</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To add a contact, please enter their email address.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAddContact} color=\"primary\">\r\n                        Enter\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={errorOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleErrorClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleErrorClose}\r\n                    variant=\"error\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={successOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleSuccessClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleSuccessClose}\r\n                    variant=\"success\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ViewContacts() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [c, setListofContacts] = React.useState([]);\r\n\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection(\"users\")\r\n            .doc(currentUser)\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    setListofContacts(doc.data().contacts);\r\n                }\r\n            });\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const listOfContacts = c.map((contact, index) => (\r\n        <li key={index}>\r\n            {contact.displayName} <br /> {contact.email}\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    View Contacts\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"List of your Contacts\"}</DialogTitle>\r\n                <DialogContent>{listOfContacts}</DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FiberNewOutlinedIcon from '@material-ui/icons/FiberNewOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\n\r\n\r\nexport default class Notifcations extends Component {\r\n    \r\n    getMessage = () =>{\r\n        const {data} = this.props\r\n        if(data.typeOf === 1){\r\n            return \"You've been invited to \" + data.eventTitle +  \"!\"\r\n        } else if(data.typeOf === 2){\r\n            return data.eventTitle  +  \" has been deleted!\"\r\n        }\r\n        else if(data.typeOf === 3){\r\n            return data.eventTitle + \" has been changed by the owner!\"\r\n        }\r\n        else{\r\n            console.log(\"Error, should not appear!\")\r\n            return \"typeOf returned bad\"\r\n        }\r\n    }\r\n    render() {\r\n    \r\n      let New = !this.props.data.seen ? <FiberNewOutlinedIcon/> : null\r\n    return (\r\n      <div>\r\n        <Paper>\r\n          <Grid container wrap=\"nowrap\" spacing={2}>\r\n            <Grid item xs>\r\n                {New}\r\n              <Typography>{this.getMessage()}</Typography>\r\n                <IconButton aria-label=\"delete\" onClick = {() => this.props.handleDelete(this.props.data.id) }> \r\n                  <DeleteIcon/>\r\n                </IconButton>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddContact from \"./AddContact\";\r\nimport ViewContacts from \"./ViewContacts\";\r\nimport firebase from \"firebase\";\r\nimport logo from \"./logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { db } from \"./firebase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Notifications from \"./Notifcations\"\r\n\r\nconst headerStyle = {\r\n    background: \"#7FDBFF\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    padding: \"2px\",\r\n    fontSize: \"24px\",\r\n    fontFamily: \"Simplifica\"\r\n};\r\n\r\nconst headButtonStyle = {\r\n  textAlign: \"left\"\r\n};\r\n\r\nexport class Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      addContactsPrompt: false,\r\n      unreadNotifications: 0,\r\n      notifications: [],\r\n      displayNotifications: false\r\n    };\r\n  }\r\n\r\n  //localStorage is to access database document\r\n  /**\r\n   * when header mounts, it updates user data\r\n   * @return user data from the database\r\n   */\r\n  componentDidMount() {\r\n    db.collection(\"users\")\r\n      .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n      .get()\r\n      .then(data => {\r\n        if (data.exists) {\r\n          this.setState({ user: data.data() });\r\n        } else {\r\n          //console.log(\"Sad toot\");\r\n        }\r\n      });\r\n    db.collection(\"notifications\")\r\n      .where(\"user\", \"==\", JSON.parse(localStorage.getItem(\"currentUser\")))\r\n      .onSnapshot(data => {\r\n        let tempNotifications = [];\r\n        let activeNotificationCount = 0;\r\n        data.forEach(doc => {\r\n          if (!doc.data().seen) {\r\n            activeNotificationCount++;\r\n          }\r\n          tempNotifications.push(doc.data());\r\n        });\r\n        this.setState({\r\n          unreadNotifications: activeNotificationCount,\r\n          notifications: tempNotifications\r\n        });\r\n      });\r\n  }\r\n  handleClick  = () =>{\r\n    if(this.state.displayNotifications === true){\r\n            let batch  = db.batch();\r\n              for(let i = 0; i< this.state.notifications.length; i++){\r\n                let tempDoc = db.collection(\"notifications\").doc(this.state.notifications[i].id);\r\n                batch.update(tempDoc, {\"seen\": true});\r\n              }\r\n              batch.commit().catch(err => console.log(err));\r\n          }\r\n      this.setState({displayNotifications: !this.state.displayNotifications});\r\n      \r\n    //  \r\n  }\r\n  handleDelete = (id) =>{\r\n    db.collection(\"notifications\").doc(id).delete()\r\n  }\r\n  NotificationBar = () =>{\r\n      const {notifications} = this.state\r\n      if(notifications.length !== 0){\r\n        console.log(notifications)\r\n      return notifications.map((notification, index) =>(\r\n         <Notifications key = {index} data = {notification} handleDelete = {id => this.handleDelete(id)}/>\r\n      ))}\r\n      else{\r\n        console.log(\"xdxd\")\r\n        return <h3>No notifications to be shown</h3>\r\n      }\r\n  }\r\n  /**\r\n   * Renders the buttons to view/add contacts and\r\n   * sign out button and name of user\r\n   */\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header style={headerStyle}>\r\n          <div>\r\n            <header>\r\n              <img src={logo} height=\"117px\" width=\"150px\" alt=\"Schedule It\" />\r\n            </header>\r\n          </div>\r\n          <Badge\r\n            badgeContent={this.state.unreadNotifications}\r\n            color=\"secondary\"\r\n          >\r\n            <IconButton onClick = { () => this.handleClick()}>\r\n              <NotificationsIcon />\r\n            </IconButton>\r\n            \r\n          </Badge>\r\n          {this.state.displayNotifications && (this.NotificationBar())}\r\n          {this.state.user && (\r\n            <div>\r\n              <div style={headButtonStyle}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  component={Link}\r\n                  to=\"/profile\"\r\n                >\r\n                  Profile\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  component={Link}\r\n                  to=\"/home\"\r\n                >\r\n                  Events\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <h1>Schedule It!</h1>\r\n            <AddContact/>\r\n            <ViewContacts/>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { db, firebase } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Join(props) {\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [userInput, setUserInput] = React.useState(\"\");\r\n\r\n    // SNACKBAR\r\n    const [errorOpen, setErrorOpen] = React.useState(false);\r\n    const [successOpen, setSuccessOpen] = React.useState(false);\r\n    const [message, setMessage] = React.useState(\"\");\r\n\r\n    const handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setErrorOpen(false);\r\n    };\r\n    const handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setSuccessOpen(false);\r\n    };\r\n\r\n    //END OF SNACKBAR\r\n\r\n    const handleInput = t => {\r\n        setUserInput(t.target.value);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleJoinEvent = () => {\r\n        db.collection(\"events\")\r\n            .where(\"code\", \"==\", userInput)\r\n            .get()\r\n            .then(querySnapshot => {\r\n                if (!querySnapshot.empty) {\r\n                    querySnapshot.forEach(doc => {\r\n                        db.collection(\"events\")\r\n                            .doc(doc.data().id)\r\n                            .update({\r\n                                invitees: firebase.firestore.FieldValue.arrayUnion(\r\n                                    currentUser\r\n                                )\r\n                            });\r\n                        setSuccessOpen(true);\r\n                        setMessage(\"Successfully joined event!\");\r\n                        handleClose();\r\n                    });\r\n                } else {\r\n                    setErrorOpen(true);\r\n                    setMessage(\"Invalid code!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"Type in code in join event\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Enter in event's code:\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Event Code\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                    <Button onClick={handleJoinEvent} color=\"primary\">\r\n                        Enter\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={errorOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleErrorClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleErrorClose}\r\n                    variant=\"error\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={successOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleSuccessClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleSuccessClose}\r\n                    variant=\"success\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AddEvent from \"./AddEvent\";\r\nimport EventHome from \"./EventHome\";\r\nimport Header from \"./header\";\r\nimport { db } from \"./firebase\";\r\nimport Join from \"./Join\";\r\n\r\nexport class EventManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            homePage: true,\r\n            editingEvent: false,\r\n            idOfEditEvent: \"\",\r\n            joinEvent: false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Starts the process of adding a new event\r\n     * @return sets home page to false\r\n     * @return clears localStorage of event details\r\n     */\r\n    beginAddEvent = () => {\r\n\r\n        db.collection(\"events\").get().then(snapshot => {\r\n\r\n            snapshot.forEach(doc => {\r\n          \r\n              console.log( doc);    \r\n          \r\n            });\r\n          \r\n          });\r\n        //have to account for them refreshing\r\n        localStorage.removeItem(\"saved_title\");\r\n        localStorage.removeItem(\"saved_description\");\r\n        // localStorage.removeItem(\"saved_time\");\r\n        // localStorage.removeItem(\"saved_date\");\r\n        localStorage.removeItem(\"saved_start_date\");\r\n        localStorage.removeItem(\"saved_end_date\");\r\n        this.setAdd();\r\n    };\r\n\r\n    beginJoinEvent = () => {\r\n        this.setState({ joinEvent: !this.state.joinEvent });\r\n    };\r\n\r\n    /**\r\n     * @param id id of event that is being edited\r\n     * @param viewShared if we are editing shared event\r\n     * or normal event\r\n     *\r\n     */\r\n    editEvent = (id, viewShared) => {\r\n        //accessing shared event collections\r\n        if (viewShared) {\r\n            //db.collection(\"shared_events\").doc(id)\r\n        }\r\n        //accessing normal event collections\r\n        else {\r\n            db.collection(\"events\")\r\n                .doc(id)\r\n                .get()\r\n                .then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log(\"TOOT\");\r\n                        localStorage.setItem(\r\n                            \"saved_title\",\r\n                            JSON.stringify(doc.data().title)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_description\",\r\n                            JSON.stringify(doc.data().description)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_category\",\r\n                            JSON.stringify(doc.data().category)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_start_date\",\r\n                            JSON.stringify(doc.data().startDate)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_end_date\",\r\n                            JSON.stringify(doc.data().endDate)\r\n                        );\r\n                    }\r\n                });\r\n        }\r\n        this.setState(\r\n            {\r\n                editingEvent: true,\r\n                idOfEditEvent: id\r\n            },\r\n            this.setAdd()\r\n        );\r\n    };\r\n\r\n    /**\r\n     * @param id takes in the id of the event to be deleted\r\n     * @return {array} returns the updated array with\r\n     * event removed to the database\r\n     * @todo delete either shared or personal events\r\n     */\r\n\r\n    /**\r\n     * Cancels the process of event creation\r\n     * @return Return back to the home page\r\n     */\r\n    cancelEvent = () => {\r\n        // localStorage.removeItem(\"saved_title\");\r\n        // localStorage.removeItem(\"saved_description\");\r\n        // localStorage.removeItem(\"saved_time\");\r\n        // localStorage.removeItem(\"saved_date\");\r\n        this.setHomePage();\r\n    };\r\n\r\n    /**\r\n     * function to start add/edit event\r\n     * @return sets home page to false\r\n     */\r\n    setAdd = () => {\r\n        this.setState({ homePage: false });\r\n    };\r\n\r\n    /**\r\n     * Sets view back to home page\r\n     * @return Home Page\r\n     */\r\n    setHomePage = () => {\r\n        this.setState({\r\n            homePage: true,\r\n            editingEvent: false,\r\n            idOfEditEvent: \"\"\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Decides what to render, between the\r\n     * home page and event creation page\r\n     */\r\n    render() {\r\n        let joinDialog = this.state.joinEvent ? <Join open={true}/> : null;\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {this.state.homePage && (\r\n                    <EventHome\r\n                        beginAddEvent={this.beginAddEvent}\r\n                        beginJoinEvent={this.beginJoinEvent}\r\n                        editEvent={this.editEvent}\r\n                        deleteEvent={this.deleteEvent}\r\n                    />\r\n                )}\r\n                {!this.state.homePage && (\r\n                    <AddEvent\r\n                        cancelEvent={this.cancelEvent}\r\n                        setHomePage={() => this.setHomePage()}\r\n                        editingEvent={this.state.editingEvent}\r\n                        idOfEditEvent={this.state.idOfEditEvent}\r\n                    />\r\n                )}\r\n                {joinDialog}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventManager;\r\n","import React, { Component } from \"react\";\r\nimport { firebase, db } from \"./firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport logo from \"./logo.png\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { textAlign } from \"@material-ui/system\";\r\n\r\n// import firebase from \"firebase\";\r\n\r\nvar CLIENT_ID = \"YOUR_OAUTH_CLIENT_ID\";\r\nconst logoStyle = {\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst logInStyle = {\r\n    textAlign: \"center\",\r\n    top: \"100%\",\r\n    fontSize: \"20px\",\r\n    position: \"relative\"\r\n};\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n        {\r\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            authMethod: \"https://accounts.google.com\",\r\n            // Required to enable ID token credentials for this provider.\r\n            clientId: CLIENT_ID\r\n        },\r\n        {\r\n            provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            requireDisplayName: true\r\n        }\r\n    ],\r\n    callbacks: {\r\n        // Avoid redirects after sign-in.\r\n        signInSuccessWithAuthResult: () => false\r\n    }\r\n};\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSignedIn: false,\r\n            current_user_email: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({\r\n                    //isSignedIn: !!user\r\n                    isSignedIn: true\r\n                });\r\n                //locally store current user's email\r\n                localStorage.setItem(\"currentUser\", JSON.stringify(user.email));\r\n\r\n                //lets contacts data persist\r\n                let docReference = db.collection(\"users\").doc(user.email);\r\n                docReference.get().then(documentSnapshot => {\r\n                    if (!documentSnapshot.exists) {\r\n                        docReference.set({\r\n                            displayName: user.displayName,\r\n                            email: user.email,\r\n                            contacts: [],\r\n                            events: [],\r\n                            polls: [],\r\n                            pictureURL: user.photoURL,\r\n                        });\r\n                    }\r\n                });\r\n\r\n                let docRef = db.collection('users').doc(user.email);\r\n                docRef.get().then(doc => {\r\n                    if (!doc.exists) {\r\n                        //console.log('No such document!');\r\n                    } else {\r\n                        //console.log('Document data:', doc.data());\r\n                        this.setState({ picURL: doc.data().pictureURL });\r\n                    }\r\n                })\r\n                    .catch(err => {\r\n                        console.log('Error getting document', err);\r\n                    });\r\n            }\r\n            else {\r\n                this.setState({ isSignedIn: false })\r\n            }\r\n      });\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{\r\n                textAlign: \"center\",\r\n                backgroundColor: 'white',\r\n                height: '250px',\r\n                width: '300px',\r\n                margin: '0 auto'\r\n            }}>\r\n                <img\r\n                    src={logo}\r\n                    height=\"117px\"\r\n                    width=\"150px\"\r\n                    alt=\"Schedule It\" />\r\n                <br />\r\n                {this.state.isSignedIn ? (\r\n                    <div>\r\n                        <br />\r\n                        <br />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            component={Link}\r\n                            to=\"/home\"\r\n                        >\r\n                            Home\r\n                        </Button>\r\n                    </div>\r\n                ) : (\r\n                        <StyledFirebaseAuth\r\n                            uiCallback={ui => ui.disableAutoSignIn()}\r\n                            uiConfig={uiConfig}\r\n                            firebaseAuth={firebase.auth()}\r\n                        />\r\n                    )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport { firebase, db } from \"./firebase\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Header from \"./header\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\nimport AddContact from \"./AddContact\";\r\n\r\n//import logo from \"./logo.png\";\r\n//import { textAlign } from \"@material-ui/system\";\r\n\r\nconst logInStyle = {\r\n    textAlign: \"center\",\r\n    top: \"100%\",\r\n    background: \"#fff\",\r\n    fontSize: \"20px\",\r\n    position: \"relative\"\r\n};\r\n\r\nexport class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            picURL: \"\",\r\n            oldURL: \"\",\r\n            nameDisplay: \"\",\r\n            current_user_email: \"\",\r\n            userName: \"\",\r\n            bioDisplay: \"\",\r\n            userBio: \"\",\r\n            isUploading: false,\r\n            progress: 0,\r\n            profilePic: \"\",\r\n            errorOpen: false,\r\n            successOpen: false,\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let docRef = db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n        docRef.get().then(doc => {\r\n            if (!doc.exists) {\r\n                //console.log('No such document!');\r\n            } else {\r\n                //console.log('Document data:', doc.data());\r\n                this.setState({ user: doc.data() });\r\n                this.setState({ picURL: doc.data().pictureURL });\r\n                this.setState({ nameDisplay: doc.data().displayName });\r\n                this.setState({ userName: doc.data().displayName });\r\n                this.setState({ current_user_email: doc.data().email });\r\n                this.setState({ bioDisplay: doc.data().bio });\r\n                this.setState({ userBio: doc.data().bio });\r\n                this.setState({ current_user_email: doc.data().email });\r\n                this.setState({ oldURL: doc.data().pictureURL });\r\n            }\r\n        })\r\n            .catch(err => {\r\n                console.log('Error getting document', err);\r\n            });\r\n    };\r\n\r\n    handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        this.setState({ errorOpen: false });\r\n    };\r\n    handleSuccessClose = (event, reason) => {\r\n        this.setState({ successOpen: false });\r\n    };\r\n    \r\n    // handle profile pic upload to Storage\r\n    handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n\r\n    handleProgress = progress => this.setState({ progress });\r\n\r\n    handleUploadError = error => {\r\n        this.setState({\r\n            isUploading: false\r\n        });\r\n        console.error(error);\r\n    };\r\n\r\n    handleUploadSuccess = filename => {\r\n        this.setState({\r\n            profilePic: filename,\r\n            progress: 100,\r\n            isUploading: false,\r\n        });\r\n        firebase\r\n            .storage()\r\n            .ref(\"images\")\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url => this.setState({ picURL: url }));\r\n    };\r\n\r\n    signOut = () => {\r\n        firebase.auth().signOut();\r\n        localStorage.clear();\r\n    };\r\n\r\n    //update profile info in db\r\n    updateDb = e => {\r\n        if (this.state.nameDisplay !== this.state.userName) {\r\n            db.collection(\"users\")\r\n                .doc(this.state.current_user_email)\r\n                .update({\r\n                    displayName: this.state.nameDisplay,\r\n                });\r\n            this.setState({\r\n                successOpen: true,\r\n                message: \"Successfully saved changes\"\r\n            });\r\n        }\r\n        if (this.state.bioDisplay !== this.state.userBio) {\r\n            db.collection(\"users\")\r\n                .doc(this.state.current_user_email)\r\n                .update({\r\n                    bio: this.state.bioDisplay\r\n                });\r\n            this.setState({\r\n                successOpen: true,\r\n                message: \"Successfully saved changes\"\r\n            });\r\n        }\r\n        if (this.state.picURL !== this.state.oldURL) {\r\n            db.collection(\"users\")\r\n                .doc(this.state.current_user_email)\r\n                .update({\r\n                    pictureURL: this.state.picURL\r\n                });\r\n            this.setState({\r\n                successOpen: true,\r\n                message: \"Successfully saved changes\"\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <Header />\r\n                <div style={logInStyle}>\r\n                    <img src={this.state.picURL} alt=\"Profile\" vertical-align=\"middle\" width=\"100px\" height=\"100px\" border-radius=\"50%\" />\r\n                    <br />\r\n                    <form onSubmit={this.updateDb}>\r\n                        <label\r\n                            style={{\r\n                                backgroundColor: '#3f51b5',\r\n                                color: 'white',\r\n                                padding: '5px',\r\n                                borderRadius: 4,\r\n                                fontSize: 18,\r\n                                cursor: 'pointer'\r\n                            }}>\r\n                            Upload profile picture\r\n                                <FileUploader\r\n                                hidden\r\n                                accept=\"image/*\"\r\n                                name=\"Profile Picture\"\r\n                                randomizeFilename\r\n                                storageRef={firebase.storage().ref(\"images\")}\r\n                                onUploadStart={this.handleUploadStart}\r\n                                onUploadError={this.handleUploadError}\r\n                                onUploadSuccess={this.handleUploadSuccess}\r\n                                onProgress={this.handleProgress}\r\n                            />\r\n                        </label>\r\n                        <br />\r\n                        <label style={{\r\n                            fontSize: 18\r\n                        }}>\r\n                            {this.state.current_user_email}\r\n                        </label>\r\n                        <br />\r\n                        <label style={{\r\n                            fontSize: 18,\r\n                        }}>\r\n                            Name\r\n                            </label>\r\n                        <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"fullname\"\r\n                            size=\"26\"\r\n                            placeholder=\"Your name\"\r\n                            onChange={e => this.setState({ nameDisplay: e.target.value })}\r\n                            value={this.state.nameDisplay}\r\n                        />\r\n                        <br />\r\n                        <label style={{\r\n                            fontSize: 18,\r\n                        }}>\r\n                            Biography\r\n                            </label>\r\n                        <br />\r\n                        <textarea\r\n                            name=\"bioText\"\r\n                            rows=\"10\"\r\n                            cols=\"27\"\r\n                            placeholder=\"Biography\"\r\n                            value={this.state.bioDisplay}\r\n                            onChange={e => this.setState({ bioDisplay: e.target.value })}\r\n                        >\r\n                        </textarea>\r\n                        <br />\r\n                        <button type=\"submit\">Save changes</button>\r\n                    </form>\r\n                    <br />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => this.signOut()}\r\n                        size=\"small\"\r\n                        component={Link}\r\n                        to=\"/\"\r\n                    >\r\n                        Sign Out\r\n                    </Button>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"left\"\r\n                        }}\r\n                        open={this.state.errorOpen}\r\n                        autoHideDuration={10}\r\n                        onClose={this.state.handleErrorClose}\r\n                    >\r\n                        <MySnackbarContent\r\n                            onClose={this.state.handleErrorClose}\r\n                            variant=\"error\"\r\n                            message={this.state.message}\r\n                        />\r\n                    </Snackbar>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: \"bottom\",\r\n                            horizontal: \"left\"\r\n                        }}\r\n                        open={this.state.successOpen}\r\n                        autoHideDuration={10}\r\n                        onClose={this.state.handleSuccessClose}\r\n                    >\r\n                        <MySnackbarContent\r\n                            onClose={this.state.handleSuccessClose}\r\n                            variant=\"success\"\r\n                            message={this.state.message}\r\n                        />\r\n                    </Snackbar>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport EventManager from \"./components/EventManager\";\r\nimport Login from './components/Login'\r\nimport Profile from './components/Profile'\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Login />\r\n                </Route>\r\n                <Route exact path=\"/home\">\r\n                    <EventManager />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.88ca5a89.png\";"],"sourceRoot":""}