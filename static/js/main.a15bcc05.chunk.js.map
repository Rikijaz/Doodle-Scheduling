{"version":3,"sources":["components/logo.png","components/DoodleCalendar.js","components/AddSecondPage.js","components/Poll.js","components/EventHome.js","components/firebase.js","components/AddContact.js","components/ViewContacts.js","components/header.js","components/Snackbar.js","components/AddFirstPage.js","components/EventManager.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DoodleCalendar","props","handleEventRemove","event","selectedIntervals","state","console","log","index","findIndex","interval","uid","splice","setState","handleEventUpdate","handleSelect","newIntervals","lastUid","intervals","map","concat","length","parentMethod","startTime","moment","h","m","endTime","numberOfDays","this","onIntervalSelect","onIntervalUpdate","onIntervalRemove","React","Component","AddSecondPage","onChangeTime","t","time","target","value","onSubmit","preventDefault","addEvent","title","description","date","changeCalendar","calendar","localStorage","setItem","JSON","stringify","saved_current_time","parse","getItem","eventData","i","start","format","end","renderCalendar","onEventSubmitted","children","Button","variant","color","size","onClick","goToPrevious","type","className","endIcon","cancelEvent","Poll","onChangePollTitle","p","pollTitle","handleDayClick","day","selected","selectedDays","selectedIndex","selectedDay","DateUtils","isSameDay","push","addPoll","TextField","placeholder","fullWidth","margin","onChange","onDayClick","cancelPoll","EventHome","showEvents","events","defaultPageSize","data","columns","Header","accessor","Cell","row","editEvent","original","id","deleteEvent","showPolls","polls","getBtnStyle","textAlign","padding","getMainStyle","handleClick","e","anchorEl","currentTarget","openMenu","handleClose","handleAddEventMenu","beginAddEvent","handleAddPoll","beginAddPoll","style","aria-controls","aria-haspopup","Menu","open","onClose","MenuItem","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","AddContact","useState","setOpen","userInput","setUserInput","currentUser","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","label","DialogActions","collection","doc","update","contacts","FieldValue","arrayUnion","Transition","forwardRef","ref","Slide","direction","ViewContacts","docReference","c","setListofContacts","listOfContacts","contact","key","get","then","exists","TransitionComponent","keepMounted","aria-describedby","headerStyle","background","fontSize","fontFamily","fontStyle","signOutStyle","onClickSignOut","auth","signOut","removeItem","user","addContactsPrompt","component","Link","to","email","displayName","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","classes","other","Icon","SnackbarContent","clsx","action","IconButton","aria-label","close","AddFirstPage","onChangeTitle","n","onChangeDescription","des","onChangeDate","d","addFirst","saved_current_data","Container","maxWidth","EventManager","a","errorMessageOpen","editingEvent","newEvent","uuid","v4","completed","newEvents","indexOfEditEvent","finishAddEvent","successMessageOpen","newEventArray","currentEventTitle","currentEventDate","currentEventDescription","goToNext","nextPage","homePage","handleErrorClose","reason","handleSuccessClose","setAdd","beginEditEvent","editedEvent","find","editedFirstPage","editedSecondPage","filter","setHomePage","setPollPage","pollPage","newPoll","newPolls","archivedEvents","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","logoStyle","logInStyle","top","position","uiConfig","signInFlow","signInOptions","provider","GoogleAuthProvider","PROVIDER_ID","authMethod","clientId","EmailAuthProvider","requireDisplayName","callbacks","signInSuccessWithAuthResult","Login","componentDidMount","onAuthStateChanged","isSignedIn","documentSnapshot","set","src","logo","alt","uiCallback","ui","disableAutoSignIn","firebaseAuth","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a15bcc05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.88ca5a89.png\";","import React from 'react';\nimport moment from 'moment';\nimport WeekCalendar from 'react-week-calendar';\n\nexport default class DoodleCalendar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastUid: 1,\n      selectedIntervals: [\n        // {\n        //   uid: 1,\n        //   start: moment({h: 6, m: 30}),\n        //   end: moment({h: 7, m: 59}),\n        //   value: \"CS150 exam\"\n        // },\n      ]\n    }\n  }\n\n  handleEventRemove = (event) => {\n    const {selectedIntervals} = this.state;\n    console.log('Removing event');\n\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\n    if (index > -1) {\n      selectedIntervals.splice(index, 1);\n      this.setState({selectedIntervals});\n    }\n\n  }\n\n  handleEventUpdate = (event) => {\n    const {selectedIntervals} = this.state;\n    console.log('Updating event');\n\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\n    if (index > -1) {\n      selectedIntervals[index] = event;\n      this.setState({selectedIntervals});\n    }\n  }\n\n  handleSelect = (newIntervals) => {\n    const {lastUid, selectedIntervals} = this.state;\n    const intervals = newIntervals.map( (interval, index) => {\n\n      return {\n        ...interval,\n        uid: lastUid + index\n      }\n    });\n\n    this.setState({\n      selectedIntervals: selectedIntervals.concat(intervals),\n      lastUid: lastUid + newIntervals.length\n    })\n\n    this.props.parentMethod(intervals);\n  }\n\n  render() {\n    return <WeekCalendar\n      startTime = {moment({h: 0, m: 0})}\n      endTime = {moment({h: 23, m: 50})}\n      numberOfDays= {7}\n      selectedIntervals = {this.state.selectedIntervals}\n      onIntervalSelect = {this.handleSelect}\n      onIntervalUpdate = {this.handleEventUpdate}\n      onIntervalRemove = {this.handleEventRemove}\n      />\n  }\n}","import React, { Component } from \"react\";\r\n//import { TextField } from '@material-ui/core';\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nimport DoodleCalendar from \"./DoodleCalendar\";\r\nimport \"react-week-calendar/dist/style.css\";\r\n\r\nexport class AddSecondPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: \"\",\r\n            calendar: \"default\"\r\n        };\r\n    }\r\n    onChangeTime = t => this.setState({ time: t.target.value });\r\n    onSubmit = t => {\r\n        t.preventDefault();\r\n        this.props.addEvent(\r\n            this.props.title,\r\n            this.props.description,\r\n            this.props.date,\r\n            this.state.time\r\n        );\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        localStorage.setItem(\r\n            \"saved_current_event_time\",\r\n            JSON.stringify(this.state)\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        const saved_current_time = JSON.parse(\r\n            localStorage.getItem(\"saved_current_event_time\")\r\n        );\r\n        this.setState(saved_current_time);\r\n    }\r\n\r\n    // eric's stuff //\r\n    changeCalendar = calendar => {\r\n        this.setState({ calendar });\r\n    };\r\n    \r\n    onEventSubmitted(eventData) {\r\n        var i;\r\n        for (i = 0; i < eventData.length; i++) {\r\n            console.log(\r\n                \"Event created from \" +\r\n                    eventData[i].start.format(\"LLLL\") +\r\n                    \" to \" +\r\n                    eventData[i].end.format(\"LLLL\") +\r\n                    \"\\n\"\r\n            );\r\n        }\r\n\r\n        // this.props.date = \r\n        // this.state.time =\r\n        \r\n        // https://momentjs.com/docs/#/parsing/string-format/ if you are looking for a different time format\r\n    }\r\n\r\n    // eric's stuff //\r\n\r\n    render() {\r\n        //eslint-disable-next-line\r\n        const { title, description } = this.props;\r\n\r\n        //eric's shit\r\n\r\n        //eslint-disable-next-line\r\n        const calendar = this.state.calendar;\r\n        let renderCalendar = null;\r\n        renderCalendar = (\r\n            <div>\r\n                <h3>Choose your time!</h3>\r\n                <DoodleCalendar parentMethod={this.onEventSubmitted}>\r\n                    {this.props.children}\r\n                </DoodleCalendar>\r\n            </div>\r\n        );\r\n\r\n        //eric's shit\r\n\r\n        return (\r\n            <div>\r\n                {renderCalendar}\r\n\r\n                <form onSubmit={t => this.onSubmit(t)}>\r\n                    {/* {title}\r\n                    <br />\r\n                    {description}\r\n                    <br />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        id=\"time\"\r\n                        label=\"Event Time\"\r\n                        type=\"time\"\r\n                        value={this.state.time}\r\n                        margin=\"normal\"\r\n                        onChange={(t) => this.onChangeTime(t)}\r\n                    />\r\n                    <br /> */}\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={this.props.goToPrevious}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <br />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={t => this.onSubmit(t)}\r\n                    >\r\n                        Submit Event\r\n                    </Button>\r\n                    <br />\r\n                    <Button\r\n                        className=\"userCancelButton\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        endIcon={<CancelIcon />}\r\n                        onClick={this.props.cancelEvent}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddSecondPage;\r\n/*  \r\n    Eric's Stuff that was added in:\r\n        renderCalendar\r\n        calendar\r\n        DoodleCalendar\r\n        onEventSubmitted\r\n        changeCalendar\r\n        calendar in state\r\n        DoodleCalendar.js\r\n\r\n\r\n\r\n*/\r\n","import React, { Component } from \"react\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport DayPicker, { DateUtils } from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\n\nexport class Poll extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pollTitle: \"\",\n            //selectedDays: undefined\n            selectedDays: []\n        };\n    }\n\n    onChangePollTitle = p => this.setState({ pollTitle: p.target.value });\n\n    handleDayClick = (day, { selected }) => {\n        const { selectedDays } = this.state;\n        if (selected) {\n            const selectedIndex = selectedDays.findIndex(selectedDay =>\n                DateUtils.isSameDay(selectedDay, day)\n            );\n            selectedDays.splice(selectedIndex, 1);\n        } else {\n            selectedDays.push(day);\n        }\n        this.setState({ selectedDays });\n    };\n\n    onSubmit = () => {\n        this.props.addPoll(this.state.pollTitle, this.state.selectedDays);\n    };\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <TextField\n                        type=\"text\"\n                        variant=\"outlined\"\n                        placeholder=\"Poll Name\"\n                        fullWidth\n                        value={this.state.pollTitle}\n                        margin=\"normal\"\n                        onChange={p => this.onChangePollTitle(p)}\n                    />\n\n                    <h1>Please Select Days</h1>\n\n                    <DayPicker\n                        onDayClick={(day, selected) =>\n                            this.handleDayClick(day, selected)\n                        }\n                        selectedDays={this.state.selectedDays}\n                    />\n\n                    <br />\n\n                    <Button\n                        className=\"userSubmitButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        onClick={() => this.onSubmit()}\n                    >\n                        Submit\n                    </Button>\n\n                    <br />\n\n                    <Button\n                        className=\"userCancelButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        endIcon={<CancelIcon />}\n                        onClick={this.props.cancelPoll}\n                    >\n                        Cancel\n                    </Button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Poll;\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n//import EventItem from \"./EventItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\n// import firebase from \"firebase\";\r\n// import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n\r\nexport class EventHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            openMenu: false\r\n        };\r\n    }\r\n\r\n    showEvents = () => {\r\n        if (this.props.events === null || this.props.events.length === 0) {\r\n            return <h2>No events</h2>;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <ReactTable\r\n                        defaultPageSize={5}\r\n                        data={this.props.events}\r\n                        columns={[\r\n                            {\r\n                                Header: \"Events\",\r\n                                columns: [\r\n                                    {\r\n                                        Header: \"Title\",\r\n                                        accessor: \"title\"\r\n                                    },\r\n                                    {\r\n                                        Header: \"Description\",\r\n                                        accessor: \"description\"\r\n                                    },\r\n                                    {\r\n                                        Header: \"Date\",\r\n                                        accessor: \"date\"\r\n                                    },\r\n                                    {\r\n                                        Header: \"Time\",\r\n                                        accessor: \"time\"\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                Header: \"Actions\",\r\n                                columns: [\r\n                                    {\r\n                                        Header: \"Edit\",\r\n                                        Cell: row => (\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                onClick={() =>\r\n                                                    this.props.editEvent(\r\n                                                        row.original.id\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                Edit\r\n                                            </Button>\r\n                                        )\r\n                                    },\r\n                                    {\r\n                                        Header: \"Delete\",\r\n                                        Cell: row => (\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                onClick={() =>\r\n                                                    this.props.deleteEvent(\r\n                                                        row.original.id\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        )\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    showPolls = () => {\r\n        if (this.props.polls === null || this.props.polls.length === 0) {\r\n            return <h2>No Polls</h2>;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h1>POLLS:</h1>\r\n                    {/* {this.props.polls.map(x => (\r\n                            <li>\r\n                                {x.title} - {x.selectedDays}\r\n                            </li>\r\n                        ))} */}\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    getBtnStyle = () => {\r\n        return {\r\n            textAlign: \"right\",\r\n            padding: \"10px\"\r\n        };\r\n    };\r\n\r\n    getMainStyle = () => {\r\n        return {\r\n            textAlign: \"center\",\r\n            padding: \"5px\",\r\n        }\r\n    }\r\n\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, openMenu: !this.state.openMenu });\r\n    };\r\n\r\n    handleAddEventMenu = () => {\r\n        this.handleClose();\r\n        this.props.beginAddEvent();\r\n    };\r\n\r\n    handleAddPoll = () => {\r\n        this.handleClose();\r\n        this.props.beginAddPoll();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={this.getBtnStyle()}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={e => this.handleClick(e)}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.openMenu}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MenuItem onClick={this.handleAddEventMenu}>\r\n                            Event\r\n                        </MenuItem>\r\n                        <MenuItem onClick={this.handleAddPoll}>Poll</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                <div style={this.getMainStyle()}>\r\n                    {this.showEvents()}\r\n                    <br />\r\n                    {this.showPolls()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventHome;\r\n","import firebase from \"firebase\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAmcdm-nCXD4ahr4EwKddfHQ_vpqkMEPWA\",\n    authDomain: \"cs180-schedulingapp.firebaseapp.com\",\n    databaseURL: \"https://cs180-schedulingapp.firebaseio.com\",\n    projectId: \"cs180-schedulingapp\",\n    storageBucket: \"cs180-schedulingapp.appspot.com\",\n    messagingSenderId: \"350264880268\",\n    appId: \"1:350264880268:web:4fb4718431afc39b6e9fa9\",\n    measurementId: \"G-DBB71H8E8J\"\n};\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nexport {firebase, db};","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n//database\nimport { db, firebase } from \"./firebase\";\n\nexport default function AddContact() {\n    const [open, setOpen] = React.useState(false);\n    const [userInput, setUserInput] = React.useState(\"\");\n    const [currentUser] = React.useState(\n        JSON.parse(localStorage.getItem(\"currentUser\"))\n    );\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleAddContact = () => {\n        // console.log(userInput);\n        // console.log(contacts);\n        // console.log(currentUser);\n        db.collection(\"users\").doc(currentUser).update({\n            contacts: firebase.firestore.FieldValue.arrayUnion(userInput)\n        });\n        handleClose();\n    };\n    const handleInput = t => {\n        setUserInput(t.target.value);\n    };\n    const btnStyle = {\n        textAlign: \"left\"\n    };\n\n    return (\n        <div>\n            <div style={btnStyle}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={handleClickOpen}\n                >\n                    Add Contact\n                </Button>\n            </div>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">Adding Contact</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To add a contact, please enter their email address.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                        onChange={handleInput}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleAddContact} color=\"primary\">\n                        Enter\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n//import DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ViewContacts() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n\r\n    let docReference = db.collection(\"users\").doc(currentUser);\r\n    const [c, setListofContacts] = React.useState([]);\r\n\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        docReference.get().then(doc => {\r\n            if (doc.exists) {\r\n                setListofContacts(doc.data().contacts);\r\n            }\r\n        });\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const listOfContacts = c.map((contact, index) => (\r\n        <li key={index}>{contact}</li>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    View Contacts\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"List of your Contacts\"}</DialogTitle>\r\n                <DialogContent>\r\n                    {listOfContacts}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddContact from './AddContact'\r\nimport ViewContacts from './ViewContacts'\r\nimport firebase from \"firebase\";\r\n//import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { db } from \"./firebase\";\r\n\r\nconst headerStyle = {\r\n    background: \"#D0E6FF\",\r\n    color: \"#5a769e\",\r\n    textAlign: \"center\",\r\n    padding: \"3px\",\r\n    fontSize: \"24px\",\r\n    fontFamily: \"Courier New\",\r\n    fontStyle: \"italic\"\r\n};\r\n\r\nconst signOutStyle = {\r\n    textAlign: \"right\"\r\n};\r\n\r\n\r\nexport class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            addContactsPrompt: false,\r\n        };\r\n    }\r\n\r\n    //localStorage is to access database document\r\n    componentDidMount() {\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .get()\r\n            .then(data => {\r\n                if (data.exists) {\r\n                    //console.log(\"glad toot\");\r\n                    this.setState({ user: data.data()});\r\n                } else {\r\n                    console.log(\"Sad toot\");\r\n                }\r\n            });\r\n    }\r\n\r\n    onClickSignOut = () => {\r\n        firebase.auth().signOut();\r\n        localStorage.removeItem(\"currentUser\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header style={headerStyle}>\r\n                    <h1>Schedule It</h1>\r\n                    <AddContact/>\r\n                    <ViewContacts/>\r\n\r\n                    {this.state.user && (\r\n                        <div>\r\n                            <div style={signOutStyle}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    onClick={() => this.onClickSignOut()}\r\n                                    component={Link}\r\n                                    to=\"/\"\r\n                                >\r\n                                    {this.state.user.email}\r\n                                </Button>\r\n                            </div>\r\n                            <div>Welcome {this.state.user.displayName}</div>\r\n                        </div>\r\n                    )}\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MySnackbarContent);","import React, { Component } from 'react'\r\nimport { TextField } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nexport class AddFirstPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            date: '',\r\n            description: '',\r\n        }\r\n    }\r\n    onChangeTitle = (n) => this.setState({ title: n.target.value });\r\n    onChangeDescription = (des) =>\r\n        this.setState({ description: des.target.value });\r\n\r\n    onChangeDate = (d) => this.setState({ date: d.target.value });\r\n\r\n    onSubmit = (n, des, d) => {\r\n        n.preventDefault();\r\n        this.props.addFirst(\r\n            this.state.title, this.state.date, this.state.description\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        localStorage.setItem('saved_current_event', JSON.stringify(this.state))\r\n    }\r\n    componentDidMount() {\r\n        const saved_current_data = JSON.parse(localStorage.getItem('saved_current_event'));\r\n        this.setState(saved_current_data);\r\n    }\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <form onSubmit={(n, des, d) => this.onSubmit(n, des, d)}>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Event Name\"\r\n                        fullWidth\r\n                        value={this.state.title}\r\n                        margin=\"normal\"\r\n                        onChange={(n) => this.onChangeTitle(n)}\r\n                    />\r\n                    <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Event Description ... Optional\"\r\n                        fullWidth\r\n                        value={this.state.description}\r\n                        margin=\"normal\"\r\n                        onChange={(des) => this.onChangeDescription(des)}\r\n\r\n                    />\r\n                    {/* <TextField\r\n                        variant=\"outlined\"\r\n                        id=\"date\"\r\n                        type=\"date\"\r\n                        value={this.state.date}\r\n                        onChange={(d) => this.onChangeDate(d)}\r\n                        margin=\"normal\"\r\n                    /> */}\r\n                    <br />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className=\"userContinueButton\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        endIcon={<ArrowForwardIcon />}\r\n                        onClick={(n, des, d) => this.onSubmit(n, des, d)}\r\n                    >\r\n                        Continue\r\n                    </Button>\r\n                    <br />\r\n                    <Button\r\n                        className=\"userCancelButton\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        endIcon={<CancelIcon />}\r\n                        onClick={this.props.cancelEvent}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFirstPage\r\n","import React, { Component } from \"react\";\r\nimport AddSecondPage from \"./AddSecondPage\";\r\nimport Poll from \"./Poll\";\r\nimport EventHome from \"./EventHome\";\r\nimport Header from \"./header\";\r\nimport uuid from \"uuid\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\nimport AddFirstPage from \"./AddFirstPage\";\r\n\r\nexport class EventManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: JSON.parse(localStorage.getItem(\"events\")),\r\n\r\n            polls: JSON.parse(localStorage.getItem(\"polls\")),\r\n\r\n            currentEventTitle: \"\",\r\n            currentEventDate: \"\",\r\n            currentEventDescription: \"\",\r\n\r\n            errorMessageOpen: false,\r\n            message: \"\",\r\n            successMessageOpen: false,\r\n\r\n            nextPage: false,\r\n            homePage: true,\r\n            pollPage: false,\r\n\r\n            editingEvent: false,\r\n            indexOfEditEvent: \"\"\r\n        };\r\n    }\r\n\r\n    addEvent = async (title, description, date, time) => {\r\n        if (time === \"\") {\r\n            this.setState({ errorMessageOpen: true, message: \"Missing Time!\" });\r\n        } else if (time !== \"\" && !this.state.editingEvent) {\r\n            const newEvent = {\r\n                id: uuid.v4(),\r\n                title: title,\r\n                completed: false,\r\n                description: description,\r\n                date: date,\r\n                time: time\r\n            };\r\n            if (this.state.events !== null) {\r\n                this.setState({\r\n                    events: [...this.state.events, newEvent],\r\n                    successMessageOpen: true\r\n                });\r\n            } else {\r\n                //needed to add this, cant call this.state.events if it is null\r\n                const newEventArray = [];\r\n                newEventArray.push(newEvent);\r\n                this.setState({\r\n                    events: newEventArray,\r\n                    successMessageOpen: true\r\n                });\r\n            }\r\n            this.finishAddEvent();\r\n        } else if (time !== \"\" && this.state.editingEvent) {\r\n            const newEvent = {\r\n                id: uuid.v4(),\r\n                title: title,\r\n                completed: false,\r\n                description: description,\r\n                date: date,\r\n                time: time\r\n            };\r\n            const newEvents = this.state.events;\r\n            newEvents.splice(this.state.indexOfEditEvent, 1, newEvent);\r\n            this.setState({\r\n                events: newEvents,\r\n                indexOfEditEvent: \"\",\r\n                editingEvent: false\r\n            });\r\n            this.finishAddEvent();\r\n        }\r\n    };\r\n\r\n    addFirst = async (t, d, des) => {\r\n        if (t !== \"\") {\r\n            this.setState({ currentEventTitle: t });\r\n            this.setState({ currentEventDate: d });\r\n            this.setState({ currentEventDescription: des });\r\n            this.goToNext();\r\n        } else if (t === \"\") {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Missing title!\"\r\n            });\r\n        } \r\n    };\r\n\r\n    goToPrevious = () => {\r\n        this.setState({ nextPage: !this.state.nextPage });\r\n    };\r\n    goToNext = () => {\r\n        this.setState({ nextPage: !this.state.nextPage });\r\n    };\r\n    finishAddEvent = () => {\r\n        //componentDidUpdate can handle this\r\n        //localStorage.setItem(\"events\", JSON.stringify(this.state.events));\r\n\r\n        //change this to localstorage.clear later\r\n        localStorage.removeItem(\"saved_current_event\");\r\n        localStorage.removeItem(\"saved_current_event_time\");\r\n\r\n        this.setState({ homePage: !this.state.homePage });\r\n    };\r\n\r\n    handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ errorMessageOpen: false });\r\n    };\r\n    handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ successMessageOpen: false });\r\n    };\r\n\r\n    beginAddEvent = () => {\r\n        //have to account for them refreshing\r\n        localStorage.removeItem(\"saved_current_event\");\r\n        localStorage.removeItem(\"saved_current_event_time\");\r\n        this.setAdd();\r\n    };\r\n\r\n    beginEditEvent = () => {\r\n        this.setAdd();\r\n    };\r\n\r\n    editEvent = id => {\r\n        const editedEvent = this.state.events.find(event => {\r\n            return event.id === id;\r\n        });\r\n        const editedFirstPage = {\r\n            title: editedEvent.title,\r\n            date: editedEvent.date,\r\n            description: editedEvent.description\r\n        };\r\n        const editedSecondPage = {\r\n            time: editedEvent.time\r\n        };\r\n        this.setState({\r\n            editingEvent: true,\r\n            indexOfEditEvent: this.state.events.findIndex(\r\n                event => event.id === id\r\n            )\r\n        });\r\n        localStorage.setItem(\r\n            \"saved_current_event\",\r\n            JSON.stringify(editedFirstPage)\r\n        );\r\n        localStorage.setItem(\r\n            \"saved_current_event_time\",\r\n            JSON.stringify(editedSecondPage)\r\n        );\r\n        this.beginEditEvent();\r\n    };\r\n\r\n    deleteEvent = id => {\r\n        this.setState({\r\n            events: [...this.state.events.filter(event => event.id !== id)]\r\n        });\r\n    };\r\n\r\n    cancelEvent = () => {\r\n        localStorage.removeItem(\"saved_current_event\");\r\n        localStorage.removeItem(\"saved_current_event_time\");\r\n        this.setHomePage();\r\n    };\r\n\r\n    cancelPoll = () => {\r\n        this.setHomePage();\r\n    };\r\n\r\n    beginAddPoll = () => {\r\n        this.setPollPage();\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem(\"events\", JSON.stringify(this.state.events));\r\n        localStorage.setItem(\"polls\", JSON.stringify(this.state.polls));\r\n    }\r\n\r\n    setAdd = () => {\r\n        this.setState({ nextPage: false, homePage: false, pollPage: false });\r\n    };\r\n\r\n    setHomePage = () => {\r\n        this.setState({ homePage: true, nextPage: false, pollPage: false });\r\n    };\r\n\r\n    setPollPage = () => {\r\n        this.setState({ homePage: false, nextPage: false, pollPage: true });\r\n    };\r\n\r\n    addPoll = (pollTitle, selectedDays) => {\r\n        if (pollTitle === \"\" && selectedDays.length === 0) {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Missing Title and Dates!\"\r\n            });\r\n        } else if (pollTitle === \"\") {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Missing Title!\"\r\n            });\r\n        } else if (selectedDays.length === 0) {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Missing Dates!\"\r\n            });\r\n        } else {\r\n            const newPoll = {\r\n                title: pollTitle,\r\n                selectedDays: selectedDays\r\n            };\r\n            if (this.state.polls === null) {\r\n                const newPolls = [];\r\n                newPolls.push(newPoll);\r\n                this.setState({ polls: newPolls });\r\n            } else {\r\n                this.setState({ polls: [...this.state.polls, newPoll] });\r\n            }\r\n            this.setHomePage();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {this.state.homePage && (\r\n                    <EventHome\r\n                        events={this.state.events}\r\n                        polls={this.state.polls}\r\n                        archivedEvents={this.state.archivedEvents}\r\n                        beginAddEvent={this.beginAddEvent}\r\n                        editEvent={this.editEvent}\r\n                        deleteEvent={this.deleteEvent}\r\n                        beginAddPoll={this.beginAddPoll}\r\n                    />\r\n                )}\r\n                {!this.state.nextPage &&\r\n                    !this.state.homePage &&\r\n                    !this.state.pollPage && (\r\n                        <AddFirstPage\r\n                            addFirst={this.addFirst}\r\n                            goToNext={this.goToNext}\r\n                            cancelEvent={this.cancelEvent}\r\n                        />\r\n                    )}\r\n                {this.state.nextPage &&\r\n                    !this.state.homePage &&\r\n                    !this.state.pollPage && (\r\n                        <AddSecondPage\r\n                            goToPrevious={this.goToPrevious}\r\n                            nextPage={this.state.nextPage}\r\n                            addEvent={this.addEvent}\r\n                            title={this.state.currentEventTitle}\r\n                            description={this.state.currentEventDescription}\r\n                            //date={this.state.currentEventDate}\r\n                            cancelEvent={this.cancelEvent}\r\n                        />\r\n                    )}\r\n                {this.state.pollPage &&\r\n                    !this.state.nextPage &&\r\n                    !this.state.homePage && (\r\n                        <Poll\r\n                            cancelPoll={this.cancelPoll}\r\n                            addPoll={this.addPoll}\r\n                        />\r\n                    )}\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.errorMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleErrorClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleErrorClose}\r\n                        variant=\"error\"\r\n                        message={this.state.message}\r\n                    />\r\n                </Snackbar>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.successMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSuccessClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleSuccessClose}\r\n                        variant=\"success\"\r\n                        message={\"New event has been created\"}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventManager;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.png\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n// import firebase from \"firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { firebase, db } from \"./firebase\";\r\n\r\nvar CLIENT_ID = \"YOUR_OAUTH_CLIENT_ID\";\r\nconst logoStyle = {\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst logInStyle = {\r\n    textAlign: \"center\",\r\n    top: \"75%\",\r\n    fontSize: \"40px\",\r\n    position: \"relative\"\r\n};\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n        {\r\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            authMethod: \"https://accounts.google.com\",\r\n            // Required to enable ID token credentials for this provider.\r\n            clientId: CLIENT_ID\r\n        },\r\n        {\r\n            provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            requireDisplayName: true\r\n        }\r\n    ],\r\n    callbacks: {\r\n        // Avoid redirects after sign-in.\r\n        signInSuccessWithAuthResult: () => false\r\n    }\r\n};\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSignedIn: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({\r\n                    isSignedIn: !!user\r\n                });\r\n                //lets contacts data persist\r\n                let docReference = db.collection(\"users\").doc(user.email);\r\n                docReference.get().then(documentSnapshot => {\r\n                    if (!documentSnapshot.exists) {\r\n                        docReference.set({\r\n                            displayName: user.displayName,\r\n                            email: user.email,\r\n                            contacts: [],\r\n                            events: [],\r\n                            polls: [],\r\n                        });\r\n                    }\r\n                });\r\n\r\n                //keep this so header can load the page\r\n                localStorage.setItem(\"currentUser\", JSON.stringify(user.email));\r\n                console.log(\"toot\");\r\n            }\r\n        });\r\n    };\r\n\r\n    onClick = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={logoStyle}>\r\n                    <header>\r\n                        <img src={logo} alt=\"Schedule It\" />\r\n                    </header>\r\n                </div>\r\n                {this.state.isSignedIn ? (\r\n                    <div style={logInStyle}>\r\n                        <h3>\r\n                            Signed in as{\" \"}\r\n                            {firebase.auth().currentUser.displayName}.{\" \"}\r\n                        </h3>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            component={Link}\r\n                            to=\"/home\"\r\n                        >\r\n                            Go to Home Page\r\n                        </Button>\r\n                        <br />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.onClick()}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </div>\r\n                ) : (\r\n                    <StyledFirebaseAuth\r\n                        uiCallback={ui => ui.disableAutoSignIn()}\r\n                        uiConfig={uiConfig}\r\n                        firebaseAuth={firebase.auth()}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport EventManager from \"./components/EventManager\";\r\nimport Login from './components/Login'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Login/>\r\n                </Route>\r\n                <Route exact path=\"/home\">\r\n                    <EventManager />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}