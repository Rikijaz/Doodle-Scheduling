{"version":3,"sources":["components/logo.png","components/DoodleCalendar.js","components/AddSecondPage.js","components/Poll.js","components/firebase.js","components/Form.js","components/EventHome.js","components/AddContact.js","components/ViewContacts.js","components/header.js","components/Snackbar.js","components/AddFirstPage.js","components/EventManager.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DoodleCalendar","props","handleEventRemove","event","selectedIntervals","state","index","findIndex","interval","uid","splice","setState","handleEventUpdate","handleSelect","newIntervals","lastUid","intervals","map","concat","length","parentMethod","startTime","moment","h","m","endTime","numberOfDays","this","onIntervalSelect","onIntervalUpdate","onIntervalRemove","React","Component","AddSecondPage","onSubmit","t","preventDefault","addEvent","title","description","date","time","changeCalendar","calendar","onEventSubmitted","eventData","x","Date","start","format","y","end","together","getHours","toString","getMinutes","getMonth","getDate","localStorage","setItem","JSON","stringify","saved_current_time","parse","getItem","renderCalendar","e","children","Button","variant","color","size","onClick","goToPrevious","type","className","endIcon","cancelEvent","Poll","onChangePollTitle","p","pollTitle","target","value","handleDayClick","day","selected","selectedDays","selectedIndex","selectedDay","DateUtils","isSameDay","push","addPoll","TextField","placeholder","fullWidth","margin","onChange","onDayClick","cancelPoll","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Form","contentList","emailList","handleChange","bind","handleSubmit","collection","doc","get","then","data","exists","contacts","events","id","name","required","feedback","style","width","height","sendFeedback","message_html","from_name","reply_to","email","handleDisplay","templateId","variables","window","emailjs","send","res","console","log","catch","err","error","EventHome","sendEmail","showForm","showEvents","undefined","defaultPageSize","columns","Header","accessor","Cell","row","editEvent","original","deleteEvent","showPolls","polls","getBtnStyle","textAlign","padding","getMainStyle","handleClick","anchorEl","currentTarget","openMenu","handleClose","handleAddEventMenu","beginAddEvent","handleAddPoll","beginAddPoll","aria-controls","aria-haspopup","Menu","open","onClose","MenuItem","AddContact","useState","setOpen","userInput","setUserInput","currentUser","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","label","DialogActions","update","FieldValue","arrayUnion","Transition","forwardRef","ref","Slide","direction","ViewContacts","docReference","c","setListofContacts","listOfContacts","contact","key","TransitionComponent","keepMounted","aria-describedby","headerStyle","background","fontSize","fontFamily","fontStyle","signOutStyle","onClickSignOut","auth","signOut","removeItem","user","addContactsPrompt","component","Link","to","displayName","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","classes","other","Icon","SnackbarContent","clsx","action","IconButton","aria-label","close","AddFirstPage","onChangeTitle","n","onChangeDescription","des","onChangeDate","d","addFirst","saved_current_data","Container","maxWidth","EventManager","a","errorMessageOpen","editingEvent","newEvent","uuid","v4","completed","newEvents","indexOfEditEvent","finishAddEvent","successMessageOpen","homePage","currentEventTitle","currentEventDescription","goToNext","nextPage","handleErrorClose","reason","handleSuccessClose","setAdd","beginEditEvent","editedEvent","find","editedFirstPage","editedSecondPage","i","filter","setHomePage","pollPage","setPollPage","newPoll","newPolls","archivedEvents","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","logoStyle","logInStyle","top","position","uiConfig","signInFlow","signInOptions","provider","GoogleAuthProvider","PROVIDER_ID","authMethod","clientId","EmailAuthProvider","requireDisplayName","callbacks","signInSuccessWithAuthResult","Login","componentDidMount","onAuthStateChanged","isSignedIn","documentSnapshot","set","src","logo","alt","uiCallback","ui","disableAutoSignIn","firebaseAuth","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9430acbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.88ca5a89.png\";","import React from 'react';\r\nimport moment from 'moment';\r\nimport WeekCalendar from 'react-week-calendar';\r\n\r\nexport default class DoodleCalendar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastUid: 1,\r\n      selectedIntervals: [\r\n        // {\r\n        //   uid: 1,\r\n        //   start: moment({h: 6, m: 30}),\r\n        //   end: moment({h: 7, m: 59}),\r\n        //   value: \"CS150 exam\"\r\n        // },\r\n      ]\r\n    }\r\n  }\r\n\r\n  handleEventRemove = (event) => {\r\n    const {selectedIntervals} = this.state;\r\n    //console.log('Removing event');\r\n\r\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\r\n    if (index > -1) {\r\n      selectedIntervals.splice(index, 1);\r\n      this.setState({selectedIntervals});\r\n    }\r\n\r\n  }\r\n\r\n  handleEventUpdate = (event) => {\r\n    const {selectedIntervals} = this.state;\r\n    //console.log('Updating event');\r\n\r\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\r\n    if (index > -1) {\r\n      selectedIntervals[index] = event;\r\n      this.setState({selectedIntervals});\r\n    }\r\n  }\r\n\r\n  handleSelect = (newIntervals) => {\r\n    const {lastUid, selectedIntervals} = this.state;\r\n    const intervals = newIntervals.map( (interval, index) => {\r\n\r\n      return {\r\n        ...interval,\r\n        uid: lastUid + index\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      selectedIntervals: selectedIntervals.concat(intervals),\r\n      lastUid: lastUid + newIntervals.length\r\n    })\r\n\r\n    this.props.parentMethod(intervals);\r\n  }\r\n\r\n  render() {\r\n    return <WeekCalendar\r\n      startTime = {moment({h: 0, m: 0})}\r\n      endTime = {moment({h: 23, m: 50})}\r\n      numberOfDays= {7}\r\n      selectedIntervals = {this.state.selectedIntervals}\r\n      onIntervalSelect = {this.handleSelect}\r\n      onIntervalUpdate = {this.handleEventUpdate}\r\n      onIntervalRemove = {this.handleEventRemove}\r\n      />\r\n  }\r\n}","import React, { Component } from \"react\";\r\n//import { TextField } from '@material-ui/core';\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nimport DoodleCalendar from \"./DoodleCalendar\";\r\nimport \"react-week-calendar/dist/style.css\";\r\n\r\nexport class AddSecondPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: \"\",\r\n            date: \"\",\r\n            calendar: \"default\"\r\n        };\r\n    }\r\n    onSubmit = t => {\r\n        t.preventDefault();\r\n        this.props.addEvent(\r\n            this.props.title,\r\n            this.props.description,\r\n            this.state.date,\r\n            this.state.time\r\n        );\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        localStorage.setItem(\r\n            \"saved_current_event_time\",\r\n            JSON.stringify(this.state)\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        const saved_current_time = JSON.parse(\r\n            localStorage.getItem(\"saved_current_event_time\")\r\n        );\r\n        this.setState(saved_current_time);\r\n    }\r\n\r\n    // eric's stuff //\r\n    changeCalendar = calendar => {\r\n        this.setState({ calendar });\r\n    };\r\n\r\n    onEventSubmitted = eventData => {\r\n        // var i;\r\n        // for (i = 0; i < eventData.length; i++) {\r\n        //     let x = new Date(eventData[0].start.format(\"LLLL\"));\r\n        //     let y = new Date(eventData[0].end.format(\"LLLL\"));\r\n        //     let start =\r\n        //         x.getHours().toString() + \":\" + x.getMinutes().toString();\r\n        //     let end = y.getHours().toString() + \":\" + y.getMinutes().toString();\r\n        //     let together = start + \"-\" + end;\r\n        //     let date =\r\n        //         (x.getMonth() + 1).toString() + \"/\" + x.getDate().toString();\r\n        //     this.setState({ time: together, date: date });\r\n        //     // console.log(\r\n        //     //     \"Event created from \" +\r\n        //     //         eventData[i].start.format(\"LLLL\") +\r\n        //     //         \" to \" +\r\n        //     //         eventData[i].end.format(\"LLLL\") +\r\n        //     //         \"\\n\"\r\n        //     // );\r\n        // }\r\n\r\n        let x = new Date(eventData[0].start.format(\"LLLL\"));\r\n        let y = new Date(eventData[0].end.format(\"LLLL\"));\r\n        let start = x.getHours().toString() + \":\" + x.getMinutes().toString();\r\n        let end = y.getHours().toString() + \":\" + y.getMinutes().toString();\r\n        let together = start + \"-\" + end;\r\n        let date = (x.getMonth() + 1).toString() + \"/\" + x.getDate().toString();\r\n        this.setState({ time: together, date: date });\r\n\r\n        // this.props.date =\r\n        // this.state.time =\r\n\r\n        // https://momentjs.com/docs/#/parsing/string-format/ if you are looking for a different time format\r\n    };\r\n\r\n    // eric's stuff //\r\n\r\n    render() {\r\n        //eslint-disable-next-line\r\n        const { title, description } = this.props;\r\n\r\n        //eric's shit\r\n\r\n        //eslint-disable-next-line\r\n        const calendar = this.state.calendar;\r\n        let renderCalendar = null;\r\n        renderCalendar = (\r\n            <div>\r\n                <h3>Choose your time!</h3>\r\n                <DoodleCalendar parentMethod={e => this.onEventSubmitted(e)}>\r\n                    {this.props.children}\r\n                </DoodleCalendar>\r\n            </div>\r\n        );\r\n\r\n        //eric's shit\r\n\r\n        return (\r\n            <div>\r\n                {renderCalendar}\r\n\r\n                <form onSubmit={t => this.onSubmit(t)}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={this.props.goToPrevious}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <br />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={t => this.onSubmit(t)}\r\n                    >\r\n                        Submit Event\r\n                    </Button>\r\n                    <br />\r\n                    <Button\r\n                        className=\"userCancelButton\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        endIcon={<CancelIcon />}\r\n                        onClick={this.props.cancelEvent}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddSecondPage;\r\n/*  \r\n    Eric's Stuff that was added in:\r\n        renderCalendar\r\n        calendar\r\n        DoodleCalendar\r\n        onEventSubmitted\r\n        changeCalendar\r\n        calendar in state\r\n        DoodleCalendar.js\r\n\r\n\r\n\r\n*/\r\n","import React, { Component } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DayPicker, { DateUtils } from \"react-day-picker\";\r\nimport \"react-day-picker/lib/style.css\";\r\n\r\nexport class Poll extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pollTitle: \"\",\r\n            //selectedDays: undefined\r\n            selectedDays: []\r\n        };\r\n    }\r\n\r\n    onChangePollTitle = p => this.setState({ pollTitle: p.target.value });\r\n\r\n    handleDayClick = (day, { selected }) => {\r\n        const { selectedDays } = this.state;\r\n        if (selected) {\r\n            const selectedIndex = selectedDays.findIndex(selectedDay =>\r\n                DateUtils.isSameDay(selectedDay, day)\r\n            );\r\n            selectedDays.splice(selectedIndex, 1);\r\n        } else {\r\n            selectedDays.push(day);\r\n        }\r\n        this.setState({ selectedDays });\r\n    };\r\n\r\n    onSubmit = () => {\r\n        this.props.addPoll(this.state.pollTitle, this.state.selectedDays);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Poll Name\"\r\n                        fullWidth\r\n                        value={this.state.pollTitle}\r\n                        margin=\"normal\"\r\n                        onChange={p => this.onChangePollTitle(p)}\r\n                    />\r\n\r\n                    <h1>Please Select Days</h1>\r\n\r\n                    <DayPicker\r\n                        onDayClick={(day, selected) =>\r\n                            this.handleDayClick(day, selected)\r\n                        }\r\n                        selectedDays={this.state.selectedDays}\r\n                    />\r\n\r\n                    <br />\r\n\r\n                    <Button\r\n                        className=\"userSubmitButton\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        onClick={() => this.onSubmit()}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n\r\n                    <br />\r\n\r\n                    <Button\r\n                        className=\"userCancelButton\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        endIcon={<CancelIcon />}\r\n                        onClick={this.props.cancelPoll}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Poll;\r\n","import firebase from \"firebase\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAmcdm-nCXD4ahr4EwKddfHQ_vpqkMEPWA\",\r\n    authDomain: \"cs180-schedulingapp.firebaseapp.com\",\r\n    databaseURL: \"https://cs180-schedulingapp.firebaseio.com\",\r\n    projectId: \"cs180-schedulingapp\",\r\n    storageBucket: \"cs180-schedulingapp.appspot.com\",\r\n    messagingSenderId: \"350264880268\",\r\n    appId: \"1:350264880268:web:4fb4718431afc39b6e9fa9\",\r\n    measurementId: \"G-DBB71H8E8J\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nexport {firebase, db};","import React from 'react';\r\nimport { db } from './firebase'\r\nexport default class Form extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { contentList: [], emailList: [], };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit =\r\n\t\t\tthis.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdb\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n\t\t\t.get()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (data.exists) {\r\n\t\t\t\t\tthis.setState({ emailList: data.data().contacts, contentList: data.data().events })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"test-mailing\">\r\n\t\t\t\t<h1>Let's see if it works</h1>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"test-mailing\"\r\n\t\t\t\t\t\tname=\"test-mailing\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder=\"Send event\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.feedback}\r\n\t\t\t\t\t\tstyle={{ width: '100%', height: '150px' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tthis.setState({ feedback: event.target.value })\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tconst templateId = 'yes';\r\n\r\n\t\tthis.sendFeedback(templateId, { message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email })\r\n\t\tthis.props.handleDisplay();\r\n\t}\r\n\r\n\tsendFeedback(templateId, variables) {\r\n\t\twindow.emailjs.send(\"gmail\", templateId, { \"send_to\": this.state.emailList, \"content\": this.state.contentList })   // insert custom emails for send_to\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log('Email successfully sent!');\r\n\t\t\t\tconsole.log(variables);\r\n\t\t\t})\r\n\t\t\t// Handle errors here however you like, or use a React error boundary\r\n\t\t\t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\r\n\t}\r\n}","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n//import EventItem from \"./EventItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport Form from './Form'\r\n\r\nexport class EventHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            openMenu: false,\r\n            showForm: false,\r\n        };\r\n    }\r\n\r\n    sendEmail = () => {\r\n        this.setState({ showForm: true })\r\n    }\r\n\r\n    showEvents = () => {\r\n        if (this.props.events === null || this.props.events === undefined) {\r\n            return <h2>No events</h2>;\r\n        }\r\n        else if (this.props.events.length === 0) {\r\n            return <h2>No events</h2>;\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <ReactTable\r\n                        defaultPageSize={5}\r\n                        data={this.props.events}\r\n                        columns={[\r\n                            {\r\n                                Header: \"Events\",\r\n                                columns: [\r\n                                    {\r\n                                        Header: \"Title\",\r\n                                        accessor: \"title\"\r\n                                    },\r\n                                    {\r\n                                        Header: \"Description\",\r\n                                        accessor: \"description\"\r\n                                    },\r\n                                    {\r\n                                        Header: \"Date\",\r\n                                        accessor: \"date\"\r\n                                    },\r\n                                    {\r\n                                        Header: \"Time\",\r\n                                        accessor: \"time\"\r\n                                    },\r\n                                ]\r\n                            },\r\n                            {\r\n                                Header: \"Actions\",\r\n                                columns: [\r\n                                    {\r\n                                        Header: \"Send\",\r\n                                        Cell: row => (\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                onClick={() =>\r\n                                                    this.sendEmail()\r\n                                                }\r\n                                            >\r\n                                                Send\r\n                                            </Button>\r\n                                        )\r\n                                    },\r\n                                    {\r\n                                        Header: \"Edit\",\r\n                                        Cell: row => (\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                onClick={() =>\r\n                                                    this.props.editEvent(\r\n                                                        row.original.id\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                Edit\r\n                                            </Button>\r\n                                        )\r\n                                    },\r\n                                    {\r\n                                        Header: \"Delete\",\r\n                                        Cell: row => (\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                onClick={() =>\r\n                                                    this.props.deleteEvent(\r\n                                                        row.original.id\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        )\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    showPolls = () => {\r\n        if (this.props.polls === null || this.props.polls.length === 0) {\r\n            return <h2>No Polls</h2>;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h1>POLLS:</h1>\r\n                    {/* {this.props.polls.map(x => (\r\n                            <li>\r\n                                {x.title} - {x.selectedDays}\r\n                            </li>\r\n                        ))} */}\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    getBtnStyle = () => {\r\n        return {\r\n            textAlign: \"right\",\r\n            padding: \"10px\"\r\n        };\r\n    };\r\n\r\n    getMainStyle = () => {\r\n        return {\r\n            textAlign: \"center\",\r\n            padding: \"5px\",\r\n        }\r\n    }\r\n\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, openMenu: !this.state.openMenu });\r\n    };\r\n\r\n    handleAddEventMenu = () => {\r\n        this.handleClose();\r\n        this.props.beginAddEvent();\r\n    };\r\n\r\n    handleAddPoll = () => {\r\n        this.handleClose();\r\n        this.props.beginAddPoll();\r\n    };\r\n\r\n    handleDisplay = () => {\r\n        this.setState({ showForm: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.showForm && (\r\n                    <div><Form handleDisplay={this.handleDisplay}></Form></div>\r\n                )}\r\n                <div style={this.getBtnStyle()}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={e => this.handleClick(e)}\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.openMenu}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MenuItem onClick={this.handleAddEventMenu}>\r\n                            Event\r\n                        </MenuItem>\r\n                        <MenuItem onClick={this.handleAddPoll}>Poll</MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                <div style={this.getMainStyle()}>\r\n                    {this.showEvents()}\r\n                    <br />\r\n                    {this.showPolls()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventHome;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\n//database\r\nimport { db, firebase } from \"./firebase\";\r\n\r\nexport default function AddContact() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userInput, setUserInput] = React.useState(\"\");\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleAddContact = () => {\r\n        // console.log(userInput);\r\n        // console.log(contacts);\r\n        // console.log(currentUser);\r\n        db.collection(\"users\").doc(currentUser).update({\r\n            contacts: firebase.firestore.FieldValue.arrayUnion(userInput)\r\n        });\r\n        handleClose();\r\n    };\r\n    const handleInput = t => {\r\n        setUserInput(t.target.value);\r\n    };\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    Add Contact\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Adding Contact</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To add a contact, please enter their email address.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAddContact} color=\"primary\">\r\n                        Enter\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n//import DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ViewContacts() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n\r\n    let docReference = db.collection(\"users\").doc(currentUser);\r\n    const [c, setListofContacts] = React.useState([]);\r\n\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        docReference.get().then(doc => {\r\n            if (doc.exists) {\r\n                setListofContacts(doc.data().contacts);\r\n            }\r\n        });\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const listOfContacts = c.map((contact, index) => (\r\n        <li key={index}>{contact}</li>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    View Contacts\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"List of your Contacts\"}</DialogTitle>\r\n                <DialogContent>\r\n                    {listOfContacts}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddContact from './AddContact'\r\nimport ViewContacts from './ViewContacts'\r\nimport firebase from \"firebase\";\r\n//import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { db } from \"./firebase\";\r\n\r\nconst headerStyle = {\r\n    background: \"#D0E6FF\",\r\n    color: \"#5a769e\",\r\n    textAlign: \"center\",\r\n    padding: \"3px\",\r\n    fontSize: \"24px\",\r\n    fontFamily: \"Courier New\",\r\n    fontStyle: \"italic\"\r\n};\r\n\r\nconst signOutStyle = {\r\n    textAlign: \"right\"\r\n};\r\n\r\n\r\nexport class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            addContactsPrompt: false,\r\n        };\r\n    }\r\n\r\n    //localStorage is to access database document\r\n    componentDidMount() {\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .get()\r\n            .then(data => {\r\n                if (data.exists) {\r\n                    //console.log(\"glad toot\");\r\n                    this.setState({ user: data.data()});\r\n                } else {\r\n                    //console.log(\"Sad toot\");\r\n                }\r\n            });\r\n    }\r\n\r\n    onClickSignOut = () => {\r\n        firebase.auth().signOut();\r\n        localStorage.removeItem(\"currentUser\");\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header style={headerStyle}>\r\n                    <h1>Schedule It</h1>\r\n                    <AddContact/>\r\n                    <ViewContacts/>\r\n\r\n                    {this.state.user && (\r\n                        <div>\r\n                            <div style={signOutStyle}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    onClick={() => this.onClickSignOut()}\r\n                                    component={Link}\r\n                                    to=\"/\"\r\n                                >\r\n                                    {this.state.user.email}\r\n                                </Button>\r\n                            </div>\r\n                            <div>Welcome {this.state.user.displayName}</div>\r\n                        </div>\r\n                    )}\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MySnackbarContent);","import React, { Component } from 'react'\r\nimport { TextField } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\nexport class AddFirstPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            date: '',\r\n            description: '',\r\n        }\r\n    }\r\n    onChangeTitle = (n) => this.setState({ title: n.target.value });\r\n    onChangeDescription = (des) =>\r\n        this.setState({ description: des.target.value });\r\n\r\n    onChangeDate = (d) => this.setState({ date: d.target.value });\r\n\r\n    onSubmit = (n, des, d) => {\r\n        n.preventDefault();\r\n        this.props.addFirst(\r\n            this.state.title, this.state.date, this.state.description\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        localStorage.setItem('saved_current_event', JSON.stringify(this.state))\r\n    }\r\n    componentDidMount() {\r\n        const saved_current_data = JSON.parse(localStorage.getItem('saved_current_event'));\r\n        this.setState(saved_current_data);\r\n    }\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"sm\">\r\n                <form onSubmit={(n, des, d) => this.onSubmit(n, des, d)}>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Event Name\"\r\n                        fullWidth\r\n                        value={this.state.title}\r\n                        margin=\"normal\"\r\n                        onChange={(n) => this.onChangeTitle(n)}\r\n                    />\r\n                    <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Event Description ... Optional\"\r\n                        fullWidth\r\n                        value={this.state.description}\r\n                        margin=\"normal\"\r\n                        onChange={(des) => this.onChangeDescription(des)}\r\n\r\n                    />\r\n                    {/* <TextField\r\n                        variant=\"outlined\"\r\n                        id=\"date\"\r\n                        type=\"date\"\r\n                        value={this.state.date}\r\n                        onChange={(d) => this.onChangeDate(d)}\r\n                        margin=\"normal\"\r\n                    /> */}\r\n                    <br />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className=\"userContinueButton\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        endIcon={<ArrowForwardIcon />}\r\n                        onClick={(n, des, d) => this.onSubmit(n, des, d)}\r\n                    >\r\n                        Continue\r\n                    </Button>\r\n                    <br />\r\n                    <Button\r\n                        className=\"userCancelButton\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        endIcon={<CancelIcon />}\r\n                        onClick={this.props.cancelEvent}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFirstPage\r\n","import React, { Component } from \"react\";\r\nimport AddSecondPage from \"./AddSecondPage\";\r\nimport Poll from \"./Poll\";\r\nimport EventHome from \"./EventHome\";\r\nimport Header from \"./header\";\r\nimport uuid from \"uuid\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\nimport AddFirstPage from \"./AddFirstPage\";\r\nimport { db, firebase } from \"./firebase\";\r\n\r\nlet doc = (JSON.parse(localStorage.getItem(\"currentUser\"))) ? db\r\n    .collection(\"users\")\r\n    .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n    :\r\n    undefined;\r\n\r\nexport class EventManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [],\r\n\r\n            polls: JSON.parse(localStorage.getItem(\"polls\")),\r\n\r\n            currentEventTitle: \"\",\r\n            currentEventDescription: \"\",\r\n\r\n            errorMessageOpen: false,\r\n            message: \"\",\r\n            successMessageOpen: false,\r\n\r\n            nextPage: false,\r\n            homePage: true,\r\n            pollPage: false,\r\n\r\n            editingEvent: false,\r\n            indexOfEditEvent: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        doc = db\r\n            .collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n\r\n        doc.get().then(data => {\r\n            if (data.exists) {\r\n                this.setState({ events: data.data().events });\r\n            } else {\r\n                //console.log(\"Sad toot\");\r\n            }\r\n        });\r\n    }\r\n\r\n    addEvent = async (title, description, date, time) => {\r\n        if (time === \"\") {\r\n            this.setState({ errorMessageOpen: true, message: \"Missing Time!\" });\r\n        } else if (time !== \"\" && !this.state.editingEvent) {\r\n            const newEvent = {\r\n                id: uuid.v4(),\r\n                title: title,\r\n                completed: false,\r\n                description: description,\r\n                date: date,\r\n                time: time\r\n            };\r\n            db.collection(\"users\")\r\n                .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n                .update({\r\n                    events: firebase.firestore.FieldValue.arrayUnion(newEvent)\r\n                });\r\n            this.setState({ successMessageOpen: true });\r\n            this.finishAddEvent();\r\n        } else if (time !== \"\" && this.state.editingEvent) {\r\n            const newEvent = {\r\n                id: uuid.v4(),\r\n                title: title,\r\n                completed: false,\r\n                description: description,\r\n                date: date,\r\n                time: time\r\n            };\r\n            const newEvents = this.state.events;\r\n            newEvents.splice(this.state.indexOfEditEvent, 1, newEvent);\r\n\r\n            db.collection(\"users\")\r\n                .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n                .update({\r\n                    events: newEvents\r\n                });\r\n            this.setState({ editingEvent: false })\r\n            this.finishAddEvent();\r\n        }\r\n    };\r\n\r\n    finishAddEvent = () => {\r\n        //change this to localstorage.clear later\r\n        doc.get().then(data => {\r\n            if (data.exists) {\r\n                this.setState({ events: data.data().events });\r\n            } else {\r\n                //console.log(\"Sad toot\");\r\n            }\r\n        });\r\n        localStorage.removeItem(\"saved_current_event\");\r\n        localStorage.removeItem(\"saved_current_event_time\");\r\n        this.setState({\r\n            homePage: !this.state.homePage,\r\n        });\r\n    };\r\n\r\n    addFirst = async (t, d, des) => {\r\n        if (t !== \"\") {\r\n            this.setState({ currentEventTitle: t });\r\n            this.setState({ currentEventDescription: des });\r\n            this.goToNext();\r\n        } else if (t === \"\") {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Missing title!\"\r\n            });\r\n        }\r\n    };\r\n\r\n    goToPrevious = () => {\r\n        this.setState({ nextPage: !this.state.nextPage });\r\n    };\r\n    goToNext = () => {\r\n        this.setState({ nextPage: !this.state.nextPage });\r\n    };\r\n\r\n    handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ errorMessageOpen: false });\r\n    };\r\n    handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ successMessageOpen: false });\r\n    };\r\n\r\n    beginAddEvent = () => {\r\n        //have to account for them refreshing\r\n        localStorage.removeItem(\"saved_current_event\");\r\n        localStorage.removeItem(\"saved_current_event_time\");\r\n        this.setAdd();\r\n    };\r\n\r\n    beginEditEvent = () => {\r\n        this.setAdd();\r\n    };\r\n\r\n    editEvent = (id) => {\r\n        const editedEvent = this.state.events.find(event => {\r\n            return event.id === id;\r\n        });\r\n        console.log(editedEvent)\r\n        const editedFirstPage = {\r\n            title: editedEvent.title,\r\n            description: editedEvent.description\r\n        };\r\n        const editedSecondPage = {\r\n            date: editedEvent.date,\r\n            time: editedEvent.time\r\n        };\r\n        for (let i = 0; i < this.state.events.length; i++) {\r\n            if (this.state.events[i].id === editedEvent.id) {\r\n                this.setState({\r\n                    indexOfEditEvent: i,\r\n                    editingEvent: true,\r\n                });\r\n                break;\r\n            }\r\n        }\r\n        localStorage.setItem(\r\n            \"saved_current_event\",\r\n            JSON.stringify(editedFirstPage)\r\n        );\r\n        localStorage.setItem(\r\n            \"saved_current_event_time\",\r\n            JSON.stringify(editedSecondPage)\r\n        );\r\n        this.beginEditEvent();\r\n    };\r\n\r\n    deleteEvent = id => {\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .update({\r\n                events: [...this.state.events.filter(event => event.id !== id)]\r\n            });\r\n\r\n        doc.get().then(data => {\r\n            if (data.exists) {\r\n                this.setState({ events: data.data().events });\r\n            } else {\r\n                //console.log(\"Sad toot\");\r\n            }\r\n        });\r\n    };\r\n\r\n    cancelEvent = () => {\r\n        localStorage.removeItem(\"saved_current_event\");\r\n        localStorage.removeItem(\"saved_current_event_time\");\r\n        this.setHomePage();\r\n    };\r\n\r\n    setAdd = () => {\r\n        this.setState({ nextPage: false, homePage: false, pollPage: false });\r\n    };\r\n\r\n    setHomePage = () => {\r\n        this.setState({ homePage: true, nextPage: false, pollPage: false });\r\n    };\r\n\r\n    setPollPage = () => {\r\n        this.setState({ homePage: false, nextPage: false, pollPage: true });\r\n    };\r\n\r\n    addPoll = (pollTitle, selectedDays) => {\r\n        if (pollTitle === \"\" && selectedDays.length === 0) {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Missing Title and Dates!\"\r\n            });\r\n        } else if (pollTitle === \"\") {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Missing Title!\"\r\n            });\r\n        } else if (selectedDays.length === 0) {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Missing Dates!\"\r\n            });\r\n        } else {\r\n            const newPoll = {\r\n                title: pollTitle,\r\n                selectedDays: selectedDays\r\n            };\r\n            if (this.state.polls === null) {\r\n                const newPolls = [];\r\n                newPolls.push(newPoll);\r\n                this.setState({ polls: newPolls });\r\n            } else {\r\n                this.setState({ polls: [...this.state.polls, newPoll] });\r\n            }\r\n            this.setHomePage();\r\n        }\r\n    };\r\n    cancelPoll = () => {\r\n        this.setHomePage();\r\n    };\r\n\r\n    beginAddPoll = () => {\r\n        this.setPollPage();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {this.state.homePage && (\r\n                    <EventHome\r\n                        events={this.state.events}\r\n                        polls={this.state.polls}\r\n                        archivedEvents={this.state.archivedEvents}\r\n                        beginAddEvent={this.beginAddEvent}\r\n                        editEvent={this.editEvent}\r\n                        deleteEvent={this.deleteEvent}\r\n                        beginAddPoll={this.beginAddPoll}\r\n                    />\r\n                )}\r\n                {!this.state.nextPage &&\r\n                    !this.state.homePage &&\r\n                    !this.state.pollPage && (\r\n                        <AddFirstPage\r\n                            addFirst={this.addFirst}\r\n                            goToNext={this.goToNext}\r\n                            cancelEvent={this.cancelEvent}\r\n                        />\r\n                    )}\r\n                {this.state.nextPage &&\r\n                    !this.state.homePage &&\r\n                    !this.state.pollPage && (\r\n                        <AddSecondPage\r\n                            goToPrevious={this.goToPrevious}\r\n                            nextPage={this.state.nextPage}\r\n                            addEvent={this.addEvent}\r\n                            title={this.state.currentEventTitle}\r\n                            description={this.state.currentEventDescription}\r\n                            cancelEvent={this.cancelEvent}\r\n                        />\r\n                    )}\r\n                {this.state.pollPage &&\r\n                    !this.state.nextPage &&\r\n                    !this.state.homePage && (\r\n                        <Poll\r\n                            cancelPoll={this.cancelPoll}\r\n                            addPoll={this.addPoll}\r\n                        />\r\n                    )}\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.errorMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleErrorClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleErrorClose}\r\n                        variant=\"error\"\r\n                        message={this.state.message}\r\n                    />\r\n                </Snackbar>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.successMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSuccessClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleSuccessClose}\r\n                        variant=\"success\"\r\n                        message={\"New event has been created\"}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventManager;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.png\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n// import firebase from \"firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { firebase, db } from \"./firebase\";\r\n\r\nvar CLIENT_ID = \"YOUR_OAUTH_CLIENT_ID\";\r\nconst logoStyle = {\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst logInStyle = {\r\n    textAlign: \"center\",\r\n    top: \"75%\",\r\n    fontSize: \"40px\",\r\n    position: \"relative\"\r\n};\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n        {\r\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            authMethod: \"https://accounts.google.com\",\r\n            // Required to enable ID token credentials for this provider.\r\n            clientId: CLIENT_ID\r\n        },\r\n        {\r\n            provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            requireDisplayName: true\r\n        }\r\n    ],\r\n    callbacks: {\r\n        // Avoid redirects after sign-in.\r\n        signInSuccessWithAuthResult: () => false\r\n    }\r\n};\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSignedIn: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({\r\n                    isSignedIn: !!user\r\n                });\r\n                //lets contacts data persist\r\n                let docReference = db.collection(\"users\").doc(user.email);\r\n                docReference.get().then(documentSnapshot => {\r\n                    if (!documentSnapshot.exists) {\r\n                        docReference.set({\r\n                            displayName: user.displayName,\r\n                            email: user.email,\r\n                            contacts: [],\r\n                            events: [],\r\n                            polls: [],\r\n                        });\r\n                    }\r\n                });\r\n\r\n                //keep this so header can load the page\r\n                localStorage.setItem(\"currentUser\", JSON.stringify(user.email));\r\n                //console.log(\"toot\");\r\n            }\r\n        });\r\n    };\r\n\r\n    onClick = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={logoStyle}>\r\n                    <header>\r\n                        <img src={logo} alt=\"Schedule It\" />\r\n                    </header>\r\n                </div>\r\n                {this.state.isSignedIn ? (\r\n                    <div style={logInStyle}>\r\n                        <h3>\r\n                            Signed in as{\" \"}\r\n                            {firebase.auth().currentUser.displayName}.{\" \"}\r\n                        </h3>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            component={Link}\r\n                            to=\"/home\"\r\n                        >\r\n                            Go to Home Page\r\n                        </Button>\r\n                        <br />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.onClick()}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </div>\r\n                ) : (\r\n                    <StyledFirebaseAuth\r\n                        uiCallback={ui => ui.disableAutoSignIn()}\r\n                        uiConfig={uiConfig}\r\n                        firebaseAuth={firebase.auth()}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport EventManager from \"./components/EventManager\";\r\nimport Login from './components/Login'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Login/>\r\n                </Route>\r\n                <Route exact path=\"/home\">\r\n                    <EventManager />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}