{"version":3,"sources":["components/logo.png","components/Snackbar.js","components/DoodleCalendar.js","components/AddSecondPage.js","components/firebase.js","components/InviteContacts.js","components/AddThirdPage.js","components/AddEvent.js","components/Form.js","components/Cards.js","components/EventHome.js","components/AddContact.js","components/ViewContacts.js","components/header.js","components/EventManager.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","withStyles","theme","backgroundColor","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","props","classes","className","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","color","close","onClick","DoodleCalendar","handleEventRemove","event","selectedIntervals","state","index","findIndex","interval","uid","splice","setState","handleEventUpdate","handleSelect","newIntervals","lastUid","intervals","map","concat","length","parentMethod","startTime","moment","h","m","endTime","numberOfDays","this","onIntervalSelect","onIntervalUpdate","onIntervalRemove","React","Component","AddSecondPage","changeCalendar","calendar","onEventSubmitted","eventData","x","Date","start","format","y","end","together","getHours","toString","getMinutes","date","getMonth","getDate","time","localStorage","setItem","JSON","stringify","renderCalendar","e","children","renderButtons","Button","type","size","goToFirstPage","goToThirdPage","endIcon","cancelEvent","parse","getItem","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","InviteContacts","useState","personEmail","setPersonEmail","emails","setEmails","useEffect","console","log","collection","doc","get","then","exists","temp","data","contacts","c","email","setSharedEvent","FormControl","InputLabel","Select","labelId","multiple","value","onChange","target","input","Input","renderValue","selected","join","name","MenuItem","Checkbox","checked","indexOf","ListItemText","AddThirdPage","handleCheckbox","renderOptions","FormGroup","row","FormControlLabel","control","label","renderContactDropdown","l","list","invite_list","goToSecondPage","submitEvent","AddEvent","handleErrorClose","reason","errorMessageOpen","handleSuccessClose","successMessageOpen","handleTitle","t","title","handleDescription","des","description","onSubmitFirstPage","preventDefault","firstPage","secondPage","thirdPage","invitees","idOfEditEvent","editingEvent","uuid","v4","update","set","owners","accepted_invitees","setHomePage","viewForm","Container","maxWidth","onSubmit","TextField","placeholder","fullWidth","margin","style","textAlign","shared","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","Form","contentList","emailList","handleChange","bind","handleSubmit","events","required","feedback","width","height","sendFeedback","message_html","from_name","reply_to","handleDisplay","templateId","variables","window","emailjs","send","res","catch","err","Cards","expanded","isShared","shareStatus","deleteButton","deleteEvent","Card","CardContent","Typography","gutterBottom","component","CardActions","editEvent","aria-expanded","Collapse","in","timeout","unmountOnExit","EventHome","sendEmail","showForm","switchEventView","showShared","showSharedEvents","showEvents","undefined","sharedEvents","getBtnStyle","padding","getMainStyle","handleClick","anchorEl","currentTarget","openMenu","handleClose","handleAddEventMenu","beginAddEvent","delete","tempObject","currentUser","where","forEach","push","aria-controls","aria-haspopup","Menu","AddContact","setOpen","userInput","setUserInput","errorOpen","setErrorOpen","successOpen","setSuccessOpen","setMessage","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","DialogActions","docSnapshot","FieldValue","arrayUnion","displayName","Transition","forwardRef","ref","Slide","direction","ViewContacts","setListofContacts","listOfContacts","contact","TransitionComponent","keepMounted","headerStyle","background","fontFamily","fontStyle","signOutStyle","Header","onClickSignOut","auth","signOut","clear","user","addContactsPrompt","Link","to","EventManager","removeItem","setAdd","viewShared","homePage","logoStyle","logInStyle","top","position","uiConfig","signInFlow","signInOptions","provider","GoogleAuthProvider","PROVIDER_ID","authMethod","clientId","EmailAuthProvider","requireDisplayName","callbacks","signInSuccessWithAuthResult","Login","componentDidMount","onAuthStateChanged","isSignedIn","docReference","documentSnapshot","polls","pictureURL","photoURL","picURL","src","logo","alt","vertical-align","border-radius","uiCallback","ui","disableAutoSignIn","firebaseAuth","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4686e2aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.88ca5a89.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles = theme => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MySnackbarContent);","import React from 'react';\r\nimport moment from 'moment';\r\nimport WeekCalendar from 'react-week-calendar';\r\n\r\n// garbage text for testing pull requests to dev\r\n\r\nexport default class DoodleCalendar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastUid: 1,\r\n      selectedIntervals: [\r\n        // {\r\n        //   uid: 1,\r\n        //   start: moment({h: 6, m: 30}),\r\n        //   end: moment({h: 7, m: 59}),\r\n        //   value: \"CS150 exam\"\r\n        // },\r\n      ]\r\n    }\r\n  }\r\n\r\n  handleEventRemove = (event) => {\r\n    const {selectedIntervals} = this.state;\r\n    //console.log('Removing event');\r\n\r\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\r\n    if (index > -1) {\r\n      selectedIntervals.splice(index, 1);\r\n      this.setState({selectedIntervals});\r\n    }\r\n\r\n  }\r\n\r\n  handleEventUpdate = (event) => {\r\n    const {selectedIntervals} = this.state;\r\n    //console.log('Updating event');\r\n\r\n    const index = selectedIntervals.findIndex((interval) => interval.uid === event.uid);\r\n    if (index > -1) {\r\n      selectedIntervals[index] = event;\r\n      this.setState({selectedIntervals});\r\n    }\r\n  }\r\n\r\n  handleSelect = (newIntervals) => {\r\n    const {lastUid, selectedIntervals} = this.state;\r\n    const intervals = newIntervals.map( (interval, index) => {\r\n\r\n      return {\r\n        ...interval,\r\n        uid: lastUid + index\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      selectedIntervals: selectedIntervals.concat(intervals),\r\n      lastUid: lastUid + newIntervals.length\r\n    })\r\n\r\n    this.props.parentMethod(intervals);\r\n  }\r\n\r\n  render() {\r\n    return <WeekCalendar\r\n      startTime = {moment({h: 0, m: 0})}\r\n      endTime = {moment({h: 23, m: 50})}\r\n      numberOfDays= {7}\r\n      selectedIntervals = {this.state.selectedIntervals}\r\n      onIntervalSelect = {this.handleSelect}\r\n      onIntervalUpdate = {this.handleEventUpdate}\r\n      onIntervalRemove = {this.handleEventRemove}\r\n      />\r\n  }\r\n}","import React, { Component } from \"react\";\r\n//import { TextField } from '@material-ui/core';\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport DoodleCalendar from \"./DoodleCalendar\";\r\nimport \"react-week-calendar/dist/style.css\";\r\n\r\nexport class AddSecondPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: JSON.parse(localStorage.getItem(\"saved_time\")),\r\n            date: JSON.parse(localStorage.getItem(\"saved_date\")),\r\n            calendar: \"default\"\r\n        };\r\n    }\r\n\r\n    // eric's stuff //\r\n    changeCalendar = calendar => {\r\n        this.setState({ calendar });\r\n    };\r\n\r\n    onEventSubmitted = eventData => {\r\n        // var i;\r\n        // for (i = 0; i < eventData.length; i++) {\r\n        //     let x = new Date(eventData[0].start.format(\"LLLL\"));\r\n        //     let y = new Date(eventData[0].end.format(\"LLLL\"));\r\n        //     let start =\r\n        //         x.getHours().toString() + \":\" + x.getMinutes().toString();\r\n        //     let end = y.getHours().toString() + \":\" + y.getMinutes().toString();\r\n        //     let together = start + \"-\" + end;\r\n        //     let date =\r\n        //         (x.getMonth() + 1).toString() + \"/\" + x.getDate().toString();\r\n        //     this.setState({ time: together, date: date });\r\n        //     // console.log(\r\n        //     //     \"Event created from \" +\r\n        //     //         eventData[i].start.format(\"LLLL\") +\r\n        //     //         \" to \" +\r\n        //     //         eventData[i].end.format(\"LLLL\") +\r\n        //     //         \"\\n\"\r\n        //     // );\r\n        // }\r\n\r\n        //right now it should only take in one date & one range of time\r\n        let x = new Date(eventData[0].start.format(\"LLLL\"));\r\n        let y = new Date(eventData[0].end.format(\"LLLL\"));\r\n        let start = x.getHours().toString() + \":\" + x.getMinutes().toString();\r\n        let end = y.getHours().toString() + \":\" + y.getMinutes().toString();\r\n        let together = start + \"-\" + end;\r\n        let date = (x.getMonth() + 1).toString() + \"/\" + x.getDate().toString();\r\n        this.setState({ time: together, date: date });\r\n        localStorage.setItem(\"saved_date\", JSON.stringify(date));\r\n        localStorage.setItem(\"saved_time\", JSON.stringify(together));\r\n\r\n        // https://momentjs.com/docs/#/parsing/string-format/ if you are looking for a different time format\r\n    };\r\n\r\n    // eric's stuff //\r\n\r\n    render() {\r\n        //eric's shit\r\n\r\n        //eslint-disable-next-line\r\n        const calendar = this.state.calendar;\r\n        //let renderCalendar = null;\r\n\r\n        return (\r\n            <div>\r\n                {this.renderCalendar()}\r\n                {this.renderButtons()}\r\n            </div>\r\n        );\r\n    }\r\n    renderCalendar = () => {\r\n        return (\r\n            <div>\r\n                <h3>Choose your time!</h3>\r\n                <DoodleCalendar parentMethod={e => this.onEventSubmitted(e)}>\r\n                    {this.props.children}\r\n                </DoodleCalendar>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderButtons = () => {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={this.props.goToFirstPage}\r\n                >\r\n                    Back\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={e =>\r\n                        this.props.goToThirdPage(\r\n                            this.state.date,\r\n                            this.state.time,\r\n                            e\r\n                        )\r\n                    }\r\n                >\r\n                    Next\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"userCancelButton\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    endIcon={<CancelIcon />}\r\n                    onClick={this.props.cancelEvent}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AddSecondPage;\r\n/*  \r\n    Eric's Stuff that was added in:\r\n        renderCalendar\r\n        calendar\r\n        DoodleCalendar\r\n        onEventSubmitted\r\n        changeCalendar\r\n        calendar in state\r\n        DoodleCalendar.js\r\n\r\n\r\n\r\n*/\r\n","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAmcdm-nCXD4ahr4EwKddfHQ_vpqkMEPWA\",\r\n    authDomain: \"cs180-schedulingapp.firebaseapp.com\",\r\n    databaseURL: \"https://cs180-schedulingapp.firebaseio.com\",\r\n    projectId: \"cs180-schedulingapp\",\r\n    storageBucket: \"cs180-schedulingapp.appspot.com\",\r\n    messagingSenderId: \"350264880268\",\r\n    appId: \"1:350264880268:web:4fb4718431afc39b6e9fa9\",\r\n    measurementId: \"G-DBB71H8E8J\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nexport {firebase, db};\r\nexport const storage = firebase.storage();","/* eslint-disable no-unused-expressions */\r\nimport React, { useEffect } from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { db } from \"./firebase\";\r\n\r\nexport default function InviteContacts(props) {\r\n    const [personEmail, setPersonEmail] = React.useState([]);\r\n\r\n    const handleChange = event => {\r\n        setPersonEmail(event.target.value);\r\n        console.log(event.target.value);\r\n    };\r\n\r\n    const [emails, setEmails] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"1\")\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    let temp = doc.data().contacts.map(c => {\r\n                        return c.email;\r\n                    });\r\n                    setEmails(temp);\r\n                }\r\n            });\r\n\r\n    },[]);\r\n\r\n     //if add props to dependencies, infinite useEffect, dont do it\r\n    useEffect(() => {\r\n        console.log(\"2\")\r\n        props.setSharedEvent(personEmail);\r\n        // eslint-disable-next-line\r\n    },[personEmail]);\r\n\r\n    return (\r\n        <div>\r\n            <FormControl>\r\n                <InputLabel id=\"demo-mutiple-checkbox-label\">Select Contacts to Invite</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-checkbox-label\"\r\n                    id=\"demo-mutiple-checkbox\"\r\n                    multiple\r\n                    value={personEmail}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                    renderValue={selected => selected.join(\", \")}\r\n                >\r\n                    {emails.map(name => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox\r\n                                checked={personEmail.indexOf(name) > -1}\r\n                            />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InviteContacts from \"./InviteContacts\";\r\n\r\nexport class AddThirdPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: false,\r\n            invite_list: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderOptions()}\r\n                <br />\r\n                {this.renderButtons()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //functions\r\n\r\n    /**\r\n     * toggles check of checkbox\r\n     */\r\n    handleCheckbox = () => {\r\n        this.setState({ checked: !this.state.checked });\r\n    };\r\n\r\n    /**\r\n     * Rendering invite options\r\n     */\r\n    renderOptions = () => {\r\n        return (\r\n            <div>\r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={this.state.checked}\r\n                                value={this.state.checked}\r\n                                onChange={() => this.handleCheckbox()}\r\n                            />\r\n                        }\r\n                        label=\"Make this event shareable\"\r\n                    />\r\n                </FormGroup>\r\n                {this.renderContactDropdown()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderContactDropdown = () => {\r\n        if (this.state.checked) {\r\n            return (\r\n                <InviteContacts setSharedEvent={l => this.setSharedEvent(l)} />\r\n            );\r\n        }\r\n    };\r\n\r\n    setSharedEvent = list => {\r\n        this.setState({ invite_list: list });\r\n    };\r\n\r\n    //We are rendering buttons separately from options\r\n    /**\r\n     * Rendering buttons\r\n     */\r\n    renderButtons = () => {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={this.props.goToSecondPage}\r\n                >\r\n                    Back\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={e =>\r\n                        this.props.submitEvent(e, this.state.invite_list)\r\n                    }\r\n                >\r\n                    Submit Event\r\n                </Button>\r\n                <br />\r\n                <Button\r\n                    type=\"button\"\r\n                    className=\"userCancelButton\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    endIcon={<CancelIcon />}\r\n                    onClick={this.props.cancelEvent}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default AddThirdPage;\r\n","import React, { Component } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\nimport AddSecondPage from \"./AddSecondPage\";\r\nimport AddThirdPage from \"./AddThirdPage\";\r\nimport { db } from \"./firebase\";\r\nimport uuid from \"uuid\";\r\n\r\nexport class AddEvent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //event variables\r\n            title: JSON.parse(localStorage.getItem(\"saved_title\")) || \"\",\r\n            description:\r\n                JSON.parse(localStorage.getItem(\"saved_description\")) || \"\",\r\n            date: JSON.parse(localStorage.getItem(\"saved_date\")) || \"\",\r\n            time: JSON.parse(localStorage.getItem(\"saved_time\")) || \"\",\r\n            calendar: \"default\",\r\n\r\n            //variables to keep track of pages & state\r\n            firstPage: true,\r\n            secondPage: false,\r\n            thirdPage: false,\r\n\r\n            //for social aspect\r\n            //invitees and owners will be emails\r\n            owners: [JSON.parse(localStorage.getItem(\"currentUser\"))], //every time event created, user will be owner\r\n            shared: false, //if this is being shared\r\n            invitees: [], //this only if being shared\r\n\r\n            //snackbar errors\r\n            errorMessageOpen: false,\r\n            message: \"\",\r\n            successMessageOpen: false\r\n        };\r\n    }\r\n\r\n    //----- snackbar functions -----\r\n    handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ errorMessageOpen: false });\r\n    };\r\n    handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        this.setState({ successMessageOpen: false });\r\n    };\r\n\r\n    //----- end of snackbar functions -----\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.viewForm()}\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.errorMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleErrorClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleErrorClose}\r\n                        variant=\"error\"\r\n                        message={this.state.message}\r\n                    />\r\n                </Snackbar>\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"left\"\r\n                    }}\r\n                    open={this.state.successMessageOpen}\r\n                    autoHideDuration={6000}\r\n                    onClose={this.handleSuccessClose}\r\n                >\r\n                    <MySnackbarContent\r\n                        onClose={this.handleSuccessClose}\r\n                        variant=\"success\"\r\n                        message={\"New event has been created\"}\r\n                    />\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //----- first page functions -----\r\n    /**\r\n     * @param {*} t takes user input and sets it equal to title\r\n     */\r\n    handleTitle = t => {\r\n        this.setState({ title: t.target.value });\r\n    };\r\n\r\n    /**\r\n     * @param {*} des takes user input and sets it equal to description\r\n     */\r\n    handleDescription = des => {\r\n        this.setState({ description: des.target.value });\r\n    };\r\n\r\n    /**\r\n     * Submits user input of title and description\r\n     * @param {*} e Takes in event of pressing button\r\n     * @return sets state to go to second page and saves title\r\n     * and description to local storage\r\n     */\r\n    onSubmitFirstPage = e => {\r\n        e.preventDefault();\r\n        //when they go back from second page, the data still there\r\n        if (this.state.title !== \"\" && this.state.title !== null) {\r\n            localStorage.setItem(\r\n                \"saved_title\",\r\n                JSON.stringify(this.state.title)\r\n            );\r\n            localStorage.setItem(\r\n                \"saved_description\",\r\n                JSON.stringify(this.state.description)\r\n            );\r\n            //going to second page & unrendering first page\r\n            this.setState({ firstPage: false, secondPage: true });\r\n        } else {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Please input a title!\"\r\n            });\r\n        }\r\n    };\r\n    //----- end of first page functions -----\r\n\r\n    //----- second page functions -----\r\n    /**\r\n     * If you hit back on the second page, it goes back to first page\r\n     */\r\n    goToFirstPage = () => {\r\n        this.setState({ firstPage: true, secondPage: false });\r\n    };\r\n    //redo error messages later when implementing another date and time picker\r\n    /**\r\n     * @param {string=} date Takes in date from eric's calendar\r\n     * @param {string=} time Takes in time from eric's calendar\r\n     * @param {*} e Takes in event of hitting button to go to next page\r\n     * @return Sets date and time in state\r\n     * @return error message if date & time are null\r\n     */\r\n    goToThirdPage = (date, time, e) => {\r\n        e.preventDefault();\r\n        if (date !== null && date !== \"\" && time !== null && time !== \"\") {\r\n            this.setState({\r\n                date: date,\r\n                time: time,\r\n                firstPage: false,\r\n                secondPage: false,\r\n                thirdPage: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                errorMessageOpen: true,\r\n                message: \"Please input a date and time!\"\r\n            });\r\n        }\r\n    };\r\n    //----- end of second page functions -----\r\n\r\n    //----- third page functions -----\r\n    /**\r\n     * Goes back to second page when hitting back on third page\r\n     */\r\n    goToSecondPage = () => {\r\n        this.setState({ firstPage: false, secondPage: true, thirdPage: false });\r\n    };\r\n\r\n    /**\r\n     * When creating/editing event, it adds/edits it to the database./\r\n     * If the event is going to be shared, it will add it to the\r\n     * shared event collection\r\n     * @param {*} e takes in event of hitting submit event\r\n     * @return saves to firestore database and goes back to home page\r\n     * @todo fix edit event\r\n     */\r\n    submitEvent = (e, invitees) => {\r\n        e.preventDefault();\r\n        const { idOfEditEvent, editingEvent } = this.props;\r\n        const id = uuid.v4();\r\n        \r\n        if (!editingEvent) {\r\n            //add new event\r\n            db.collection(\"events\")\r\n                .doc(id)\r\n                .set({\r\n                    id: id,\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    date: this.state.date,\r\n                    time: this.state.time,\r\n                    owners: this.state.owners,\r\n                    accepted_invitees: [],\r\n                    invitees: invitees\r\n                });\r\n        } else {\r\n            //editing event\r\n            db.collection(\"events\")\r\n                .doc(idOfEditEvent)\r\n                .update({\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    date: this.state.date,\r\n                    time: this.state.time,\r\n                    invitees: invitees\r\n                });\r\n        }\r\n        this.props.setHomePage();\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} check if checkbox is clicked to make event shareable\r\n     * @param {Array} list populatex invitees with contacts' emails\r\n     * @todo this list will be populated with people outside the contact list\r\n     */\r\n\r\n    //----- end of third page functions -----\r\n\r\n    /**\r\n     * Decides what to display when adding event by\r\n     * conditionally renders new pages\r\n     */\r\n    viewForm = () => {\r\n        const btnStyle = {\r\n            textAlign: \"right\"\r\n        };\r\n\r\n        //this will be the same as AddFirstPage\r\n        //just grabbing title and description\r\n        if (this.state.firstPage) {\r\n            return (\r\n                <div>\r\n                    <Container maxWidth=\"sm\">\r\n                        <form onSubmit={e => this.onSubmitFirstPage(e)}>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Event Name\"\r\n                                fullWidth\r\n                                value={this.state.title}\r\n                                margin=\"normal\"\r\n                                onChange={title => this.handleTitle(title)}\r\n                            />\r\n                            <TextField\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                placeholder=\"Event Description ... Optional\"\r\n                                fullWidth\r\n                                value={this.state.description}\r\n                                margin=\"normal\"\r\n                                onChange={des => this.handleDescription(des)}\r\n                            />\r\n                            <br />\r\n                            <div style={btnStyle}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"userContinueButton\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    endIcon={<ArrowForwardIcon />}\r\n                                    onClick={e => this.onSubmitFirstPage(e)}\r\n                                >\r\n                                    Continue\r\n                                </Button>\r\n                            </div>\r\n                            <Button\r\n                                type=\"button\"\r\n                                className=\"userCancelButton\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                endIcon={<CancelIcon />}\r\n                                onClick={this.props.cancelEvent}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </form>\r\n                    </Container>\r\n                </div>\r\n            );\r\n        } else if (this.state.secondPage) {\r\n            return (\r\n                <div>\r\n                    <AddSecondPage\r\n                        cancelEvent={this.props.cancelEvent}\r\n                        goToFirstPage={() => this.goToFirstPage()}\r\n                        goToThirdPage={(date, time, e) =>\r\n                            this.goToThirdPage(date, time, e)\r\n                        }\r\n                    />\r\n                </div>\r\n            );\r\n        } else if (this.state.thirdPage) {\r\n            return (\r\n                <div>\r\n                    <AddThirdPage\r\n                        goToSecondPage={() => this.goToSecondPage()}\r\n                        cancelEvent={this.props.cancelEvent}\r\n                        submitEvent={(e, invitees) => this.submitEvent(e, invitees)}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default AddEvent;\r\n","import React from 'react';\r\nimport { db } from './firebase'\r\nexport default class Form extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { contentList: [], emailList: [], };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit =\r\n\t\t\tthis.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdb\r\n\t\t\t.collection(\"users\")\r\n\t\t\t.doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n\t\t\t.get()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (data.exists) {\r\n\t\t\t\t\tthis.setState({ emailList: data.data().contacts, contentList: data.data().events })\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"test-mailing\">\r\n\t\t\t\t<h1>Let's see if it works</h1>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"test-mailing\"\r\n\t\t\t\t\t\tname=\"test-mailing\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder=\"Send event\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={this.state.feedback}\r\n\t\t\t\t\t\tstyle={{ width: '100%', height: '150px' }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tthis.setState({ feedback: event.target.value })\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\tconst templateId = 'yes';\r\n\r\n\t\tthis.sendFeedback(templateId, { message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email })\r\n\t\tthis.props.handleDisplay();\r\n\t}\r\n\r\n\tsendFeedback(templateId, variables) {\r\n\t\twindow.emailjs.send(\"gmail\", templateId, { \"send_to\": this.state.emailList, \"content\": this.state.contentList })   // insert custom emails for send_to\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log('Email successfully sent!');\r\n\t\t\t\tconsole.log(variables);\r\n\t\t\t})\r\n\t\t\t// Handle errors here however you like, or use a React error boundary\r\n\t\t\t.catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\r\n\t}\r\n}","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n//import CardMedia from \"@material-ui/core/CardMedia\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import clsx from \"clsx\";\r\n//import { withStyles } from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nclass Cards extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const handleExpandClick = () => {\r\n            this.setState({ expanded: !this.state.expanded });\r\n        };\r\n        const { data, isShared } = this.props;\r\n        let invitees = data.invitees ? data.invitees.join(\"\\n\") : \"\";\r\n        let shareStatus = isShared ? \"Shared event\" : \"Made by me\";\r\n        let deleteButton = !isShared ? (\r\n            <IconButton\r\n                aria-label=\"delete\"\r\n                onClick={() => this.props.deleteEvent(data.id)}\r\n            >\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        ) : null;\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        {shareStatus}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {data.title}\r\n                    </Typography>\r\n                    <Typography>{data.description}</Typography>\r\n                    <Typography>{data.date}</Typography>\r\n                    <Typography>{data.time}</Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => this.props.editEvent(data.id)}\r\n                    >\r\n                        edit\r\n                    </Button>\r\n                    <IconButton aria-label=\"share\">\r\n                        <ShareIcon />\r\n                    </IconButton>\r\n                    {deleteButton}\r\n                    <IconButton\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={this.state.expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                        <Typography>\r\n                            Owners: {data.owners}\r\n                            <br/>\r\n                            Invitees: {invitees}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\nexport default Cards;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport \"react-table/react-table.css\";\r\nimport Form from \"./Form\";\r\nimport { db } from \"./firebase\";\r\nimport Cards from \"./Cards\";\r\n\r\nexport class EventHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            openMenu: false,\r\n            showForm: false,\r\n            showShared: false,\r\n            events: [],\r\n            sharedEvents: []\r\n        };\r\n    }\r\n\r\n    sendEmail = () => {\r\n        this.setState({ showForm: true });\r\n    };\r\n\r\n    switchEventView = () => {\r\n        this.setState({ showShared: !this.state.showShared });\r\n    };\r\n\r\n    viewForm = () => {\r\n        if (this.state.showShared) {\r\n            return <div>Shared Events <br/> {this.showSharedEvents()}</div>;\r\n        } else {\r\n            return <div>Personal Events <br/> {this.showEvents()}</div>;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Displays event table\r\n     * @return Header saying no events or Table of Events\r\n     */\r\n    showEvents = () => {\r\n        const { events } = this.state;\r\n        if (events === null || events === undefined || events.length === 0) {\r\n            return <h2>No events</h2>;\r\n        } else {\r\n            return events.map((event, index) => (\r\n                <Cards\r\n                    key={index}\r\n                    data={event}\r\n                    editEvent={id => this.props.editEvent(id)}\r\n                    deleteEvent={id => this.deleteEvent(id)}\r\n                ></Cards>\r\n            ));\r\n        }\r\n    };\r\n    showSharedEvents = () => {\r\n        const { sharedEvents } = this.state;\r\n        if (\r\n            sharedEvents === null ||\r\n            sharedEvents === undefined ||\r\n            sharedEvents.length === 0\r\n        ) {\r\n            return <h2>No shared events</h2>;\r\n        } else {\r\n            console.log();\r\n            return sharedEvents.map((event, index) => (\r\n                <Cards key={index} data={event} shared={true}></Cards>\r\n            ));\r\n        }\r\n    };\r\n    getBtnStyle = () => {\r\n        return {\r\n            textAlign: \"right\",\r\n            padding: \"10px\"\r\n        };\r\n    };\r\n\r\n    getMainStyle = () => {\r\n        return {\r\n            textAlign: \"center\",\r\n            padding: \"5px\"\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Opening drop down menu\r\n     * @param e takes in event of clicking drop down menu\r\n     * @return position of drop down menu\r\n     * @return boolean to open menu\r\n     */\r\n    handleClick = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n            openMenu: !this.state.openMenu\r\n        });\r\n    };\r\n\r\n    /**\r\n     * closes drop down menu\r\n     */\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, openMenu: !this.state.openMenu });\r\n    };\r\n\r\n    /**\r\n     * Clicks add event option and starts adding event\r\n     */\r\n    handleAddEventMenu = () => {\r\n        this.handleClose();\r\n        this.props.beginAddEvent();\r\n    };\r\n\r\n    /**\r\n     * this shows form for inviting others\r\n     */\r\n    handleDisplay = () => {\r\n        this.setState({ showForm: false });\r\n    };\r\n\r\n    /**\r\n     * Renders table and buttons below the header.\r\n     * @return Buttons\r\n     * @return Event Table\r\n     * @return Event Calendar(not implemented)\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.showForm && (\r\n                    <div>\r\n                        <Form handleDisplay={this.handleDisplay}></Form>\r\n                    </div>\r\n                )}\r\n                <div style={this.getBtnStyle()}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        aria-controls=\"simple-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={e => this.handleClick(e)}\r\n                    >\r\n                        Create Event\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.openMenu}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MenuItem onClick={this.handleAddEventMenu}>\r\n                            Event\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </div>\r\n                <div style={this.getMainStyle()}>\r\n                    <Button onClick={() => this.switchEventView()}>\r\n                        Switch\r\n                    </Button>\r\n                    {this.viewForm()}\r\n                    {/* where calendar would go from eric */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Delete Event\r\n     */\r\n    deleteEvent = id => {\r\n        db.collection(\"events\")\r\n            .doc(id)\r\n            .delete();\r\n\r\n        let tempObject = { temp: [] };\r\n\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        db.collection(\"events\")\r\n            .where(\"owners\", \"array-contains\", currentUser)\r\n            .get()\r\n            .then(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ events: tempObject.temp });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n        db.collection(\"events\")\r\n            .where(\"invitees\", \"array-contains\", currentUser)\r\n            .get()\r\n            .then(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ sharedEvents: tempObject.temp });\r\n            })\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    /**\r\n     * @return events that current user made that are not shared\r\n     * @return shared events which are events current user shared(invited people)\r\n     */\r\n    componentDidMount() {\r\n        let tempObject = { temp: [] };\r\n\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        db.collection(\"events\")\r\n            .where(\"owners\", \"array-contains\", currentUser)\r\n            .get()\r\n            .then(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ events: tempObject.temp });\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n        db.collection(\"events\")\r\n            .where(\"invitees\", \"array-contains\", currentUser)\r\n            .get()\r\n            .then(data => {\r\n                tempObject.temp = [];\r\n                data.forEach(doc => {\r\n                    tempObject.temp.push(doc.data());\r\n                });\r\n                this.setState({ sharedEvents: tempObject.temp });\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n}\r\n\r\nexport default EventHome;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MySnackbarContent from \"./Snackbar\";\r\n\r\n//database\r\nimport { db, firebase } from \"./firebase\";\r\n\r\nexport default function AddContact() {\r\n    //----- states -----\r\n    const [open, setOpen] = React.useState(false);\r\n    const [userInput, setUserInput] = React.useState(\"\");\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [errorOpen, setErrorOpen] = React.useState(false);\r\n    const [successOpen, setSuccessOpen] = React.useState(false);\r\n    const [message, setMessage] = React.useState(\"\");\r\n    //----- end of states -----\r\n\r\n    //----- styles -----\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n    //----- end of styles -----\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleErrorClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setErrorOpen(false);\r\n    };\r\n    const handleSuccessClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setSuccessOpen(false);\r\n    };\r\n\r\n    /**\r\n     * Adds contact by referencing database\r\n     */\r\n    const handleAddContact = () => {\r\n        /*\r\n            first it checks in database if userinput exists\r\n            then it accesses the current user's doc, and updates\r\n            their contact list with the user's input contact\r\n\r\n            when you add the contact, it adds the name and email\r\n\r\n            concerns: we did not use boolean variables to seperate the\r\n            check from the database addition because it does not update \r\n            fast enough and the contact does not get added\r\n        */\r\n        db.collection(\"users\")\r\n            .doc(userInput)\r\n            .get()\r\n            .then(docSnapshot => {\r\n                if (docSnapshot.exists) {\r\n                    db.collection(\"users\")\r\n                        .doc(currentUser)\r\n                        .update({\r\n                            contacts: firebase.firestore.FieldValue.arrayUnion(\r\n                                {\r\n                                    displayName: docSnapshot.data().displayName,\r\n                                    email: userInput,\r\n                                }\r\n                            )\r\n                        });\r\n                    handleClose();\r\n                    setSuccessOpen(true);\r\n                    setMessage(\"Successfully added contact!\");\r\n                } else {\r\n                    setErrorOpen(true);\r\n                    setMessage(\"Invalid contact!\");\r\n                }\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Handles User Input when entering contact's\r\n     * email\r\n     * @param {*} t text that user types in\r\n     */\r\n    const handleInput = t => {\r\n        setUserInput(t.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    Add Contact\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Adding Contact</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To add a contact, please enter their email address.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={handleInput}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAddContact} color=\"primary\">\r\n                        Enter\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={errorOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleErrorClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleErrorClose}\r\n                    variant=\"error\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"left\"\r\n                }}\r\n                open={successOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleSuccessClose}\r\n            >\r\n                <MySnackbarContent\r\n                    onClose={handleSuccessClose}\r\n                    variant=\"success\"\r\n                    message={message}\r\n                />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ViewContacts() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [currentUser] = React.useState(\r\n        JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    );\r\n    const [c, setListofContacts] = React.useState([]);\r\n\r\n    const btnStyle = {\r\n        textAlign: \"left\"\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection(\"users\")\r\n            .doc(currentUser)\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    setListofContacts(doc.data().contacts);\r\n                }\r\n            });\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const listOfContacts = c.map((contact, index) => (\r\n        <li key={index}>\r\n            {contact.displayName} <br /> {contact.email}\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <div style={btnStyle}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    View Contacts\r\n                </Button>\r\n            </div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle>{\"List of your Contacts\"}</DialogTitle>\r\n                <DialogContent>{listOfContacts}</DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddContact from './AddContact'\r\nimport ViewContacts from './ViewContacts'\r\nimport firebase from \"firebase\";\r\n//import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { db } from \"./firebase\";\r\n\r\nconst headerStyle = {\r\n    background: \"#D0E6FF\",\r\n    color: \"#5a769e\",\r\n    textAlign: \"center\",\r\n    padding: \"3px\",\r\n    fontSize: \"24px\",\r\n    fontFamily: \"Courier New\",\r\n    fontStyle: \"italic\"\r\n};\r\n\r\nconst signOutStyle = {\r\n    textAlign: \"right\"\r\n};\r\n\r\n\r\nexport class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            addContactsPrompt: false,\r\n        };\r\n    }\r\n\r\n    //localStorage is to access database document\r\n    /**\r\n     * when header mounts, it updates user data\r\n     * @return user data from the database\r\n     */\r\n    componentDidMount() {\r\n        db.collection(\"users\")\r\n            .doc(JSON.parse(localStorage.getItem(\"currentUser\")))\r\n            .get()\r\n            .then(data => {\r\n                if (data.exists) {\r\n                    this.setState({ user: data.data()});\r\n                } else {\r\n                    //console.log(\"Sad toot\");\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Signs out user, kicks them back to login page\r\n     * @return Back to login page and clears localStorage\r\n     */\r\n    onClickSignOut = () => {\r\n        firebase.auth().signOut();\r\n        //localStorage.removeItem(\"currentUser\");\r\n        localStorage.clear();\r\n    };\r\n\r\n    /**\r\n     * Renders the buttons to view/add contacts and\r\n     * sign out button and name of user\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header style={headerStyle}>\r\n                    <h1>Schedule It</h1>\r\n                    <AddContact/>\r\n                    <ViewContacts/>\r\n\r\n                    {this.state.user && (\r\n                        <div>\r\n                            <div style={signOutStyle}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"small\"\r\n                                    component={Link}\r\n                                    to=\"/\"\r\n                                >\r\n                                    {this.state.user.email}\r\n                                </Button>\r\n                            </div>\r\n                            <div>Welcome {this.state.user.displayName}</div>\r\n                        </div>\r\n                    )}\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport AddEvent from \"./AddEvent\";\r\nimport EventHome from \"./EventHome\";\r\nimport Header from \"./header\";\r\nimport { db } from \"./firebase\";\r\n\r\nexport class EventManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            homePage: true,\r\n            editingEvent: false,\r\n            idOfEditEvent: \"\"\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Starts the process of adding a new event\r\n     * @return sets home page to false\r\n     * @return clears localStorage of event details\r\n     */\r\n    beginAddEvent = () => {\r\n        //have to account for them refreshing\r\n        localStorage.removeItem(\"saved_title\");\r\n        localStorage.removeItem(\"saved_description\");\r\n        localStorage.removeItem(\"saved_time\");\r\n        localStorage.removeItem(\"saved_date\");\r\n        this.setAdd();\r\n    };\r\n\r\n    /**\r\n     * @param id id of event that is being edited\r\n     * @param viewShared if we are editing shared event\r\n     * or normal event\r\n     *\r\n     */\r\n    editEvent = (id, viewShared) => {\r\n        //accessing shared event collections\r\n        if (viewShared) {\r\n            //db.collection(\"shared_events\").doc(id)\r\n        }\r\n        //accessing normal event collections\r\n        else {\r\n            db.collection(\"events\")\r\n                .doc(id)\r\n                .get()\r\n                .then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log(\"TOOT\");\r\n                        localStorage.setItem(\r\n                            \"saved_title\",\r\n                            JSON.stringify(doc.data().title)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_description\",\r\n                            JSON.stringify(doc.data().description)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_date\",\r\n                            JSON.stringify(doc.data().date)\r\n                        );\r\n                        localStorage.setItem(\r\n                            \"saved_time\",\r\n                            JSON.stringify(doc.data().time)\r\n                        );\r\n                    }\r\n                });\r\n        }\r\n        this.setState(\r\n            {\r\n                editingEvent: true,\r\n                idOfEditEvent: id\r\n            },\r\n            this.setAdd()\r\n        );\r\n    };\r\n\r\n    /**\r\n     * @param id takes in the id of the event to be deleted\r\n     * @return {array} returns the updated array with\r\n     * event removed to the database\r\n     * @todo delete either shared or personal events\r\n     */\r\n\r\n    /**\r\n     * Cancels the process of event creation\r\n     * @return Return back to the home page\r\n     */\r\n    cancelEvent = () => {\r\n        // localStorage.removeItem(\"saved_title\");\r\n        // localStorage.removeItem(\"saved_description\");\r\n        // localStorage.removeItem(\"saved_time\");\r\n        // localStorage.removeItem(\"saved_date\");\r\n        this.setHomePage();\r\n    };\r\n\r\n    /**\r\n     * function to start add/edit event\r\n     * @return sets home page to false\r\n     */\r\n    setAdd = () => {\r\n        this.setState({ homePage: false });\r\n    };\r\n\r\n    /**\r\n     * Sets view back to home page\r\n     * @return Home Page\r\n     */\r\n    setHomePage = () => {\r\n        this.setState({\r\n            homePage: true,\r\n            editingEvent: false,\r\n            idOfEditEvent: \"\"\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Decides what to render, between the\r\n     * home page and event creation page\r\n     */\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {this.state.homePage && (\r\n                    <EventHome\r\n                        beginAddEvent={this.beginAddEvent}\r\n                        editEvent={this.editEvent}\r\n                        deleteEvent={this.deleteEvent}\r\n                    />\r\n                )}\r\n                {!this.state.homePage && (\r\n                    <AddEvent\r\n                        cancelEvent={this.cancelEvent}\r\n                        setHomePage={() => this.setHomePage()}\r\n                        editingEvent={this.state.editingEvent}\r\n                        idOfEditEvent={this.state.idOfEditEvent}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventManager;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.png\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n// import firebase from \"firebase\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { firebase, db } from \"./firebase\";\r\n\r\nvar CLIENT_ID = \"YOUR_OAUTH_CLIENT_ID\";\r\nconst logoStyle = {\r\n    textAlign: \"center\"\r\n};\r\n\r\nconst logInStyle = {\r\n    textAlign: \"center\",\r\n    top: \"100%\",\r\n    fontSize: \"20px\",\r\n    position: \"relative\"\r\n};\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: \"popup\",\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n        {\r\n            provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            authMethod: \"https://accounts.google.com\",\r\n            // Required to enable ID token credentials for this provider.\r\n            clientId: CLIENT_ID\r\n        },\r\n        {\r\n            provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n            requireDisplayName: true\r\n        }\r\n    ],\r\n    callbacks: {\r\n        // Avoid redirects after sign-in.\r\n        signInSuccessWithAuthResult: () => false\r\n    }\r\n};\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isSignedIn: false,\r\n\t\t\tpicURL: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({\r\n                    isSignedIn: !!user\r\n                });\r\n                //lets contacts data persist\r\n                let docReference = db.collection(\"users\").doc(user.email);\r\n                docReference.get().then(documentSnapshot => {\r\n                    if (!documentSnapshot.exists) {\r\n                        docReference.set({\r\n                            displayName: user.displayName,\r\n                            email: user.email,\r\n                            contacts: [],\r\n                            events: [],\r\n                            polls: [],\r\n                            pictureURL: user.photoURL,\r\n                        });\r\n                    }\r\n                });\r\n\r\n                let docRef = db.collection('users').doc(user.email);\r\n                docRef.get().then(doc => {\r\n                    if (!doc.exists) {\r\n                        //console.log('No such document!');\r\n                    } else {\r\n                        //console.log('Document data:', doc.data());\r\n                        this.setState({ picURL: doc.data().pictureURL });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('Error getting document', err);\r\n                });\r\n\r\n                //keep this so header can load the page\r\n                localStorage.setItem(\"currentUser\", JSON.stringify(user.email));\r\n                //console.log(\"toot\");\r\n            }\r\n        });\r\n    };\r\n\r\n    onClick = () => {\r\n        firebase.auth().signOut();\r\n        this.setState({ isSignedIn: false });\r\n        localStorage.clear();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={logoStyle}>\r\n                    <header>\r\n                        <img src={logo} alt=\"Schedule It\" />\r\n                    </header>\r\n                </div>\r\n                {this.state.isSignedIn ? (\r\n                    <div style={logInStyle}>\r\n                        <h3>\r\n\t\t\t\t\t\t\t<img src={this.state.picURL} alt=\"Profile\" vertical-align=\"middle\" width=\"100px\" height=\"100px\" border-radius=\"50%\" />\r\n                            <br />\r\n\t\t\t\t\t\t\tName:\r\n                            {firebase.auth().currentUser.displayName}\r\n                            <br />\r\n                            email: {firebase.auth().currentUser.email}\r\n                        </h3>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            component={Link}\r\n                            to=\"/home\"\r\n                        >\r\n                            Go to Home Page\r\n                        </Button>\r\n                        <br />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => this.onClick()}\r\n                        >\r\n                            Sign Out\r\n                        </Button>\r\n                    </div>\r\n                ) : (\r\n                    <StyledFirebaseAuth\r\n                        uiCallback={ui => ui.disableAutoSignIn()}\r\n                        uiConfig={uiConfig}\r\n                        firebaseAuth={firebase.auth()}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport EventManager from \"./components/EventManager\";\r\nimport Login from './components/Login'\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Login/>\r\n                </Route>\r\n                <Route exact path=\"/home\">\r\n                    <EventManager />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}